#Java/gi几/d款/q性能分析工具/gi的/ude1对比/gi
在/p给/p客户/n的/ude1应用程序/nz维护/gi的/ude1过程/gi中/f，/w我/rr注意到/v在/p高/a负载/gi下/f的/ude1一些/m性能/gi问题/gi。/w理论上/nz，/w增加/v对/p应用程序/nz的/ude1负载/gi会/v使/v性能/gi等/udeng比率/n的/ude1下降/vi。/w然而/c，/w我/rr认为/v性能/gi下降/vi的/ude1比率/n远远/d高于/v负载/gi的/ude1增加/v。/w我/rr也/d发现/v，/w性能/gi可以/v通过/p改变/v应用程序/nz的/ude1逻辑/n来/vf提升/gi，/w甚至/d达到/v极限/n。/w为了/p更/d详细/gi的/ude1了解/v这一点/nz，/w我们/rr需要/v做/v一/nz些/q性能/gi分析/gi.../w在/p给/p客户/n进行/vn应用程序/nz维护/gi的/ude1过程/gi中/f，/w我/rr注意到/v一/nz些/q关于/p高/a负载/gi条件/n下/f的/ude1性能/gi问题/gi。/w理论上/nz，/w增加/v对/p应用程序/nz的/ude1负载/gi会/v使/v性能/gi有所/v下降/vi，/w但是/c我/rr认为/v性能/gi下降/vi的/ude1比率/n远远/d高于/v负载/gi的/ude1增加/v，/w同时/c我/rr也/d发现/v，/w性能/gi可以/v通过/p改变/v应用程序/nz的/ude1逻辑/n来/vf提升/gi。/w为了/p更/d详细/gi地/ude2了解/v这一点/nz，/w我们/rr需要/v做/v一/nz些/q性能/gi分析/gi，/w这时/rzt，/w我们/rr自然/n就要/d用/p到/v一/nz些/q性能分析工具/gi。/wjava/gi有/vyou许多/m的/ude1性能分析工具/gi，/w可以/v帮助/v我们/rr弄清楚/nz这个/rz问题/gi，/w但是/c我们/rr应该/v使用/gi哪/ry一/nz款/q工具/gi呢/y？/w为了/p做出/v正确/a的/ude1选择/gi，/w我/rr列出/v性能/gi分析/gi应/v满足/v一/nz些/q最低/a要求/n：/w必须/d包括/v对/p应用程序/nz的/ude1类/gi、/w方法/gi及/cc时间/gi的/ude1监测/vn必须/d包括/v对/p内存/gi的/ude1监测/vn必须/d具有/v易用性/gi我/rr配置/gi了/ule一个/mq使用/girestful/nz接口/gi的/ude1spring/gi应用程序/nz，/w使用/gimongodb/gi作为/p数据存储/gi，/w还/d使用/gisolr/nz搜索/gi，/w并/cc在/ptomcat/nz服务器/gi上/f部署/gi。/w参考/gi工具/gi：/w1./nzvisualvmvisualvm/nz是/vshi一个/mq资源/gi分析/gi工具/gi，/w一直/d从/pjdk /nz6/nz更新/gi到/v7/nz，/w它/rr默认/v内存/gi和/cccpu/gi的/ude1监视/v，/w它/rr可以/v告诉/v你/rr哪个/ry类/gi和/cc方法/gi消耗/gi资源/gi，/w但/c它/rr不会/v显示/gi代码/gi流程/gi。/w2./nzjprofilerjprofiler/nz很容易/nz安装/gi，/w并且/c通过/p向导/gi，/w你/rr可以/v选择/gi应用服务器/gi用来/v运行/gi应用程序/nz。/w我/rr不得不/d选择/gi使用/gijpofiler/nz应用服务器/gi的/ude1主目录/n，/w以及/cc向导/gi生成/v的/ude1一个/mq单独/d的/ude1启动/gi脚本/gi。/w然后/c运行/gi服务器/gi。/w在/p监听/gi会话/v的/ude1过程/gi中/f，/w它/rr会/v提供/v几个/nz选项/gi，/w它/rr可以/v记录/gi内存/gi的/ude1使用/gi和/cccpu/gi的/ude1使用率/n。/w在/p查看/gicpu/gi使用率/n的/ude1同时/c，/w可以/v看到/v执行/v路径/gi。/w这/rzv让/v我/rr看到/v应用程序/nz大部分/n时间/gi都/d花/n在/p请求/gi上/f。/w我们/rr可以/v将/dintellij/nz插件/gi安装/gi到/vide/nz上/f，/w那么/c运行/gijprofiler/nz会/v更加/d便利/an。/w比如/v，/w可以/v直接/ad帮/v我/rr启动/gitomcat/nz。/w3./nzyourkityourkit/nz是/vshi我/rr在/p另一个/nz项目/gi中/f偶然/a发现/v的/ude1一/nz款/q性能分析工具/gi，/w它/rr的/ude1安装/gi很/d简单/a。/w安装/gi时/qt有一个/nz选项/gi，/w可以/v安装/gi一个/mq插件/gi到/v我/rr的/ude1ide/nz。/w安装/gi后/f，/w运行/gi应用程序/nz，/w使用/gi该/rz插件/gi，/w它/rr会/v自动/d连接/gi到/vyourkit/nz。/w它/rr有/vyou一个/mq漂亮/a的/ude1用户界面/gi可以/v查看/gi到/v内存/gi和/cccpu/gi的/ude1监测/vn，/w同时/c也/d可以/v看到/v请求/gi的/ude1执行/v路径/gi。/w4./nzjprobe/nz我/rr刚开始/nz创建/gijprobe/nz时/qt遇到/v点/gi困难/an。/w安装/gi并/cc不是/c直接/ad完成/v，/w我/rr需要/v对/p它/rr进行/vn配置/gi。/w它/rr采用/v了/ule类/gijprofiler/nz一样/uyy的/ude1设置/gi。/w它/rr会/v在/p你/rr的/ude1tomcat/nz目录/gi中/f生成/v启动/gi脚本/gi，/w可以/v通过/p脚本/gi启动/gi服务器/gi并/cc监听/gi会话/v。/w它/rr的/ude1界面/gi包含/v有/vyou按钮/n和/cc表/n，/w其中/rz可以/v看到/v内存/gi的/ude1使用/gi，/w但/c无法/v在/p进程/gi中/f找到/v执行/v路径/gi。/w5./nzspring insight/nz听到/vtc server/nz有/vyouspring insight/nz监控/gi界面/gi，/w于是/cc我/rr兴奋/a地/ude2尝试/v了/ule一下/m。/w安装/gi完成/v后/f，/w并/cc设置成/ntc server/nz的/ude1开发者/gi版/n，/w然后/c部署/gi应用程序/nz在/ptc server/nz上/f。/w我/rr查看/giinsight/nz界面/gi，/w它/rr可以/v很好/ad的/ude1监视/v类/gi和/cc方法/gi，/w并能/v看到/v完成/v这个/rz方法/gi用/p了/ule多少/ry时间/gi。/w我/rr还/d能/v看到/v输入/v参数/gi，/w以及/cc返回/v。/w由于/p我/rr的/ude1应用程序/nz是/vshi基于/pspring/gi的/ude1，/wspring insight/nz能够/v提供/v非常/d有/vyou用/p的/ude1数据/gi。/wtc server/nz插件/gi在/pide/nz上/f的/ude1配置/gi与/cctomcat/nz的/ude1配置/gi类/gi。/wspringsource/nz工具/gi套件/n就/d自带/nspring insight/nz。/w结/v /x论/v看到/v这/rzv五款/nz性能分析工具/gi，/w我/rr可以/v肯定/v地/ude2说/v，/w它们/rr都/d非常/d不错/a。/w如果/c你/rr有/vyou基于/pspring/gi的/ude1应用程序/nz，/w那么/c选择/gispring insight/nz显然/ad是/vshi最佳/z的/ude1。/w它/rr一直/d是/vshi免费/vd的/ude1，/w但/c你/rr需要/v部署/gi你/rr的/ude1应用/gi在/ptc server/nz上/f。/w如果/c你/rr想/v监听/gi本地/gi和/cc远程/gi的/ude1进程/gi，/w我会/r选择/gijprofiler/nz或/cyourkit/nz./nz这/rzv两/nz个/q也/d可以/v帮助/vspring insight/nz来/vf监测/vn、/w找到/v性能/gi瓶颈/gi。/wjprofiler/nz和/ccyourkit/nz已经/d能/v满足/v我/rr的/ude1上述/b要求/n。/wjprofiler/nz、/wyourkit/nz和/ccspring insight/nz都/d可以/v跟踪/vn应用程序/nz的/ude1类/gi和/cc方法/gi的/ude1流向/v。/wjprofiler/nz和/ccyourkit/nz可以/v显示/gi内存/gi使用/gi情况/n。/w虽然/cspring insight/nz不/d可以/v显示/gi内存/gi使用/gi情况/n，/w但/c它/rr可以/v很好/ad的/ude1显示/gi吞吐量/gi的/ude1趋势/gi。/w这/rzv三款/nz性能分析工具/gi功能/gi很/d清楚/a，/w不/d混乱/a，/w而且/c容易/ad使用/gi。/w最后/f，/w他们/rr都/d有/vyou自己/rr的/ude1 ide/nz插件/gi。/w希望/v本文/r能/v帮助/v你/rr做出/v正确/a的/ude1选择/gi。/w