#D3/gijs/gi-绘制/nzSVG/nz
另外/c一个/mq网站/gi：/w现在/t，/w我们/rr已经/d熟悉/v了/ulesvg/gi图像/gi的/ude1基本/a结构/gi和/cc元素/gi，/w那么/c，/w应该/v怎样/ryv用/p数据/gi生成/v图形/gi呢/y？/w你/rr可能/v已经/d注意到/v，/wsvg/gi元素/gi的/ude1所有/b属性/gi都/d是/vshi标签/gi内/f属性/gi的/ude1形式/gi。/w即/v，/w它们/rr在/p标签/gi内/f表示/v为/p属性/gi//nz的/ude1二元组/nz，/w比如/v看起来/v非常/d像/vhtml/gi吧/y！/w之前/f，/w我们/rr已经/d用/p了/uled3/gi的/ude1常用/a方法/gi和/cc来/vf生成/v新的/ahtml/gi元素/gi，/w并/cc设置/gi它们/rr的/ude1属性/gi。/w因为/csvg/gi元素/gi也/d属于/vdom/gi，/w因此/c和/cchtml/gi元素/gi没什么/vl两样/nz，/w所以/c，/w我们/rr也/d可以/v以/p完全/ad一样/uyy的/ude1方式/n来/vf使用/gi和/cc来/vf生成/vsvg/gi图像/gi。/w生成/vsvg/gi首先/d，/w我们/rr需要/v生成/v一个/mqsvg/gi元素/gi，/w它/rr是/vshi所有/bsvg/gi图形/gi的/ude1容器/gi。/w这/rzv句/q代码/gi的/ude1意思/n是/vshi，/w找到/v元素/gi，/w然后/c，/w将/d元素/gi刚好/d插到/nz结束/v标签/gi之前/f。/w这么/rz写/v自然/n没什么/vl问题/gi，/w但是/c我/rr建议/gi把/pba返回/v保存/gi下来/vf：/w因为/cd3/gi中的/v大部分/n方法/gi都/d返回/v它/rr所/usuo操作/gi的/ude1元素/gi的/ude1引用/gi，/w这里/rzs的/ude1变量/gi是/vshi的/ude1返回/v的/ude1一个/mq引用/gi。/w不要/d把/pba仅仅/d视为/v是/vshi一个/mq变量/gi，/w而要/c把/pba它/rr看成/v是/vshi刚/d创建/gi的/ude1新的/asvg/gi对象/gi。/w这个/rz引用/gi可以/v让/v你/rr少/a写/v很/d多/a代码/gi，/w因为/c你/rr没/d必要/a每次/r都/d去/vf搜索/gisvg/gi，/w比如/v，/w而/cc只/d需要/v用/p指定/v的/ude1这个/rz对象/gi。/w当然/d，/w你/rr完全/ad可以/v将/d上面/f的/ude1两/nz句/q代码/gi合为一体/l。/w从/p中/f什么/ry也/d看不到/v，/w但是/c你/rr确实/ad可以/v通过/p看到/vdom/gi中/f有/vyou一个空/nz的/ude1svg/gi元素/gi。/w为了/p舒服/a一点/m，/w我/rr建议/gi将/d宽度/n和/cc高度/d存为/v变量/gi，/w放在/v代码/gi开始/v醒目/a的/ude1位置/gi，/w比如/v(/nz)/nz我/rr后面/f所有/b的/ude1示例/gi都/d保持/v了/ule这个/rz习惯/n。/w图像/gi大小/n存/v成/v变量/gi后/f，/w可以/v方便/a后续/vn代码/gi中的/v引用/gi，/w比如/v用/p变量/gi存储/gi常用/a数/n，/w是/vshi编程/gi的/ude1惯用/vn做法/n。/w如果/c你/rr向上/vi苍/ag请愿/vi将/d整个/b世界/gi变量化/nz，/w我会/r非常/d乐意/v签上/v我/rr的/ude1名字/n的/ude1。/w数据/gi驱动/gi的/ude1形状/n现在/t是/vshi时候/n画/v一/nz些/q图形/gi形状/n了/ule。/w还是/c使用/gi原来/d的/ude1简单/a数据/gi集/q。/w然后/c，/w使用/gi来/vf遍历/gi这些/rz数据点/nz，/w让/v每个/r数据点/nz生成/v一个/mq。/w再次/d强调/v，/w返回/v的/ude1是/vshi所有/b圆/v的/ude1空/ng引用/gi(/nz这些/rz圆/v此时/r并不/d存在/v)/nz，/w将/d我们/rr的/ude1数据绑定/gi到/v我们/rr将要/d创建/gi的/ude1元素/gi上/f，/w而/cc返回/v的/ude1是/vshi新元素/nz的/ude1占位/v元素/gi的/ude1引用/gi，/w最后/f，/w添加/gi一个/mq到/vdom/gi中/f。/w为了/p便于/v后面/f的/ude1代码/gi再次/d引用/gi所有/b的/ude1这些/rz圆/v，/w我们/rr可以/v用/p一个/mq变量/gi将/d它们/rr的/ude1引用/gi存/v起来/vf。/w圆/v倒是/d生成/v了/ule，/w但/c它/rr需要/v设置/gi其/rz位置/gi和/cc大小/n。/w下面/f的/ude1代码/gi才/d是/vshi真正/d出/vf奇迹/n的/ude1地方/n，/w对着/p膜拜一下/nz。/w我们/rr再/d逐行/gi理解/gi这/rzv句/q代码/gi。/w这段/r代码/gi的/ude1意思/n是/vshi在/p所有/b圆/v的/ude1引用/gi上/f为/p每个/r圆/v设置/gi年/qt属性/gi。/w我们/rr的/ude1数据/gi已经/d绑定/gi到/v了/ule元素/gi上/f，/w所以/c对于/p每个/r，/w对应/vi于/p数据/gi集/q(/nz5/nz,/nz10/nz,/nz15/nz,/nz20/nz,/nz25/nz)/nz中的/v某个/rz。/w而/cc另一个/nz参数/gi，/w也/d会/v自动/d地/ude2累加/vi，/w也/d就是/v变成/v数据点/nz的/ude1序号/n。/w比如/v，/w第/mq1/nz个/q圆/v的/ude1为/p0/nz，/w第/mq2/nz个/q为/p1/nz，/w依此类推/vl。/w这里/rzs，/w的/ude1作用/gi是/vshi让/v圆/v的/ude1中心/gi坐标/gi递增/vi，/w从而/c从/p左/f至/p右/f排列/gi，/w因为/c的/ude1是/vshi一直/d增大/v的/ude1。/w为了/p确保/v在/p函数/gi体/ng中/f可用/v，/w你/rr必须/d让/v它/rr成为/v函数/gi定义/gi的/ude1一个/mq参数/gi(/nz)/nz。/w而且/c，/w前面/f的/ude1也/d不能/v省/n，/w即使/c你/rr并/cc没有/v用/p到/v它/rr。/w否则/c，/w函数/gi会/v将/d第/mq1/nz个/q参数/gi视为/v，/w即/v数据点/nz的/ude1。/w下/f一行/n代码/gi是/vshi其中/rz，/w是/vshi整个/bsvg/gi图像/gi的/ude1高度/d，/w所以/c是/vshi半高/nz。/w这样/rzv的/ude1效果/gi是/vshi让/v所有/b的/ude1圆/v都/d排列/gi在/p图像/gi垂直/gi方向/gi的/ude1中间/f。/w最后/f，/w每个/r圆/v的/ude1半径/n被/pbei设置/gi为/p，/w即/v对应/vi的/ude1数据点/nz的/ude1。/w漂亮/a的/ude1颜色/gi填充/v颜色/gi和/cc线/n划/v颜色/gi只是/d另外/c两/nz种/q属性/gi，/w所以/c，/w你/rr可以/v用/p同样/d的/ude1方法/gi来/vf设置/gi。/w比如/v通过/p下面/f的/ude1代码/gi于是/cc，/w我们/rr得到/v下面/f的/ude1图像/gi(/nz)/nz当然/d，/w你/rr可以/v混合/vn和/cc组合/gi各种/rz属性/gi，/w并/cc定制/n各种各样/bl的/ude1函数/gi来/vf设置/gi属性/gi。/w数据可视化/gi的/ude1技巧/gi本来/d就/d在于/v选择/gi合适/a的/ude1映射/gi，/w以便/d让/v你/rr的/ude1数据/gi的/ude1视觉/n表现/v派上用场/n，/w并/cc被/pbei用户/gi所/usuo理解/gi。/w