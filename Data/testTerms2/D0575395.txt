#设计模式/nz五――/nz依赖倒转原则/gi
一/nz、/w依赖倒转原则/gi：/w抽象/gi不应/v依赖于/v细节/gi，/w细节/gi应该/v依赖于/v抽象二/nz、/w依赖倒转原则/gi主要/b特征/gi：/w1./nz高层/n模块/gi不/d应该/v依赖/v底层/n模块/gi，/w两/nz个/q都/d应该/v依赖/v抽象/gi2./nz抽象/gi不/d应该/v依赖于/v细节/gi，/w细节/gi应该/v依赖于/v抽象三/nz、/w里氏/n代换/v原则/gi：/w子/ng类型/gi必须/d能够/v替换/v掉/v它们/rr的/ude1父类/nz一个/mq软件/gi实体/n如果/c使用/gi的/ude1是/vshi一个/mq父类/nz，/w那么/c一定/b适用/vi于/p其子/r类/gi，/w而且/c它/rr察觉/v不出/v父/ng类/gi和/cc子类/gm的/ude1区别/gi。/w也/d就是说/c，/w把/pba父类/nz都/d替换/v成子/nz类/gi，/w程序/gi行为/n没有/v变化/gi。/w（/w子类/gm拥有/v父类/nz所有/b非/bprivate/nz的/ude1行为/n和/cc属性/gi）/w四/nz、/w里氏/n代换/v原则/gi主要/b特征/gi：/w1./nz只有/c当子/n类/gi可以/v替换/v掉/v父类/nz，/w软件/gi单位/n的/ude1功能/gi不/d受到影响/v时/qt，/w父类/nz才能/n真正/d被/pbei复用/gi，/w而/cc子类/gm也/d能/v在/p父类/nz的/ude1基础上/nz增加/v新的/a行为/n2./nz由于/p子/ng类型/gi的/ude1可/v替换/v性/ng才/d使得/vi父/ng类型/gi的/ude1模块/gi在/p无需/v修改/gi的/ude1情况下/nz就/d可以/v扩展。五/nz、/w总结/gi：/w依赖/v倒转/vi其实/d可以/v说/v是/vshi面向对象设计/gi的/ude1标志/n，/w用/p哪种/ry语言/gi来/vf编写程序/n不/d重要/a，/w如果/c编写/gi时/qt考虑/v的/ude1都/d是/vshi如何/ryv针对/gi抽象/gi编程/gi而/cc不是/c针对/gi细节/gi编程/gi，/w即/v程序/gi中/f所有/b的/ude1依赖/v关系/gi都/d是/vshi终止/v于/p抽象类/gi或者/c接口/gi，/w那/rzv就是/v面向对象/gi的/ude1设计/gi，/w反之/c那/rzv就是/v过程/gi话/n的/ude1设计/gi。/w引用/gi：/w大话/n设计模式/nz（/w程杰/nr）/w