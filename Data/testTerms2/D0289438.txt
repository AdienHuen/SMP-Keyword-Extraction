#设计/gi模式之--工厂/nz方法/gi模式/gi
　　/nz在/p上/f一/nz篇/q中/f，/w遗留/v了/ule一个/mq问题/gi：/w如果/c我们/rr还要/d创建/gi鱼/n的/ude1对象/gi，/w那么/c我/rr就要/d去/vf添加鱼/nz这个/rz类/gi，/w然后/c去/vf更改/gi工厂/gi类/gi，/w添加/gi创建/gi鱼/n的/ude1对象/gi的/ude1方法/gi，/w那么/c，/w这样/rzv就/d违背/v了/ule面向对象/gi的/ude1设计原则/gi：/w开闭/nz原则/gi（/w对/p修改/gi关闭/gi，/w对/p扩展/gi开放/gi）/w。/w那么/c，/w怎么/ryv才能/n既/c满足/v添加/gi了/ule新/a类/gi的/ude1需求/gi，/w又/d不用/d去/vf修改/gi代码/gi呢/y？/w　/nz　/nz工厂方法模式/gi可以/v解决/v这个/rz问题/gi，/w回顾一下/nz昨天/t简单工厂模式/gi的/ude1uml/gi类图/gi：/w　　/nz可以/v看出/v是因为/c动物/n工厂/gi类/gi和/cc动物类/n的/ude1紧耦/nz合/v造成了/v只要/c添加/gi新的/a具体/a动物类/n就/d会/v去/vf修改/gi动物/n工厂/gi类/gi内部/f代码/gi以使/c动物/n工厂/gi类/gi能够/v生产/gi出/vf新的/a具体/a动物类/n，/w从而/c违背/v了/ule开闭/nz原则/gi，/w是因为/c动物/n工厂/gi类/gi中/f写死/nz了/ule工厂/gi就/d只能/v生产/gi哪几种/l动物/n，/w那么/c，/w想要/v达到/v满足/v开闭/nz原则/gi的/ude1要求/n，/w就/d必须/d需要/v我们/rr对/p动物/n工厂/gi类/gi和/cc动物类/n之间/f解耦/gi。/w那么/c如何/ryv实现/gi呢/y？/w　　/nz我们/rr可以/v将/d动物/n工厂/gi类/gi写活/nz，/w再进一步/l的/ude1抽象/gi成/v一个/mq抽象类/gi，/w让/v其子/r类/gi成为/v具体/a的/ude1某/rz一个/mq动物/n的/ude1工厂/gi，/w那么/c，/w当/p我们/rr添加/gi新的/a具体/a动物类/n的/ude1时候/n，/w只要/c添加/gi抽象/gi动物/n工厂/gi类/gi的/ude1子类/gm和/cc对应/vi动物类/n就/d可以/v了/ule，/wuml/gi类图/gi如下/vi：/w　　/nz可以/v看出/v，/w工厂方法模式/gi更加/d符合/v我们/rr日常生活/nz人/n的/ude1思维/gi，/w如果/c用/p汽车/n举例/gi的话/udh，/w原先/d的/ude1简单工厂模式/gi相当于/v只有/c一个/mq规模/gi固定/a的/ude1工厂/gi，/w这/rzv一个/mq工厂/gi生产/gi好/a多/a种车/nz，/w如果/c想/v生产/gi新的/a品牌/gi的/ude1车/n，/w就要/d完全/ad改变/v这个/rz工厂/gi的/ude1规模/gi，/w来/vf重新/d布置/v工厂/gi的/ude1布局/gi，/w影响/gi太大/d；/w而/cc工厂方法模式/gi相当于/v，/w每个/r品牌/gi的/ude1车/n对应/vi一个/mq工厂/gi，/w奔驰车/nz厂/n只/d生产/gi奔驰车/nz，/w宝马车/nz厂/n只/d生产/gi宝马车/nz，/w奥迪车/n厂/n只/d生产/gi奥迪车/n，/w当/p要/v生产/gi新的/a品牌/gi的/ude1车/n时候/n，/w再/d建造/v一个/mq工厂/gi就行了/l，/w而/cc不用/d去/vf修改/gi原先/d的/ude1工厂/gi，/w这样/rzv更加/d符合/v人/n的/ude1逻辑思维/n，/w也/d一定/b程度/n上/f符合/v了/ule开闭/nz原则/gi。/w　　/nz接下来/vl是/vshi代码实现/gi：/w　　/nz工厂方法模式/gi的/ude1使用/gi场合/n？/w　/nz　/nz　　/nz（/w1/nz）/w当子/n类型/gi可能会/nz有/vyou很/d多/a，/w以后/f需要/v不断/d添加/gi不同/a的/ude1子类/gm实现/gi时/qt。/w　　/nz　　/nz（/w2/nz）/w当/p一个/mq系统/gi尚/d在/p框架/gi设计阶段/n，/w还/d不/d知道/v将来/t需要/v实例化/gi哪些/ry具体/a类/gi时/qt。/w　　/nz　　/nz（/w3/nz）/w系统设计/gi之/uzhi初/f不/d需要/v具体/a对象/gi的/ude1概念/gi（/w或者说/c没有/v具体/a对象/gi的/ude1概念/gi）/w。/w　　/nz小结/n：/w简单工厂模式/gi将/d创建对象/n功能/gi交给/v专门/d的/ude1类/gi去/vf实现/gi，/w但/c当/p生产/gi新/a对象/gi时/qt必须/d要/v修改/gi工厂/gi类/gi代码/gi，/w违背/v了/ule开闭/nz原则/gi；/w工厂方法模式/gi将/d生产/gi每/rz一/nz种/q对象/gi都/d交给/v一个/mq专门/d的/ude1工厂/gi去/vf实现/gi，/w当/p生产/gi新/a对象/gi时/qt只要/c添加/gi新的/a工厂/gi类/gi和/cc对象/gi类/gi就/d可以/v了/ule，/w从而/c一定/b程度/n上/f符合/v了/ule开闭/nz原则/gi。/w　　/nz但是/c，/w如果/c需求/gi变/v了/ule，/w对于/p同种/r对象/gi我/rr要/v不同/a规/ng的/ude1，/w比如/v对于/p狗/n工厂/gi来说/uls，/w我/rr需要/v白毛/nz的/ude1狗/n、/w黑毛/nz的/ude1狗/n、/w花/n斑毛/nz的/ude1狗/n，/w这/rzv要/v怎么样/ryv呢/y？/w这/rzv显然/ad又/d超出/v了/ule工厂方法模式/gi的/ude1解决/v范畴/n，/w因为/c要/v实现/gi这/rzv一/nz功能/gi还要/d去/vf修改/gi类/gi中的/v代码/gi，/w又/d违背/v了/ule开闭/nz原则/gi。/w　　/nz那么/c，/w怎么样/ryv才/d能够/v做/v的/ude1更好/d呢/y？/w请/v关注/v下篇/n文章/gi：/w《/w设计/gi模式之--抽象/nz工厂模式/gi》/w