#研发/gi流程/gi中的/v产品测试/gi
产品测试/gi备忘/nz1/nz、/w我们/rr许多技术/nz人员/gi往往/d将/d测试/gi简单/a的/ude1理解/gi为/p对/p产品/gi功能/gi性能/gi的/ude1验证/v。/w2/nz、/w在/p产品测试/gi中/f他们/rr简单/a的/ude1对/p产品/gi需求/gi规/ng说明书/gi中/f所述/nz的/ude1产品/gi性能/gi、/w功能/gi进行/vn分类/gi，/w并/cc按照/p其/rz预想/v的/ude1用户/gi操作步骤/nz通过/p黑盒测试/gi的/ude1方法/gi来/vf测试/gi产品/gi是否/v实现/gi设计/gi指标/gi和/cc功能/gi。/w3/nz、/w这种/r方法/gi会/v带来/v严重/a的/ude1缺陷/gi：/w1/nz)/nz产品/gi需求/gi规/ng说明书/gi只/d会/v对/p产品/gi外在/b指标/gi和/cc功能/gi进行/vn定义/gi，/w而/cc不会/v对/p产品/gi组成/gi的/ude1单元/n//nz单板/nz、/w接口/gi等/udeng指标/gi功能/gi进行/vn描述/gi。/w这样/rzv的/ude1测试/gi可以/v肯定/v比较/gi难以/d发现/v产品/gi内部/f的/ude1设计/gi缺陷/gi。/w2/nz)/nz产品/gi需求/gi规/ng说明书/gi定义/gi的/ude1指标/gi、/w功能/gi可能/v列写/nz不/d充分/ad。/w根据/p不/d充分/ad的/ude1需求/gi定义/gi导出/gi的/ude1测试用例/gi不/d能够/v覆盖/gi基本/a（/w正常/a）/w事件/gi的/ude1测试/gi，/w导致/gi测试/gi有效性/gi的/ude1降低/v。/w3/nz)/nz产品/gi需求/gi规/ng说明书/gi可能/v不会/v对/p备选/nz事件/gi和/cc异常/gi事件/gi进行/vn描述/gi，/w即使/c是/vshi一一对应/gm需求/gi规/ng而/cc设计/gi的/ude1测试用例/gi也/d会/v造成/v对/p备选/nz事件/gi和/cc异常/gi事件/gi的/ude1测试/gi遗漏/v，/w进一步/d降低/v测试/gi有效性/gi。/w4/nz)/nz单元测试/gi、/w集成测试/gi、/w系统测试/gi所用/b测试用例/gi完全/ad一样/uyy，/w忽略/v了/ule不同/a产品/gi测试阶段/n所要/b关注/v的/ude1工作/gi重点/n，/w使得/vi产品设计/nz缺陷/gi难以/d在/p研发/gi阶段/gi暴露/v，/w后续/vn影响/gi量产/nz产品/gi的/ude1质量/gi。/w本次/r交流/gi的/ude1目的/gi就是/v增强/v技术人员/nnt对/p测试/gi工作/gi的/ude1理解/gi和/cc认识/v，/w便于/v后续/vn公司/nis测试/gi工作/gi流程/gi的/ude1持续/vd改进/gi。/w测试/gi的/ude1目的/gi和/cc原则/gi1/nz、/w一点/m共识/n：/w1/nz）/w为/p使/v最终用户/nz对/p产品/gi满意/v，/w就/d必须/d保证/v产品/gi功能/gi性能/gi达到/v用户/gi需求/gi。/w而/cc验证/v产品/gi功能性/n能否/v达到/v用户/gi要求/n的/ude1唯一/b方法/gi就是/v持续/vd有效/gi的/ude1测试/gi。/w2/nz、/w两/nz种/q角度/n：/w1/nz）/w从/p用户/gi的/ude1角度/n出发/vi，/w就是/v希望/v通过/p测试/gi能/v充分/ad暴露/v产品/gi中/f存在/v的/ude1缺陷/gi，/w以便/d决定/v是否/v买单/vn。/w2/nz）/w从/p开发者/gi的/ude1角度/n出发/vi，/w就是/v希望/v测试/gi能/v表明/v产品/gi不存/v缺陷/gi，/w已经/d完全/ad正确地/nz实现/gi了/ule用户/gi需求/gi。/w3/nz、/w三个/nz问题/gi：/w1/nz）/w从/p情感/n角度/n来看/u，/w开发者/gi是/vshi不/d愿意/v自己/rr设计/gi的/ude1产品/gi被/pbei证明/v存在/v设计/gi缺陷/gi。/w2/nz）/w从/p应用/gi角度/n来看/u，/w开发者/gi往往/d是/vshi认为/v用户/gi一定/b是/vshi按照/p自己/rr设计/gi好/a的/ude1操作/gi模式/gi来/vf对/p产品/gi进行/vn操作/gi的/ude1。/w3/nz）/w从/p实施/gi角度/n来看/u，/w开发者/gi总是/d对/p能够/v验证/v产品/gi已经/d实现/gi了/ule预期/gi功能/gi的/ude1测试项目/n更加/d感兴趣/a。/w4/nz、/w四条/nz结论/gi：/w1/nz）/w测试/gi不仅仅/d是/vshi为了/p证明/v产品/gi能够/v实现/gi既定/b功能/gi，/w还要/d尽可能/d多/a地/ude2发现/v产品/gi中的/v错误/gi和/cc缺陷/gi。/w2/nz）/w测试/gi只能/v证明/v错误/gi的/ude1存在/v，/w但/c不能/v证明/v错误/gi不存在/ns。/w3/nz）/w研发/gi产品/gi质量保证/gi的/ude1唯一/b方法/gi就是/v尽量/d大/a覆盖范围/nz下/f的/ude1有效/gi测试/gi。/w4/nz）/w测试/gi的/ude1有效性/gi是/vshi通过/p符合实际/n应用/gi条件/n下/f的/ude1测试用例/gi的/ude1设计/gi及/cc实施/gi来/vf保证/v。/w测试/gi实施/gi原则/gi1/nz、/w由于/p惯性/n思维/gi的/ude1存在/v使得/vi难以/d发现/v设计/gi缺陷/gi，/w因此/c尽量避免/l设计/gi人员/gi来/vf测试/gi自己/rr设计/gi的/ude1产品/gi，/w但是/c单元测试/gi除外/vi。/w2/nz、/w确定/v预期/gi输出/gi结果/n是/vshi测试用例/gi必不可少/vl的/ude1一/nz部分/n。/w如果/c只有/c测试数据/gi而/cc无/v预期/gi结果/n，/w那么/c就/d不/d容易/ad判断/gi测试/gi结果/n是否/v正确/a。/w3/nz、/w彻底/ad检查/gi每个/r测试/gi结果/n。/w如果/c不/d仔细检查/n测试/gi结果/n，/w有些/rz已经/d测试/gi出来/vf的/ude1错误/gi也/d可能/v被/pbei遗漏掉/v。/w4/nz、/w对/p非法/b的/ude1和/cc非/b预期/gi的/ude1输入/v也/d要/v像/v合法/a的/ude1和/cc预期/gi的/ude1输入/v一样/uyy编写/gi测试用例/gi。/w5/nz、/w检查/gi产品/gi是否/v做/v了/ule应/v做/v的/ude1事/n仅/d是/vshi成功/a的/ude1一半/mq，/w另一半/nz是/vshi看/v产品/gi是否/v做/v了/ule不该/v做/v的/ude1事/n。/w6/nz、/w对/p测试/gi错误/gi结果/n一定/b要/v有/vyou一个/mq确认/v的/ude1过程/gi，/w一般/ad有/vyoua/nz测试/gi出来/vf的/ude1错误/gi，/w一定/b要/v有/vyou一个/mqb/nz来/vf确认/v，/w严重/a的/ude1错误/gi可以/v召开/v评审会/nz进行/vn讨论/gi和/cc分析/gi。/w7/nz、/w测试/gi后/f遗留/v的/ude1错误/gi数目/gi往往/d与/cc已/d发现/v的/ude1错误/gi数目/gi成比例/nz。/w因此/c当/pa/nz模块/gi找出/v错误/gi比/pb/nz模块/gi多得多/d时/qt，/w很可能/nza/nz模块/gi遗留/v的/ude1错误/gi仍/d比/pb/nz模块/gi遗留/v的/ude1错误/gi多/a。/w8/nz、/w回归/gi测试/gi的/ude1关联性/nz一定/b要/v引起/v充分/ad的/ude1注意/v，/w修改/gi一个/mq错误/gi而/cc引起/v更多/ad的/ude1错误/gi出现/v的/ude1现象/n并不/d少见/a。/w9/nz、/w妥善/ad保存/gi一切/rz测试过程/gi文档/gi，/w测试/gi的/ude1重现性/nz往往/d要/v靠/v测试/gi文档/gi。/w10/nz、/w制定/gi严/a的/ude1测试计划/gi，/w并/cc把/pba测试/gi时间/gi安排/v的/ude1尽量/d宽松/a，/w不要/d希望/v在/p极短/d的/ude1时间/gi内/f完成/v一个/mq高水平/nz的/ude1测试/gi。/w11/nz、/w“/w尽早/d和/cc不断/d的/ude1测试/gi”/w应该/v成为/v一个合/nz的/ude1开发者/gi的/ude1座右铭/n。/w总结/gi一/nz下/f1/nz、/w对于/p测试/gi重要性/n的/ude1理解/gi我们/rr都/d相差不多/l，/w唯一/b的/ude1区别/gi在于/v对/p测试/gi所/usuo关注/v问题/gi的/ude1不同/a看法/n。/w2/nz、/w我们/rr的/ude1核心问题/gi是/vshi如何/ryv提高/v测试/gi效率/gi。/w1/nz）/w测试/gi会/v占用/v开发周期/n，/w特别/d是/vshi测试/gi覆盖率/n要求/n越高/d周期/n就/d会/v越/d长/a，/w这/rzv与/cc开发进度/n要求/n一定/b是/vshi矛盾/gi的/ude1。/w2/nz）/w开发人员/n、/w测试人员/n较少/ad测试/gi经验/gi，/w不具备/v良好/a的/ude1测试/gi技能/gi和/cc测试工具/nz，/w使得/vi测试/gi进度/gi更加/d不可/v保证/v。/w广义/n的/ude1测试/gi1/nz、/w测试/gi应该/v贯穿/v产品开发/nz周期/n，/w测试/gi不仅仅/d是/vshi测试/gi所/usuo实现/gi的/ude1产品/gi性能/gi与/cc功能/gi，/w还要/d测试/gi开发周期/n中/f各种/rz设计/gi文档/gi。/w2/nz、/w需求/gi阶段/gi、/w总体/n（/w概要/n）/w设计阶段/n、/w详细设计/gi阶段/gi所/usuo输出/gi的/ude1技术/gi文档/gi，/w包括/v需求/gi规/ng说明/v、/w总体/n（/w概要/n）/w设计/gi、/w详细设计/gi、/w源程序/gi（/wsch/nz、/wpcb/gi）/w、/w用户文档/gi等/udeng，/w都/d是/vshi测试/gi的/ude1对象/gi。/w测试/gi的/ude1分类/gi1/nz、/w按/p测试方法/nz划分/v，/w有/vyou静态/gi测试/gi和/cc动态/gi测试/gi。/w1/nz）/w动态/gi测试/gi：/w使/v被/pbei测试/gi产品/gi或/c模块/gi有/vyou控制/vn地/ude2运行/gi，/w并/cc从/p多/a种/q角度观察/n运行/gi时/qt的/ude1行为/n，/w以/p发现/v其中/rz的/ude1错误/gi。/w2/nz）/w静态/gi测试/gi：/w就是指/i人工/b评审/gi设计/gi文档/gi，/w借以/v发现/v其中/rz的/ude1错误/gi。/w作为/p研发/gi质量/gi控制/vn的/ude1重要/a手段/n，/w评审/gi经常/d作为/p具体实施/l前/f的/ude1检查/gi手段/n，/w其/rz目的/gi是/vshi保证/v设计/gi的/ude1正确性/gi、/w减小/v设计/gi风险/gi、/w尽早/d发现/v设计/gi缺陷/gi。/w2/nz、/w按/p测试/gi功能/gi划分/v，/w有/vyou黑盒测试/gi和/cc白盒测试/gi。/w1/nz）/w白盒测试/gi：/w对/p模块/gi内部/f是/vshi不/d透明/a的/ude1。/w从/p模块/gi//nz产品/gi的/ude1设计/gi、/w结构/gi上来/vf进行/vn测试/gi，/w检查/gi模块/gi//nz产品/gi中的/v错误/gi。/w2/nz）/w黑盒测试/gi：/w对/p内部/f透明/a，/w仅/d从/p使用/gi上来/vf检查/gi功能/gi上/f是否/v有/vyou错误/gi。/w黑盒/gi与/cc白盒/nz1/nz、/w黑盒测试/gi是从/v上到/v下/f、/w从/p宏观/gi到/v微观/n的/ude1逐步/d验证/v过程/gi，/w一般/ad止步/vi于/p单板/nz//nz功能模块/nz外部/f功能/gi的/ude1测试/gi。/w2/nz、/w白盒测试/gi是从/v下到/v上/f、/w从/p微观/n到/v宏观/gi的/ude1逐步/d验证/v过程/gi，/w一般/ad涉及/v单板/nz//nz功能模块/nz内部/f性能/gi功能/gi及/cc单元/n间接口/n的/ude1测试/gi。/w3/nz、/w一般/ad采用/v白盒/nz测试方法/nz来/vf检查/gi产品/gi的/ude1基本功能/nz单元/n内部/f错误/gi，/w而/cc采用/v黑盒/gi测试方法/nz来/vf验证/v由/p各/rz功能/gi单元/n组装/vn而/cc成/v的/ude1产品/gi//nz系统/gi的/ude1功能/gi和/cc性能/gi。/w黑盒测试/gi也/d称/v功能测试/gi或/c数据/gi驱动/gi测试/gi，/w它/rr是/vshi在/p对/p产品/gi应/v具/vg功能/gi进行/vn抽象/gi的/ude1基础上/nz，/w将/d程序/gi划分/v成功/a能/v单元/n，/w然后/c对/p每个/r功能/gi单元/n设计/gi测试用例/gi进行/vn测试/gi。/w优点/gi：/w黑盒/gi法/n测试用例/gi是/vshi围绕/v着/uzhe产品/gi操作/gi方式/n和/cc实际/n应用环境/l来/vf设计/gi的/ude1，/w每/rz一个/mq测试用例/gi表征/n着/uzhe一种/nz产品/gi实际/n可能/v发生/v的/ude1应用场景/gi，/w测试/gi结果/n非常/d直观/a便于/v理解/gi。/w缺点/gi：/w黑盒/gi测试用例/gi的/ude1设计/gi不/d可能/v做到/v完全/ad覆盖/gi，/w因此/c难以/d完全/ad触发/gi产品/gi内部/f所有/b执行/v流程/gi//nz路径/gi，/w也/d就/d难以/d完全/ad发现/v深藏/v在/p产品/gi内部/f单元/n//nz模块/gi及/cc接口/gi的/ude1设计/gi缺限/nz，/w需要/v有/vyou白盒测试/gi进行/vn补充/vn。/w白盒测试/gi也/d称/v结构测试/gi或/c逻辑/n驱动/gi测试/gi，/w在/p知道/v产品/gi内部/f工作/gi过程/gi的/ude1前提/n下/f，/w按照/p产品/gi内部/f的/ude1结构/gi，/w通过/p测试/gi来/vf检测/gi产品/gi内部/f动作/gi是否/v符合/v详细设计/gi。/w优点/gi：/w白盒/nz法/n测试用例/gi是/vshi围绕/v着/uzhe产品设计/nz实现/gi角度/n出发/vi，/w通过/p对/p其/rz内部/f信号/gi特征/gi、/w接口/gi功能/gi性能/gi的/ude1覆盖性/n检查/gi来/vf保证/v设计/gi的/ude1正确性/gi。/w缺点/gi：/w以/p详细设计/gi为/p依据/n，/w以/p覆盖率/n为/p最终目标/nz，/w因此/c缺乏/v宏观把握/gi的/ude1能力/gi。/w1/nz）/w能/v查出/v详细设计/gi本身/rz所/usuo存在的问题/gi，/w即/v错误/gi的/ude1产品设计/nz。/w2/nz）/w不/d可能/v查出/v被/pbei详细设计/gi所/usuo遗漏/v的/ude1功能/gi、/w性能/gi。/w灰盒/nz测试/gi1/nz、/w灰盒/nz测试/gi介于/v黑盒/gi与/cc白盒/nz之间/f，/w关注/v输出/gi对于/p输入/v的/ude1正确性/gi，/w同时/c也/d关注/v内部/f表现/v，/w但/c这种/r关注/v不象/n白盒/nz那样/rzv详细/gi、/w完整/a，/w只是/d通过/p一/nz些/q表征性/nz的/ude1现象/n、/w事件/gi、/w标志/n来/vf判断/gi内部/f的/ude1运行/gi状态/gi。/w2/nz、/w灰盒/nz法/n在用/b例/n设计/gi中/f不/d关心/v模块/gi内/f处理过程/l，/w只/d关心/v被/pbei测/v对象/gi的/ude1输入/v与/cc输出/gi，/w这/rzv是/vshi典型/n的/ude1黑盒/gi思维/gi模式/gi。/w3/nz、/w灰盒/nz法/n在用/b例/n设计/gi时/qt基于/p对/p模块/gi内部/f处理/vn的/ude1了解/v，/w测试/gi设计/gi可以/v有/vyou针对性/n的/ude1进行/vn，/w测试过程/gi评估/gi也/d是/vshi白盒/nz法/n。/w模糊/gi测试/gi1/nz、/w模糊/gi测试/gi是/vshi黑盒/gi法/n中的/v一种/nz，/w其/rz执行/v过程/gi为/p：/w向/p产品/gi有意识/v地/ude2进行/vn无效/vi输入/v以/p期望/vn触发/gi错误/gi条件/n或/c引起/v产品/gi的/ude1故障/gi。/w2/nz、/w模糊/gi测试/gi最为/d形象/n的/ude1说法/n是/vshi：/w测试过程/gi要/v做/v的/ude1就是/v站/vi在后/v面向/v目标/gi投掷/v石头/n，/w等待/gi玻璃/n被/pbei打破/v的/ude1声音/gi。/w就/d这个/rz意义/n而言/uls，/w模糊/gi测试/gi可/v被/pbei归结为/v黑盒测试/gi。/w3/nz、/w若/c我们/rr对/p产品/gi内部/f有所/v了解/v，/w就/d可以/v让/v石头/n每次/r的/ude1飞行/vn路线/n更/d直接/ad并且/c更/d真实/a。/w因此/c，/w模糊/gi测试/gi也/d可以/v应用/gi在/p灰盒/nz测试/gi中/f。/w4/nz、/w按/p测试步骤/n划分/v，/w有/vyou单元测试/gi、/w集成测试/gi、/w系统测试/gi。/w1/nz）/w单元测试/gi：/w也/d称/v模块/gi测试/gi。/w测试/gi的/ude1对象/gi是/vshi设计/gi的/ude1最小/a单位/n－/w功能模块/nz。/w单元测试/gi的/ude1依据/n是/vshi详细设计/gi描述/gi，/w对/p模块/gi内/f所有/b表达/gi功能/gi//nz性能/gi的/ude1节点/gi设计/gi测试用例/gi，/w以便/d发现/v模块/gi内部/f的/ude1错误/gi。/w单元测试/gi主要/b发现/v详细设计/gi阶段/gi产生/v的/ude1错误/gi。/w2/nz）/w集成测试/gi：/w又称/gi联合/gi测试/gi也/d称/v组装/vn测试/gi，/w它/rr是/vshi对/p由/p各/rz模块/gi组装/vn而/cc成/v的/ude1产品/gi进行/vn测试/gi，/w主要/b检查/gi模块/gi间/f的/ude1接口/gi和/cc通信/gi。/w3/nz）/w系统测试/gi：/w是/vshi把/pba软/a、/w硬件/gi和/cc环境/n连在一起/l全面/ad的/ude1测试/gi，/w检查/gi系统/gi的/ude1功能/gi、/w性能/gi及/cc其他/rzv特征/gi是否/v与/cc用户/gi的/ude1需求/gi一致/a，/w它/rr是/vshi以/p需求/gi规/ng说明书/gi作为/p依据/n的/ude1测试/gi。/w系统测试/gi又/d可/v细分/gi为/p功能测试/gi、/w容量/gi测试/gi、/w压力/n测试/gi、/w使用性/n测试/gi、/w安全性/gi测试/gi、/w性能测试/gi、/w可靠性/gi测试/gi、/w恢复/gi测试/gi、/w强度/n测试/gi、/w文档/gi测试/gi以及/cc工序/n测试/gi。/w划分/v测试/gi的/ude1种类/n并不/d重要/a，/w重要/a的/ude1是/vshi，/w一定/b要/v把/pba测试/gi看成/v是/vshi产品设计/nz全/a生命周期/nz持续/vd不断/d而/cc不是/c阶段性/n的/ude1工作/gi。/w测试方法/nz的/ude1选择/gi有/vyou一种/nz观点/gi认为/v：/w1/nz、/w在/p单元测试/gi阶段/gi采用/v白/a盒法/nz；/w2/nz、/w在/p集成/vn测试阶段/n采用/v灰盒/nz法/n；/w3/nz、/w /x在/p系统测试/gi阶段/gi采用/v黑盒/gi法/n。/w测试/gi覆盖范围/nz1/nz、/w正确性/gi测试/gi：/w测试用例/gi中的/v测试点/n应/v首先/d保证/v要/v至少/d覆盖/gi需求/gi规/ng说明书/gi中的/v各项/r功能/gi。/w2/nz、/w健壮性/nz测试/gi：/w正确/a信息/gi输入/v将/d产生/v预期/gi输出/gi，/w /x非法/b信息/gi输入/v将/d导致/gi相应/vi提示/gi或/c错误处理/i，/w而/cc不至于/d系统/gi//nz模块/gi崩溃/vi。/w3/nz、/w容错性/nz测试/gi：/w测试/gi系统/gi//nz产品/gi的/ude1功能/gi单元/n、/w接口/gi间/f出现异常/l的/ude1情况下/nz系统/gi的/ude1保护性/b处理/vn，/w以及/cc异常/gi结束/v后/f系统/gi功能/gi性能/gi的/ude1恢复/gi处理/vn。/w4/nz、/w可靠性/gi测试/gi：/w测试/gi系统/gi//nz产品/gi在/p实际/n应用环境/l下/f可/v保证/v性能/gi功能/gi有效性/gi的/ude1能力/gi。/w5/nz、/w压力/n测试/gi：/w测试/gi在/p大/a信息量/n处理/vn情况下/nz的/ude1系统/gi//nz产品/gi正常/a工作/gi的/ude1能力/gi。/w6/nz、/w回归/gi测试/gi：/w测试/gi上/f一轮/nz测试/gi所/usuo发现/v缺陷/gi的/ude1解决/v及/cc对系统/l的/ude1潜在/b影响/gi。/w软件测试/gi与/cc硬件/gi测试/gi1/nz、/w软件测试/gi：/w软件/gi不/d涉及/v制造/gi加工/gi，/w因此/c软件测试/gi的/ude1目的/gi仅仅/d是/vshi验证/v设计/gi的/ude1正确性/gi。/w2/nz、/w硬件/gi测试/gi：/w除了/p验证/v设计/gi正确性/gi以外/f，/w还要/d包括/v制造/gi的/ude1准确性/gi，/w或者/c一致性/gi测试/gi。/w当/p我们/rr只/d考虑/v验证/v设计/gi正确性/gi的话/udh：/w1/nz）/w软件测试/gi：/w发现/v软件/gi代码/gi语法错误/nz和/cc逻辑/n错误/gi，/w衡量/v软件设计/nz正确性/gi的/ude1标准/gi是/vshi：/w软件/gi在/p某种/rz输入/v条件/n下/f是否/v按/p正确/a时序/n完成/v对/p硬件/gi的/ude1操作/gi（/w如/v写入/gi//nz读出/v寄存器/gi数据/gi）/w。/w2/nz）/w硬件/gi测试/gi：/w发现/v硬件设计/gi的/ude1错误/gi，/w衡量/v硬件设计/gi正确性/gi的/ude1标准/gi是/vshi：/w硬件系统/gi在/p某种/rz激励/vn条件/n下/f能否/v保证/v线路/n上/f的/ude1信号/gi完整性/gi，/w即/v“/w在/p需要/v的/ude1时间/gi内/f信号/gi达到/v所/usuo需要/v的/ude1形状/n”/w。/w测试/gi的/ude1实施/gi实施/gi测试/gi工作/gi的/ude1过程/gi为/p：/w1/nz、/w制定/gi测试/gi策略/gi2/nz、/w测试用例/gi设计/gi3/nz、/w执行/v测试用例/gi4/nz、/w缺陷/gi修复过程/l5/nz、/w回归/gi测试/gi测试/gi策略/gi－/w定义/gi依据/n测试项目/n的/ude1特定/b环境/n约束/gi而/cc规定/n的/ude1测试/gi原则/gi、/w方式/n、/w方法/gi的/ude1集合/gi，/w用以/d描述/gi在/p测试/gi活动/gi各/rz阶段/gi所/usuo采用/v的/ude1测试方法/nz和/cc测试/gi目标/gi。/w内容/gi主要/b包括/v：/w1/nz）/w资源/gi需求/gi的/ude1详细/gi说明/v。/w2/nz）/w进度/gi约束/gi下/f的/ude1人力资源/nz角色/gi和/cc职责/gi。/w3/nz）/w某/rz测试阶段/n所/usuo使用/gi的/ude1测试方法/nz和/cc工具/gi。/w4/nz）/w某/rz测试阶段/n所/usuo需要/v执行/v的/ude1测试/gi类型/gi。/w5/nz）/w测试/gi完成/v和/cc测试/gi成功/a所/usuo采用/v的/ude1评价/gi标准/gi。/w测试/gi策略/gi－/w意义/n1/nz、/w测试/gi策略/gi明确/a了/ule所有/b测试阶段/n、/w测试技术/gi和/cc项目/gi所/usuo使用/gi的/ude1测试工具/nz和/cc测试/gi目标/gi，/w用以/d指导/vn后续/vn测试/gi工作/gi得/ude3有效/gi实施/gi。/w2/nz、/w测试/gi策略/gi的/ude1制定/gi还/d可以/v使得/vi测试过程/gi中的/v沟通交流/n变得/vi更为/d容易/ad和/cc有效/gi，/w而/cc它/rr会/v影响/gi到/v整个/b项目组/nis。/w测试用例/gi－/w定义/gi1/nz、/w测试用例/gi（/wtest case/nz）/w是/vshi为/p某个/rz特殊/a目标/gi而/cc编制/vn的/ude1一/nz组/n测试/gi输入/v、/w执行/v条件/n以及/cc预期/gi结果/n，/w以便/d测试/gi某个/rz功能/gi单元/n//nz模块/gi、/w系统/gi//nz产品/gi是否/v满足/v某些/rz特定/b需求/gi。/w2/nz、/w测试用例/gi指/v对/p特定/b的/ude1功能/gi单元/n//nz模块/gi、/w系统/gi//nz产品/gi进行/vn测试/gi任务/gi的/ude1描述/gi，/w体现/v测试/gi方案/gi、/w方法/gi、/w技术/gi和/cc策略/gi。/w内容/gi包括/v测试/gi目标/gi、/w测试环境/nz、/w测试/gi输入/v、/w测试步骤/n、/w预期/gi结果/n等/udeng，/w并以/c文档/gi的/ude1形式/gi予以/vx表达/gi。/w测试用例/gi－/w要素/gi1/nz、/w用例/nz编号/gi：/w便于/v测试用例/gi的/ude1管理/gi及/cc测试过程/gi的/ude1跟踪/vn。/w2/nz、/w用/p例/n标题/n：/w清楚/a表达/gi测试用例/gi的/ude1用途/n。/w3/nz、/w重要/a级别/n：/w定义/gi测试用例/gi的/ude1优先/vd级别/n。/w1/nz）/w高/a：/w确保/v系统/gi基本功能/nz及/cc主要/b功能/gi的/ude1测试用例/gi2/nz）/w中/f：/w确保/v系统/gi功能/gi的/ude1完善/v方面/n的/ude1测试用例/gi3/nz）/w低/a：/w较少/ad使用/gi或/c辅助/vn功能/gi的/ude1测试用例/gi，/w如/v提示信息/n1/nz、/w测试/gi输入/v：/w定义/gi用/p例/n实施/gi中的/v各种/rz输入/v条件/n。/w2/nz、/w操作步骤/nz：/w对于/p复杂/a测试用例/gi，/w操作/gi时/qt需要/v分/qt几/d个/q步骤/gi完成/v，/w这/rzv部分/n内容/gi在/p操作步骤/nz中/f详细/gi列出/v。/w3/nz、/w预期/gi结果/n：/w提供/v测试/gi执行/v的/ude1预期/gi结果/n，/w预期/gi结果/n应该/v根据/p产品/gi需求/gi中的/v输出/gi得出/v。/w4/nz、/w基本/a事件/gi：/w描述/gi该/rz测试用例/gi的/ude1基本操作/n流程/gi，/w指/v每个/r流程/gi都/d“/w正常/a”/w运作/gi时/qt所/usuo发生/v的/ude1事情/n。/w基本/a事件/gi用以/d测试/gi在/p正确/a环境/n及/cc操作/gi下/f产品/gi所能/v实现/gi的/ude1性能/gi、/w功能/gi。/w5/nz、/w备选/nz事件/gi：/w表示/v这种/r行为/n或/c流程/gi是/vshi可选/v的/ude1或/c备选/nz的/ude1，/w并/cc不是/c总要/b执行/v。/w6/nz、/w异常/gi事件/gi：/w表示/v在/p发生/v某些/rz非正常/b的/ude1事件/gi后/f产品/gi所要/b执行/v的/ude1响应/v。/w7/nz、/w正面/b测试/gi：/w用于/v验证/v被/pbei测/v单元/n能够/v执行/v应该/v完成/v的/ude1工作/gi。/w8/nz、/w负面/b测试/gi：/w用于/v验证/v软件/gi不/d执行/v其/rz不/d应该/v完成/v的/ude1工作/gi。/w测试用例/gi设计/gi－/w白盒/nz法/n1/nz、/w白盒测试/gi是/vshi穷举/v类/gi测试/gi，/w主要/b强调/v的/ude1是/vshi覆盖率/n，/w即/v测试用例/gi要/v覆盖/gi单元/n内部/f所有/b处理/vn流程/gi。/w2/nz、/w对/p软件/gi来讲/uls就是/v代码/gi路径/gi的/ude1覆盖率/n，/w对于/p硬件/gi测试/gi来讲/uls则/d是/vshi检查/gi所有/b电路/gi节点/gi的/ude1响应/v信号/gi。/w3/nz、/w受到/v进度/gi和/cc资源/gi的/ude1约束/gi，/w不/d可能/v达到/v完全/ad覆盖率/n，/w折衷/vn办法/gi就是/v选取/gi关键/n重要/a的/ude1部分/n进行/vn测试用例/gi的/ude1设计/gi。/w4/nz、/w覆盖率/n由/p低/a到/v高/a1/nz）/w语句/gi覆盖/gi：/w检查/gi到/v模块/gi中/f每个/r语句/gi执行/v情况/n。/w2/nz）/w判定/gi覆盖/gi：/w检查/gi到/v模块/gi中/f每个/r分支/n//nz信号流/nz执行/v情况/n3/nz）/w条件/n覆盖/gi：/w使/v判定/gi中的/v每个/r条件/n获得/v各种/rz可能/v的/ude1结果/n。/w4/nz）/w判定/gi//nz条件/n覆盖/gi：/w选择/gi足够/v的/ude1测试用例/gi，/w使得/vi判定/gi中/f每个/r条件/n取到/v各种/rz可能/v的/ude1，/w并且/c每个/r判定/gi取到/v各种/rz可能/v的/ude1结果/n。/w5/nz）/w条件/n组合/gi覆盖/gi：/w执行/v足够/v的/ude1测试用例/gi，/w使得/vi每个/r判定/gi中/f条件/n的/ude1各种/rz可能/v组合/gi都/d至少/d出现/v一次/nz。/w6/nz）/w路径/gi覆盖/gi：/w执行/v足够/v的/ude1测试用例/gi，/w使得/vi每条/d路径/gi至少/d被/pbei执行/v一次/nz。/w5/nz、/w白盒/nz法/n实施/gi深度/gi：/w1/nz）/w白盒/nz法/n（/w包括/v设计/gi文档/gi评审/gi、/w软件/gi代码/gi检查/gi）/w工作量/n应/v占到/v测试/gi总/b工作量/n的/ude150％。2/nz）/w对/p测试/gi缺陷/gi进行/vn统计分析/gm，/w白盒/nz法/n发现/v的/ude1缺陷/gi要/v达到/v总缺陷/nz数/n的/ude150％/nz以上/f。/w测试用例/gi设计/gi－/w黑盒/gi法/n1/nz、/w等价/vn分类法/gi：/w在/p输入/v数据/gi中/f选择/gi一/nz组子/nz集/q，/w每个/r子集/gi选择/gi一个/mq具有/v“/w代表性/n”/w的/ude1测试用例/gi，/w使/v这个/rz测试用例/gi可以/v代表/nnt一大/n类/gi的/ude1有/vyou同样/d共性/n的/ude1其他/rzv测试用例/gi，/w这/rzv就/d形成/v了/ule一个/mq等/udeng价类/nz。/w这样/rzv就/d可/v使用/gi少数/mq的/ude1等/udeng价类/nz测试/gi用/p例能/nz发现/v较多/d的/ude1错误/gi。/w2/nz、/w等价/vn分类法/gi分为/v二步/nz：/w1/nz）/w根据/p功能/gi说明/v中的/v输入/v条件/n划分/v等/udeng价类/nz；/w2/nz）/w按/p等/udeng价类/nz来/vf选择/gi测试用例/gi。/w3/nz、/w边缘/n分析法/nz：/w与/cc等/udeng价/n分类法/gi的/ude1差别/n主要/b在于/v边缘/n分析法/nz是/vshi着重/vd检查/gi等/udeng价类/nz边界/n上/f的/ude1情况/n。/w1/nz）/w若/c某个/rz输入/v条件/n说明了/v的/ude1范围/n，/w则/d可选择/nz恰好/d取到/v边界/n的/ude1用例/nz；/w另外/c再/d编写/gi一些/m代表/nnt不合理/nz输入/v数据/gi的/ude1用例/nz，/w它们/rr的/ude1恰好/d超过/v边界/n。/w2/nz）/w如果/c一个/mq输入/v条件/n指出/v了/ule输入/v数据/gi的/ude1个数/n，/w则/d为/p最小/a个数/n，/w最大/gm个数/n，/w比/p最小/a个数/n少/a1/nz，/w比/p最大/gm个数/n多/a1/nz，/w分别/d设计用例/gi。/w4/nz、/w因果图/nz法/n：/w因果图/nz法则/gi着重/vd检查/gi输入/v条件/n的/ude1各种/rz组合/gi情况/n，/w消除/v等/udeng价/n分类法/gi和/cc边缘/n分析法/nz没有/v检查/gi各种/rz输入/v条件/n的/ude1组合/gi的/ude1缺点/gi。/w1/nz）/w从/p用/p自然语言/gm书写/v的/ude1功能/gi说明/v中/f找出/v因/p（/w输入/v条件/n）/w和/cc果/ng（/w输出/gi或/c程序/gi状态/gi的/ude1修改/gi）/w；/w2/nz）/w通过/p画/v因果图/nz将/d功能/gi说明/v转换成/i判定/gi表/n，/w然后/c为/p判定/gi表/n的/ude1第一列/nz设计/gi测试用例/gi。/w3/nz）/w因果图/nz法/n是/vshi设计/gi测试用例/gi的/ude1一个/mq系统/gi的/ude1方法/gi。/w5/nz、/w错误/gi推测/v法/n：/w通过/p经验/gi或/c直觉/n推测/v程序/gi中/f可能/v存在/v的/ude1各种/rz错误/gi，/w从而/c有/vyou针对性/n的/ude1编写/gi测试用例/gi，/w这/rzv就是/v错误/gi推测/v法/n。/w错误/gi推测/v法/n没有/v确定/v的/ude1步骤/gi，/w很大/d程度/n上/f是/vshi凭经验/nz进行/vn的/ude1。/w测试用例/gi设计/gi前述/b概念/gi是/vshi随着/p软件测试/gi的/ude1发展/gi而/cc提出/v并/cc逐渐/d完善/v。/w相对而言/c，/w硬件/gi测试/gi并未/d能够/v形成/v一种/nz完善/v的/ude1理论/gi和/cc实施/gi流程/gi，/w其/rz主要/b原因/n在于/v硬件/gi的/ude1多样性/n以及/cc硬件系统/gi难以/d独立/a于/p软件/gi而/cc单独/d实现/gi。/w对于/p软件/gi测试用例/gi的/ude1设计/gi有/vyou许多参考/nz文献/n，/w这里/rzs不再/d描述/gi。/w测试管理/gi小组/nis1/nz、/w成立/vi背景/n：/w1/nz）/w项目组/nis对/p测试/gi工作/gi不/d重视/v，/w虽然/c按/p流程/gi要求/n进行/vn了/ule测试计划/gi和/cc测试用例/gi的/ude1撰写/v及/cc评审/gi，/w但是/c评审/gi有效性/gi差/a，/w导致/gi测试用例/gi设计/gi质量/gi差/a，/w执行/v效果/gi不/d佳/a。/w2/nz）/w项目组/nis对/p测试/gi的/ude1目的/gi和/cc原则/gi理解/gi偏差/n，/w对/p各/rz测试阶段/n的/ude1中心/gi任务/gi不/d明确/a，/w测试/gi经验/gi欠缺/vi，/w没有/v掌握/v正确/a的/ude1测试方法/nz。/w3/nz）/w公司/nis流程/gi定义/gi模糊/gi，/w没有/v对/p质量/gi节点/gi、/w阶段/gi出入/v允许/v条件/n进行/vn有效/gi的/ude1定义/gi，/w缺乏/v详细/gi的/ude1工作指南/n和/cc文档/gi模板/gi。/w2/nz、/w工作/gi职责/gi：/w1/nz）/w负责/v识别/gi公司/nis研发/gi流程/gi中/f产品测试/gi相关/vn问题/gi，/w确定/v问题/gi的/ude1优先级/n和/cc改进/gi计划/gi。/w2/nz）/w负责/v组织/gi完善/v测试/gi工作/gi流程/gi，/w进行/vn文档/gi模板/gi的/ude1建设/gi，/w撰写/v测试/gi工作指南/n。/w3/nz）/w负责/v组织/gi实施/gi测试流程/gi、/w测试/gi技能/gi的/ude1培训/gi。/w4/nz）/w负责/v公司/nis在/p研/v项目/gi的/ude1测试/gi工作/gi阶段/gi评审/gi，/w并/cc对/p项目组/nis产品测试/gi进行/vn全程/n辅导/vn。/w