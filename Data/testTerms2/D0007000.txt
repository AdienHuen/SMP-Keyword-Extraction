#软件测试/gi面试题/n
01./nz /x为什么/ryv要/v在/p一个/mq团队/gi中/f开展/v软件测试/gi工作/gi？/w　　/nz因为/c没有/v经过/p测试/gi的/ude1软件/gi很难/d在/p发布/gi之前/f知道/v该软件/n的/ude1质量/gi，/w就/d好比/viso/gi质量/gi认证/gi一样/uyy，/w测试/gi同样/d也/d需要/v质量/gi的/ude1保证/v，/w这个/rz时候/n就/d需要/v在/p团队/gi中/f开展/v软件测试/gi的/ude1工作/gi。/w在/p测试/gi的/ude1过程/gi发现/v软件/gi中/f存在的问题/gi，/w及时/ad让/v开发人员/n得知/v并/cc修改/gi问题/gi，/w在/p即将/d发布/gi时/qt，/w从/p测试报告/gi中/f得出/v软件/gi的/ude1质量/gi情况/n。/w02./nz /x您/rr在/p以往/t的/ude1测试/gi工作/gi中都/ns曾经/d具体/a从事/vi过/uguo哪些/ry工作/gi？/w其中/rz最/d擅长/v哪/ry部分/n工作/gi？/w　/nz　/nz我/rr曾经/d做/v过/uguoweb/gi测试/gi，/w后台/gi测试/gi，/w客户端/gi软件/gi，/w其中/rz包括/v功能测试/gi，/w性能测试/gi，/w用户/gi体验/v测试/gi。/w最/d擅长/v的/ude1是/vshi功能测试/gi03./nz /x您/rr所/usuo熟悉/v的/ude1软件测试/gi类型/gi都/d有/vyou哪些/ry？/w请/v试着/v分别/d比较/gi这些/rz不同/a04./nz /x的/ude1测试/gi类型/gi的/ude1区别/gi与/cc联系/gi（/w如/v功能测试/gi、/w性能测试/gi…/w…/w）/w　　/nz测试/gi类型/gi有/vyou：/w功能测试/gi，/w性能测试/gi，/w界面/gi测试/gi。/w　　/nz功能测试/gi在/p测试/gi工作/gi中/f占/v的/ude1比例/n最大/gm，/w功能测试/gi也/d叫/vi黑盒测试/gi。/w是/vshi把/pba测试/gi对象/gi看作/v一个/mq黑盒子/n。/w利用/v黑盒/gi测试法/nz进行/vn动态/gi测试/gi时/qt，/w需要/v测试/gi软件产品/gi的/ude1功能/gi，/w不/d需/v测试/gi软件产品/gi的/ude1内部结构/nz和/cc处理过程/l。/w采用/v黑盒/gi技术/gi设计/gi测试用例/gi的/ude1方法/gi有/vyou：/w等/udeng价类/nz划分/v、/w边界/n分析/gi、/w错误/gi推测/v、/w因果图/nz和/cc综合/vn策略/gi。/w　　/nz性能测试/gi是/vshi通过/p自动化/gi的/ude1测试工具/nz模拟/gi多/a种/q正常/a、/w峰/ng以及/cc异常/gi负载/gi条件/n来/vf对系统/l的/ude1各项/r性能指标/nz进行/vn测试/gi。/w负载/gi测试/gi和/cc压力/n测试/gi都/d属于/v性能测试/gi，/w两者/rzv可以/v结合/v进行/vn。/w通过/p负载/gi测试/gi，/w确定/v在/p各种/rz工作/gi负载/gi下/f系统/gi的/ude1性能/gi，/w目标/gi是/vshi测试/gi当/p负载/gi逐渐/d增加/v时/qt，/w系统/gi各项/r性能指标/nz的/ude1变化/gi情况/n。/w压力/n测试/gi是/vshi通过/p确定/v一个/mq系统/gi的/ude1瓶颈/gi或者/c不能/v接收/gi的/ude1性能/gi点/gi，/w来/vf获得/v系统/gi能/v提供/v的/ude1最大/gm服务/gi级别/n的/ude1测试/gi。/w　　/nz界面/gi测试/gi，/w界面/gi是/vshi软件/gi与/cc用户/gi交互/gi的/ude1最/d直接/ad的/ude1层/gi，/w界面/gi的/ude1好坏/n决定/v用户/gi对/p软件/gi的/ude1第一印象/nz。/w而且/c设计/gi良好/a的/ude1界面/gi能够/v引导/v用户/gi自己/rr完成/v相应/vi的/ude1操作/gi，/w起到/v向导/gi的/ude1作用/gi。/w同时/c界面/gi如同/v人/n的/ude1面孔/n，/w具有/v吸引/v用户/gi的/ude1直接/ad优势/gi。/w设计/gi合理/a的/ude1界面/gi能/v给/p用户/gi带来/v轻松/a愉悦/a的/ude1感受/gi和/cc成功/a的/ude1感觉/gi，/w相反/vi由于/p界面设计/nz的/ude1失败/vi，/w让/v用户/gi有/vyou挫败/v感/vg，/w再/d实用/a强大/a的/ude1功能/gi都/d可能/v在/p用户/gi的/ude1畏惧/v与/cc放弃/gi中/f付诸东流/vl。/w　　/nz区别/gi在于/v，/w功能测试/gi关注/v产品/gi的/ude1所有/b功能/gi上/f，/w要/v考虑到/v每个/r细节/gi功能/gi，/w每个/r可能/v存在/v的/ude1功能/gi问题/gi。/w性能测试/gi主要/b关注/v于/p产品/gi整体/n的/ude1多用户/n并发/gi下/f的/ude1稳定性/n和/cc健壮性/nz。/w界面/gi测试/gi更/d关注/v于/p用户/gi体验/v上/f，/w用户/gi使用/gi该/rz产品/gi的/ude1时候/n是否/v易用/v，/w是否/v易懂/gi，/w是否/v规范/gi（/w快捷/z键/n之类/rz的/ude1）/w，/w是否/v美观/a（/w能否/v吸引/v用户/gi的/ude1注意力/n）/w，/w是否/v安全/gi（/w尽量/d在/p前台/n避免/v用户/gi无意/v输入/v无效/vi的/ude1数据/gi，/w当然/d考虑到/v体验性/n，/w不能/v太/d粗鲁/a的/ude1弹出/vf警告/vn）/w？/w做/v某个/rz性能测试/gi的/ude1时候/n，/w首先/d它/rr可能/v是/vshi个/q功能/gi点/gi，/w首先/d要/v保证/v它/rr的/ude1功能/gi是/vshi没问题/nz的/ude1，/w然后/c再考虑/nz该/rz功能/gi点/gi的/ude1性能测试/gi04．/nz您/rr认为/v做好/v测试用例/gi设计/gi工作/gi的/ude1关键/n是/vshi什么/ry？/w白盒/nz测试用例/gi设计/gi的/ude1关键/n是/vshi以/p较少/ad的/ude1用例/nz覆盖/gi尽可能/d多/a的/ude1内部/f程序逻辑/nz结果/n黑盒/gi法/n用/p例/n设计/gi的/ude1关键/n同样/d也/d是/vshi以/p较少/ad的/ude1用例/nz覆盖/gi模块/gi输出/gi和/cc输入/v接口/gi。/w不/d可能/v做到/v完全/ad测试/gi，/w以/p最少/d的/ude1用/p例/n在/p合理/a的/ude1时间/gi内/f发现/v最多/ad的/ude1问题/gi05./nz请/v试着/v比较/gi一/nz下/f黑盒测试/gi、/w白盒测试/gi、/w单元测试/gi、/w集成测试/gi、/w系统测试/gi、/w验收/vn测试/gi的/ude1区别/gi与/cc联系/gi。/w　　/nz黑盒测试/gi：/w已知/nz产品/gi的/ude1功能设计/i规/ng，/w可以/v进行/vn测试/gi证明/v每个/r实现/gi了/ule的/ude1功能/gi是否/v符合要求/n。/w　　/nz白盒测试/gi：/w已知/nz产品/gi的/ude1内部/f工作/gi过程/gi，/w可以/v通过/p测试/gi证明/v每种/r内部/f操作/gi是否/v符合/v设计/gi规/ng要求/n，/w所有/b内部/f成分/n是否/v以/p经过/p检查/gi。/w　　/nz软件/gi的/ude1黑盒测试/gi意味着/v测试/gi要/v在/p软件/gi的/ude1接口处/i进行/vn。/w这种/r方法/gi是/vshi把/pba测试/gi对象/gi看做/v一个/mq黑盒子/n，/w测试人员/n完全/ad不/d考虑/v程序/gi内部/f的/ude1逻辑结构/gi和/cc内部/f特性/gi，/w只/d依据/n程序/gi的/ude1需求/gi规/ng说明书/gi，/w检查程序/n的/ude1功能/gi是否/v符合/v它/rr的/ude1功能/gi说明/v。/w因此/c黑盒测试/gi又叫/v功能测试/gi或/c数据/gi驱动/gi测试/gi。/w黑盒测试/gi主要/b是/vshi为了/p发现/v以下/f几类/n错误/gi：/w　　/nz1/nz、/w是否/v有/vyou不/d正确/a或/c遗漏/v的/ude1功能/gi？/w　/nz　/nz2/nz、/w在/p接口/gi上/f，/w输入/v是否/v能/v正确/a的/ude1接受/gi？/w能否/v输出/gi正确/a的/ude1结果/n？/w　/nz　/nz3/nz、/w是否/v有/vyou数据结构/gi错误/gi或/c外部/f信息/gi（/w例如/v数据文件/nz）/w访问/gi错误/gi？/w　/nz　/nz4/nz、/w性能/gi上/f是否/v能够/v满足要求/nz？/w　/nz　/nz5/nz、/w是否/v有/vyou初始化/v或/c终止/v性/ng错误/gi？/w　/nz　/nz软件/gi的/ude1白盒测试/gi是/vshi对/p软件/gi的/ude1过程/gi性/ng细节/gi做/v细致/a的/ude1检查/gi。/w这种/r方法/gi是/vshi把/pba测试/gi对象/gi看做/v一个/mq打开/gi的/ude1盒子/n，/w它/rr允许/v测试人员/n利用/v程序/gi内部/f的/ude1逻辑结构/gi及/cc有关/vn信息/gi，/w设计/gi或/c选择/gi测试用例/gi，/w对/p程序/gi所有/b逻辑/n路径/gi进行/vn测试/gi。/w通过/p在/p不同点/n检查程序/n状态/gi，/w确定/v实际/n状态/gi是否/v与/cc预期/gi的/ude1状态/gi一致/a。/w因此/c白盒测试/gi又/d称为/v结构测试/gi或/c逻辑/n驱动/gi测试/gi。/w白盒测试/gi主要/b是/vshi想/v对/p程序模块/gi进行/vn如下/vi检查/gi：/w　　/nz1/nz、/w对/p程序模块/gi的/ude1所有/b独立/a的/ude1执行/v路径/gi至少/d测试/gi一/nz遍/qv。/w　　/nz2/nz、/w对/p所有/b的/ude1逻辑/n判定/gi，/w取“/nz真”/nz与/cc取“/nz假”/nz的/ude1两/nz种/q情况/n都/d能/v至少/d测/v一/nz遍/qv。/w　　/nz3/nz、/w在/p循环/gi的/ude1边界/n和/cc运行/gi的/ude1界限/n内/f执行/v循环体/n。/w　　/nz4/nz、/w测试/gi内部/f数据结构/gi的/ude1有效性/gi，/w等等/udeng。/w　　/nz单元测试/gi（/w模块/gi测试/gi）/w是/vshi开发者/gi编写/gi的/ude1一小/d段/q代码/gi，/w用于/v检验/gi被/pbei测/v代码/gi的/ude1一个/mq很小/a的/ude1、/w很/d明确/a的/ude1功能/gi是否/v正确/a。/w通常/d而言/uls，/w一个/mq单元测试/gi是/vshi用于/v判断/gi某个/rz特定条件/nz（/w或者/c场景/gi）/w下/f某个/rz特定/b函数/gi的/ude1行为/n。/w　　/nz单元测试/gi是/vshi由/p程序员/gi自己/rr来/vf完成/v，/w最终/d受益/vi的/ude1也/d是/vshi程序员/gi自己/rr。/w可以/v这么/rz说/v，/w程序员/gi有/vyou责任/n编写/gi功能/gi代码/gi，/w同时/c也/d就/d有/vyou责任/n为/p自己/rr的/ude1代码/gi编写/gi单元测试/gi。/w执行/v单元测试/gi，/w就是/v为了/p证明/v这段/r代码/gi的/ude1行为/n和/cc我们/rr期望/vn的/ude1一致/a。/w　　/nz集成测试/gi（/w也/d叫/vi组装/vn测试/gi，/w联合/gi测试/gi）/w是/vshi单元测试/gi的/ude1逻辑/n扩展/gi。/w它/rr的/ude1最简单/nz的/ude1形式/gi是/vshi：/w两/nz个/q已经/d测试过/nz的/ude1单元/n组合成/l一个/mq组件/gi，/w并且/c测试/gi它们/rr之间/f的/ude1接口/gi。/w从/p这一层/nz意义/n上/f讲/v，/w组件/gi是/vshi指/v多/a个/q单元/n的/ude1集成/vn聚合/gi。/w在/p现实/n方案/gi中/f，/w许多单元/nz组合成/l组件/gi，/w而/cc这些/rz组件/gi又/d聚合/gi成/v程序/gi的/ude1更大/d部分/n。/w方法/gi是/vshi测试/gi片段/n的/ude1组合/gi，/w并/cc最终/d扩展/gi进程/gi，/w将/d您/rr的/ude1模块/gi与/cc其他/rzv组/n的/ude1模块/gi一起/s测试/gi。/w最后/f，/w将/d构成/v进程/gi的/ude1所有/b模块/gi一起/s测试/gi。/w　　/nz系统测试/gi是/vshi将/d经过/p测试/gi的/ude1子系统/gi装配成/n一个/mq完整/a系统/gi来/vf测试/gi。/w它/rr是/vshi检验/gi系统/gi是否/v确实/ad能/v提供/v系统/gi方案/gi说明书/gi中/f指定/v功能/gi的/ude1有效/gi方法/gi。/w（/w常见/a的/ude1联调/v测试/gi）/w　　/nz系统测试/gi的/ude1目的/gi是/vshi对/p最终/d软件系统/gi进行/vn全面/ad的/ude1测试/gi，/w确保/v最终/d软件系统/gi满足/v产品/gi需求/gi并且/c遵循/gi系统设计/gi。/w　　/nz验收/vn测试/gi是/vshi部署/gi软件/gi之前/f的/ude1最后/f一个/mq测试/gi操作/gi。/w验收/vn测试/gi的/ude1目的/gi是/vshi确保/v软件/gi准备就绪/v，/w并且/c可以/v让/v最终用户/nz将/d其/rz用于/v执行/v软件/gi的/ude1既定/b功能/gi和/cc任务/gi。/w验收/vn测试/gi是/vshi向/p未来/t的/ude1用户/gi表明/v系统/gi能够/v像/v预定/vn要求/n那样/rzv工作/gi。/w经/p集成测试/gi后/f，/w已经/d按照/p设计/gi把/pba所有/b的/ude1模块/gi组装/vn成/v一个/mq完整/a的/ude1软件系统/gi，/w接口/gi错误/gi也/d已经/d基本/a排除/gi了/ule，/w接着/c就/d应该/v进一步/d验证/v软件/gi的/ude1有效性/gi，/w这/rzv就是/v验收/vn测试/gi的/ude1任务/gi，/w即/v软件/gi的/ude1功能/gi和/cc性能/gi如同/v用户/gi所/usuo合理/a期待/v的/ude1那样/rzv。/w06./nz /x测试计划/gi工作/gi的/ude1目的/gi是/vshi什么/ry？/w测试计划/gi工作/gi的/ude1内容/gi都/d包括/v什么/ry？/w其中/rz哪些/ry是/vshi最重要/nz的/ude1？/w　/nz　/nz软件/gi测试计划/gi是/vshi指导/vn测试过程/gi的/ude1纲领性/n文件/gi，/w包含/v了/ule产品/gi概述/gi、/w测试/gi策略/gi、/w测试方法/nz、/w测试/gi区域/n、/w测试/gi配置/gi、/w测试/gi周期/n、/w测试资源/gi、/w测试/gi交流/gi、/w风险分析/gi等/udeng内容/gi。/w借助/v软件/gi测试计划/gi，/w参与/gi测试/gi的/ude1项目/gi成员/nnt，/w尤其/d是/vshi测试/gi管理人员/nnt，/w可以/v明确/a测试/gi任务/gi和/cc测试方法/nz，/w保持/v测试/gi实施/gi过程/gi的/ude1顺畅/a沟通/gi，/w跟踪/vn和/cc控制/vn测试/gi进度/gi，/w应对/v测试过程/gi中的/v各种/rz变更/gi。/w测试计划/gi和/cc测试/gi详细/gi规/ng、/w测试用例/gi之间/f是/vshi战略/gi和/cc战术/n的/ude1关系/gi，/w测试计划/gi主要/b从/p宏观/gi上/f规划/gi测试/gi活动/gi的/ude1范围/n、/w方法/gi和/cc资源配置/nz，/w而/cc测试/gi详细/gi规/ng、/w测试用例/gi是/vshi完成/v测试/gi任务/gi的/ude1具体/a战术/n。/w所以/c其中/rz最重要/nz的/ude1是/vshi测试/gi测试/gi策略/gi和/cc测试方法/nz（/w最好/d是/vshi能/v先/d评审/gi）/w07./nz /x您/rr认为/v做好/v测试计划/gi工作/gi的/ude1关键/n是/vshi什么/ry？/w　/nz　/nz1./nz /x明确/a测试/gi的/ude1目标/gi，/w增强/v测试计划/gi的/ude1实用性/n　　/nz编写/gi软件/gi测试计划/gi得/ude3重要/a目的/gi就是/v使/v测试过程/gi能够/v发现/v更多/ad的/ude1软件缺陷/gi，/w因此/c软件/gi测试计划/gi的/ude1价/n取决于/v它/rr对/p帮助/v管理/gi测试项目/n，/w并且/c找出/v软件/gi潜在/b的/ude1缺陷/gi。/w因此/c，/w软件/gi测试计划/gi中的/v测试/gi范围/n必须/d高度/d覆盖/gi功能/gi需求/gi，/w测试方法/nz必须/d切实可行/vl，/w测试工具/nz并且/c具有/v较高/ad的/ude1实用性/n，/w便于/v使用/gi，/w生成/v的/ude1测试/gi结果/n直观/a、/w准确/a　　/nz2．/nz坚持/v“/w5/nzw/nz”/w规则/gi，/w明确/a内容/gi与/cc过程/gi　　/nz“/w5/nzw/nz”/w规则/gi指/v的/ude1是/vshi“/wwhat/nz（/w做/v什么/ry）/w”/w、/w“/wwhy/nz（/w为什么/ryv做/v）/w”/w、/w“/wwhen/nz（/w何时/ryt做/v）/w”/w、/w“/wwhere/nz（/w在/p哪里/rys）/w”/w、/w“/whow/nz（/w如何/ryv做/v）/w”/w。/w利用/v“/w5/nzw/nz”/w规则/gi创建/gi软件/gi测试计划/gi，/w可以/v帮助/v测试/gi团队/gi理解/gi测试/gi的/ude1目的/gi（/wwhy/nz）/w，/w明确/a测试/gi的/ude1范围/n和/cc内容/gi（/wwhat/nz）/w，/w确定/v测试/gi的/ude1开始/v和/cc结束/v日期/gi（/wwhen/nz）/w，/w指出/v测试/gi的/ude1方法/gi和/cc工具/gi（/whow/nz）/w，/w给出/v测试/gi文档/gi和/cc软件/gi的/ude1存放/v位置/gi（/wwhere/nz）/w。/w　　/nz3．/nz采用/v评审/gi和/cc更新/gi机制/gi，/w保证/v测试计划/gi满足/v实际/n需求/gi测试计划/gi写作/gi完成/v后/f，/w如果/c没有/v经过/p评审/gi，/w直接/ad发送给/n测试/gi团队/gi，/w测试计划/gi内容/gi的/ude1可能/v不/d准确/a或/c遗漏/v测试/gi内容/gi，/w或者/c软件需求/gi变更/gi引起/v测试/gi范围/n的/ude1增减/vn，/w而/cc测试计划/gi的/ude1内容/gi没有/v及时/ad更新/gi，/w误导/v测试/gi执行/v人员/gi。/w　　/nz4./nz /x分别/d创建/gi测试计划/gi与/cc测试/gi详细/gi规/ng、/w测试用例/gi　　/nz应/v把/pba详细/gi的/ude1测试/gi技术指标/nz包含/v到/v独立/a创建/gi的/ude1测试/gi详细/gi规文/nz档/ng，/w把/pba用于/v指导/vn测试/gi小组/nis执行/v测试过程/gi的/ude1测试用例/gi放到/v独立/a创建/gi的/ude1测试用例/gi文档/gi或/c测试用例管理/gi数据库/gi中/f。/w测试计划/gi和/cc测试/gi详细/gi规/ng、/w测试用例/gi之间/f是/vshi战略/gi和/cc战术/n的/ude1关系/gi，/w测试计划/gi主要/b从/p宏观/gi上/f规划/gi测试/gi活动/gi的/ude1范围/n、/w方法/gi和/cc资源配置/nz，/w而/cc测试/gi详细/gi规/ng、/w测试用例/gi是/vshi完成/v测试/gi任务/gi的/ude1具体/a战术/n。/w08./nz /x您/rr所/usuo熟悉/v的/ude1测试用例/gi设计/gi方法/gi都/d有/vyou哪些/ry？/w请/v分别/d以/p具体/a的/ude1例子/gi来/vf说明/v这些/rz方法/gi在/p测试用例/gi设计/gi工作/gi中的/v应用/gi。/w　　/nz1．/nz等价/vn类/gi划分/v　　/nz划分/v等/udeng价类/nz:/w /x等/udeng价类/nz是/vshi指/v某个/rz输入/v域/ng的/ude1子集合/nz./nz在/p该子/nz集合/gi中/f,/nz各个/rz输入/v数据/gi对于/p揭露/v程序/gi中的/v错误/gi都/d是/vshi等效/b的/ude1./nz并/cc合理/a地/ude2假定/v:/w测试/gi某/rz等/udeng价类/nz的/ude1代表/nnt就/d等于/v对/p这/rzv一类/b其它/rz的/ude1测试/gi./nz因此/c,/nz可以/v把/pba全部/m输入/v数据/gi合理/a划分/v为/p若干/m等/udeng价类/nz,/nz在/p每一个/nz等/udeng价类/nz中/f取一个/nz数据/gi作为/p测试/gi的/ude1输入/v条件/n,/nz就/d可以/v用/p少/a量/n代表性/n的/ude1测试数据/gi./nz取得/v较好/d的/ude1测试/gi结果/n./nz等/udeng价类/nz划分/v可有/v两/nz种/q不同/a的/ude1情况/n:/w有效/gi等/udeng价类/nz和/cc无效/vi等/udeng价类/nz./nz　　/nz2．/nz边界/n分析法/nz　　/nz边界/n分析方法/nz是/vshi对等/vn价类/nz划分/v方法/gi的/ude1补充/vn。/w测试/gi工作经验/gi告诉/v我/rr,/nz大量/m的/ude1错误/gi是/vshi发生/v在/p输入/v或/c输出/gi范围/n的/ude1边界/n上/f,/nz而/cc不是/c发生/v在/p输入输出/gi范围/n的/ude1内部/f./nz因此/c针对/gi各种/rz边界/n情况/n设计/gi测试用例/gi,/nz可以/v查出/v更多/ad的/ude1错误/gi./nz　　/nz使用/gi边界/n分析方法/nz设计/gi测试用例/gi,/nz首先/d应/v确定/v边界/n情况/n./nz通常/d输入/v和/cc输出/gi等/udeng价类/nz的/ude1边界/n,/nz就是/v应/v着重/vd测试/gi的/ude1边界/n情况/n./nz应当/v选取/gi正好/z等于/v,/nz刚刚/d大于/v或/c刚刚/d小于/v边界/n的/ude1作为/p测试数据/gi,/nz而/cc不是/c选取/gi等/udeng价类/nz中的/v典型/n或/c任意/d作为/p测试数据/gi./nz3．/nz错误/gi推测/v法/n　　/nz基于/p经验/gi和/cc直觉/n推测/v程序/gi中/f所有/b可能/v存在/v的/ude1各种/rz错误/gi,/nz /x从而/c有/vyou针对性/n的/ude1设计/gi测试用例/gi的/ude1方法/gi./nz　　/nz错误/gi推测/v方法/gi的/ude1基本/a思想/gi:/w /x列举/v出程序/nz中/f所有/b可能/v有的/rz错误/gi和/cc容易/ad发生/v错误/gi的/ude1特殊/a情况/n,/nz根据/p他们/rr选择/gi测试用例/gi./nz /x例如/v,/nz /x在/p单元测试/gi时/qt曾/d列出/v的/ude1许/v多/a在/p模块/gi中/f常见/a的/ude1错误/gi./nz /x以前/f产品测试/gi中/f曾经/d发现/v的/ude1错误/gi等/udeng,/nz /x这些/rz就是/v经验/gi的/ude1总结/gi./nz /x还有/v,/nz /x输入/v数据/gi和/cc输出/gi数据/gi为/p0/nz的/ude1情况/n./nz /x输入/v表/n为/p空/ng或/c输入/v表/n只有/c一行/n./nz /x这些/rz都/d是/vshi容易/ad发生/v错误/gi的/ude1情况/n./nz /x可选择/nz这些/rz情况下/nz的/ude1例子/gi作为/p测试用例/gi./nz4．/nz因果图/nz方法/gi　　/nz前面/f介绍/gi的/ude1等/udeng价类/nz划分/v方法/gi和/cc边界/n分析方法/nz,/nz都/d是/vshi着重/vd考虑/v输入/v条件/n,/nz但/c未/d考虑/v输入/v条件/n之间/f的/ude1联系/gi,/nz /x相互/d组合/gi等/udeng./nz /x考虑/v输入/v条件/n之间/f的/ude1相互/d组合/gi,/nz可能会/nz产生/v一/nz些/q新的/a情况/n./nz /x但要/c检查/gi输入/v条件/n的/ude1组合/gi不是/c一件/nz容易/ad的/ude1事情/n,/nz /x即使/c把/pba所有/b输入/v条件/n划分/v成/v等/udeng价类/nz,/nz他们/rr之间/f的/ude1组合/gi情况/n也/d相当多/nz./nz /x因此/c必须/d考虑/v采用/v一种/nz适合于/v描述/gi对于/p多种/m条件/n的/ude1组合/gi,/nz相应/vi产生/v多/a个/q动作/gi的/ude1形式/gi来/vf考虑/v设计/gi测试用例/gi./nz /x这/rzv就/d需要/v利用/v因果图/nz（/w逻辑/n模型/gi）/w./nz /x因果图/nz方法/gi最终/d生成/v的/ude1就是/v判定/gi表/n./nz /x它/rr适合于/v检查程序/n输入/v条件/n的/ude1各种/rz组合/gi情况/n./nz09./nz /x请/v以/p您/rr以往/t的/ude1实际/n工作/gi为/p例/n，/w10./nz /x详细/gi的/ude1描述/gi一次/nz测试用例/gi设计/gi的/ude1完整/a的/ude1过程/gi。/w　　/nz就/d说/v最近/t的/ude1这次/r网站/gi功能/gi的/ude1测试/gi吧/y　　/nz首先/d：/w得到/v相关/vn文档/gi（/w需求/gi文档/gi和/cc设计/gi文档/gi）/w，/w理解/gi需求/gi和/cc设计/gi设计/gi思想/gi后/f，/w想好/v测试/gi策略/gi（/w测试计划/gi简单/a点/gi就/dok/nz了/ule）/w，/w考虑到/v测试环境/nz，/w测试用例/gi，/w测试/gi时间/gi等/udeng问题/gi。/w　/nz　/nz第二步/nz：/w设计/gi测试用例/gi，/w测试/gi策略/gi是/vshi：/w把/pba网站/gi部分/n的/ude1功能/gi点/gi测试/gi完/vi，/w然后/c在/p进行/vn系统测试/gi（/w另外/c个/q模块/gi呢/y有/vyou另一个/nz测试人员/n负责/v，/w可以/v进行/vn联调/v测试/gi）/w，/w网站/gi模块/gi的/ude1测试/gi基本/a是/vshi功能测试/gi和/cc界面/gi测试/gi（/w用户/gi并发/gi的/ude1可能性/gi很小/a，/w所以/c不/d考虑/v）/w：/w这次/r的/ude1网站/gi的/ude1输入/v数据/gi呢/y是/vshi使用/gi数据库/gi中的/v某/rz张/q表/n记录/gi，/w如果/c表/n中/f某/rz一/nz数据/gi记录/gi中新/ns加/v进来/vf的/ude1（/w还/d没有/v被/pbei处理/vn的/ude1，/w有/vyou个/q标志/n位/q）/w，/w网站/gi启动/gi后会/n立刻/d去/vf刷/v那/rzv张/q表/n，/w得到/v多/a条/q数据/gi，/w然后/c在/p进行/vn处理/vn。/w处理过程/l中/f，/w会/v经历/gi3/nz个/q步骤/gi，/w网站/gi才算/d完成/v了/ule它/rr的/ude1任务/gi。/w有/vyou3/nz个/q步骤/gi呢/y，/w就/d可以/v分别/d对/p　　/nz这/rzv3/nz个/q步骤/gi进行/vn测试用例/gi的/ude1设计/gi,/nz尽量/d覆盖/gi到/v各种/rz输入/v情况/n（/w包括/v数据库/gi中的/v数据/gi，/w用户/gi的/ude1输入/v等/udeng）/w，/w得出/v了/ule差不多/al50/nz个/q用/p例/n。/w界面/gi测试/gi，/w也/d就是/v用户/gi看/v的/ude1到/v的/ude1地方/n，/w包括/v发送/gi的/ude1邮件/n和/cc用户/gi填写/v资料/gi的/ude1页面/gi展示/gi。/w　/nz　/nz第三步/nz：/w搭建/v测试环境/nz（/w为什么/ryv这个/rz时候/n考虑/v测试环境/nz呢/y？/w因为/c我/rr对/p网站/gi环境/n已经/d很熟/a了/ule，/w只有/c有机器/nz能/v空/ng于/p下来/vf做/v该/rz功能测试/gi就/d可以/v做/v了/ule）/w，/w因为/c网站/gi本身/rz的/ude1环境/n搭建/v和/cc其他/rzv的/ude1系统/gi有点/d不同/a，/w它/rr需要/v的/ude1测试环境/nz比较/gi麻烦/an，/w需要/vweb服务器/gi（/wapache/gi,/nztomcat/nz）/w，/w不过/c这次/r需求/gi呢/y，/w网站/gi部分/n只用/v到/v了/uletomcat/nz，/w所以/c只要/c有/vyoutomcat/nz即可/v　/nz　/nz第四步/nz：/w执行/v测试/gi11./nz /x您/rr以往/t是否/v曾经/d从事/vi过/uguo性能测试/gi工作/gi？/w如果/c有/vyou，/w12./nz /x请/v尽可能/d的/ude1详细描述/n您/rr以往/t的/ude1性能测试/gi工作/gi的/ude1完整/a过程/gi。/w　　/nz是/vshi的/ude1，/w曾经/d做/v过/uguo网站/gi方面/n的/ude1性能测试/gi，/w虽然/c做/v的/ude1时间/gi并/cc不久/d（/w2/nz个/q月/n吧/y）/w，/w当时/t呢/y，/w是/vshi有/vyou位/q网站/gi性能测试/gi经验/gi非常丰富/l的/ude1前辈/n带着/vn我/rr一起/s做/v。/w性能测试/gi类型/gi包括/v负载/gi测试/gi，/w强度/n测试/gi，/w容量/gi测试/gi等/udeng　　/nz负载/gi测试/gi：/w负载/gi测试/gi是/vshi一种性/nz能测试/nz指数据/nz在/p超负荷/b环境中运行/nt，/w程序/gi是否/v能够/v承担/v。/w　　/nz强度/n测试/gi：/w /x强度/n测试/gi是/vshi一种性/nz能测试/nz，/w他/rr在/p系统资源/gi特别/d低/a的/ude1情况下/nz软件系统/gi运行/gi情况/n　　/nz容量/gi测试/gi：/w确定/v系统/gi可/v处理/vn同时在线/l的/ude1最大/gm用户数/n　　/nz在/p网站/gi流量/gi逐渐/d加大/v的/ude1情况下/nz，/w开始/v考虑/v做/v性能测试/gi了/ule，/w首先/d要/v写/v好/a性能/gi测试计划/gi，/w根据/p运营数据/gi得出/v流量/gi最大/gm的/ude1页面/gi（/w如果/c是/vshi第一次/nz的话/udh，/w一般/ad是/vshi首页/gi，/w下载页/n，/w个人帐户/nz页/q流量/gi最大/gm，/w而且/c以/p某种/rz百分比/n）/w，/w　　/nzweb服务器/gi指标/gi指标/gi：/w　　/nz*/nz avg rps/nz:/w /x平均/a每秒钟/nz响应/v次数/gi＝/nz总/b请求/gi时间/gi /x//nz /x秒数/n；/w　/nz　/nz*/nz successful rounds/nz：/w成功/a的/ude1请求/gi；/w　/nz　/nz*/nz failed rounds /nz：/w失败/vi的/ude1请求/gi；/w　/nz　/nz*/nz successful hits /nz：/w成功/a的/ude1点击/v次数/gi；/w　/nz　/nz*/nz failed hits /nz：/w失败/vi的/ude1点击/v次数/gi；/w　/nz　/nz*/nz hits per second /nz：/w每秒/d点击/v次数/gi；/w　/nz　/nz*/nz successful hits per second /nz：/w每秒/d成功/a的/ude1点击/v次数/gi；/w　/nz　/nz*/nz failed hits per second /nz：/w每秒/d失败/vi的/ude1点击/v次数/gi；/w　/nz　/nz*/nz attempted connections /nz：/w尝试/v链接/gi数/n；/w　　/nz13./nz /x您/rr在/p从事/vi性能测试/gi工作/gi时/qt，/w14./nz /x是否/v使用/gi过/uguo一/nz些/q测试工具/nz？/w如果/c有/vyou，/w15./nz /x请/v试述/nz该/rz工具/gi的/ude1工作原理/gi，/w16./nz /x并以/c一个/mq具体/a的/ude1工作/gi中的/v例子/gi描述/gi该/rz工具/gi是/vshi如何/ryv在/p实际/n工作/gi中/f应用/gi的/ude1。/w17./nz /x您/rr认为/v性能测试/gi工作/gi的/ude1目的/gi是/vshi什么/ry？/w做好/v性能测试/gi工作/gi的/ude1关键/n是/vshi什么/ry？/w18./nz /x在/p您/rr以往/t的/ude1工作/gi中/f，/w19./nz /x一条/nz软件缺陷/gi（/w或者/c叫/vibug/gi）/w记录/gi都/d包含/v了/ule哪些/ry内容/gi？/w如何/ryv提交/gi高质量/nz的/ude1软件缺陷/gi（/wbug/gi）/w记录/gi？/w20./nz /x您/rr以往/t所/usuo从事/vi的/ude1软件测试/gi工作/gi中/f，/w21./nz /x是否/v使用/gi了/ule一/nz些/q工具/gi来/vf进行/vn软件缺陷/gi（/wbug/gi）/w的/ude1管理/gi？/w如果/c有/vyou，/w22./nz /x请/v结合/v该/rz工具/gi描述/gi软件缺陷/gi（/wbug/gi）/w跟踪管理/gi的/ude1流程/gi。/w23./nz /x您/rr认为/v在/p测试人员/n同/p24./nz /x开发人员/n的/ude1沟通/gi过程/gi中/f，/w25./nz /x如何/ryv提高/v沟通/gi的/ude1效率/gi和/cc改善/v沟通/gi的/ude1效果/gi？/w维持/v测试人员/n同/p26./nz /x开发/gi团队/gi中/f其他/rzv成员/nnt良好/a的/ude1人际关系/n的/ude1关键/n是/vshi什么/ry？/w27./nz /x在/p您/rr以往/t的/ude1测试/gi工作/gi中/f，/w28./nz /x最/d让/v您/rr感到/v不/d29./nz /x满意/v或者/c不/d30./nz /x堪回首/nz的/ude1事情/n是/vshi什么/ry？/w您/rr是/vshi如何/ryv来/vf对待/v这些/rz事情/n的/ude1？/w31./nz /x在/p即将/d完成/v这次/r笔试/gi前/f，/w32./nz /x您/rr是否/v愿意/v谈/v一/nz些/q自己/rr在/p以往/t的/ude1学习/gi和/cc工作/gi中/f获得/v的/ude1工作经验/gi和/cc心得体会/nz？/w（/w可以/v包括/v软件测试/gi、/w过程/gi改进/gi、/w软件开发/nz或者/c与此无关/nz的/ude1其他/rzv方面/n）/w33./nz你/rr对/p测试/gi最大/gm的/ude1兴趣/gi在/p哪里/rys？/w为什么/ryv？/w　　/nz最大/gm的/ude1兴趣/gi就是/v测试/gi有/vyou难度/n，/w有/vyou挑战性/n！/w做/v测试/gi越/d久/a越/d能/v感觉到/v做好/v测试/gi有/vyou多难/nz。/w曾经/d在/p无忧/nz测试/gi网上/s看到/v一篇/nz文章/gi，/w是/vshi关于/p如何/ryv做好/v一名/nz测试/gi工程师/gi。/w一共/d罗列/v了/ule11/nz，/w12/nz点/gi，/w有/vyou部分/n是/vshi和/cc人/n的/ude1性/ng有关/vn，/w有/vyou部分/n需要/v后天/n的/ude1努力/gi。/w但/c除了/p性/ng有关/vn的/ude11/nz，/w2/nz点/gi我/rr没有/v把握/gi，/w其他/rzv点/gi我/rr都/d很/d有/vyou信心/n做好/v它/rr。/w　　/nz刚开始/nz进入/v测试/gi行业/gi时/qt，/w对/p测试/gi的/ude1认识/v是从/v无忧/nz测试/gi网上/s了解到/v的/ude1一些/m资料/gi，/w当时/t是/vshi冲着/p做/v测试/gi需要/v很/d多/a技能/gi才能/n做/v的/ude1好/a，/w虽然/c入门/gi容易/ad，/w但/c做好/v很难/d，/w比/p开发/gi更/d难/a，/w虽然/c当时/t我/rr很/d想/v做/v开发/gi（/w学校/nis专业课/n我/rr基本上/d不/d缺席/vi，/w因为/c我/rr喜欢/gi我/rr的/ude1专业/n）/w，/w但/c看到/v测试/gi比/p开发/gi更/d难/a更/d有/vyou挑战性/n，/w想/v做好/v测试/gi的/ude1意志/n就/d更/d坚定/a了/ule。/w　　/nz不到/v一年半/nz的/ude1测试/gi工作/gi中/f，/w当时/t的/ude1感动/v和/cc热情/an没有/v减退/v一点/m（/w即使/c环境/n问题/gi以及/cc自身/rr经验/gi，/w技术/gi的/ude1不足/an，/w做/v测试/gi的/ude1你/rr一定/b也/d能/v理解/gi）/w。/w　　/nz我/rr觉得/v做/v测试/gi整个/b过程/gi中/f有/vyou2/nz点/gi让/v我/rr觉得/v很/d有/vyou难度/n（/w对/p我/rr来说/uls，/w有/vyou难度/n的/ude1东西/n我/rr就/d非常/d感兴趣/a）/w，/w第一/mq是/vshi测试用例/gi的/ude1设计/gi，/w因为/c测试/gi的/ude1精华/n就/d在/p测试用例/gi的/ude1设计/gi上/f了/ule，/w要/v在/p版本/n出来/vf之前/f，/w把/pba用例/nz写/v好/a，/w用/p什么/ry测试方法/nz写/v？/w（/w也/d就是/v测试计划/gi或/c测试/gi策略/gi）/w，/w如果/c你/rr刚/d测试/gi一个/mq新任务/nz时/qt，/w你/rr得/ude3花/n一定/b的/ude1时间/gi去/vf消化/v业务/gi需求/gi和/cc技术/gi基础/gi，/w业务/gi需求/gi很好/ad理解/gi（/w多/a和/cc产品经理/gi和/cc开发人员/n沟通/gi就/d能/v达到/v目的/gi）/w，/w而/cc技术/gi基础/gi可/v就/d没/d那么/c简单/a了/ule，/w这/rzv需要/v你/rr自觉/a的/ude1学习/gi能力/gi，/w比如说/vl网站/gi吧/y，/w最/d基本/a的/ude1技术/gi知识/gi你/rr要/v知道/v网站/gi内部/f是/vshi怎么/ryv运作/gi的/ude1的/ude1，/w后台/gi是/vshi怎么/ryv响应/v用户/gi请求/gi的/ude1？/w测试环境/nz如何/ryv搭建/v？/w这些/rz都/d需要/v最早/d的/ude1学好/v。/w至少/d在/p开始/v测试/gi之前/f能/v做好/v基本/a的/ude1准备/v，/w可能会/nz遇到/v什么/ry难题/n？/w需求/gi细节/gi是不是/v没有/v确定/v好/a？/w这些/rz问题/gi都/d能/v在/p设计用例/gi的/ude1时候/n发现/v。/w　/nz　/nz第二/mq是/vshi发现/vbug/gi的/ude1时候/n了/ule，/w这/rzv应该/v是/vshi测试人员/n最/d基本/a的/ude1任务/gi了/ule，/w一般/ad按/p测试用例/gi开始/v测试/gi就/d能/v发现/v大部分/n的/ude1bug/gi，/w还有/v一/nz部分/nbug/gi需要/v测试/gi的/ude1过程/gi中/f更/d了解/v所/usuo测/v版本/n的/ude1情况/n获得/v更多/ad信息/gi，/w补充/vn测试用例/gi，/w测试/gi出/vfbug/gi。/w还有/v如何/ryv发现/vbug/gi？/w这/rzv就/d需要/v在/p测试用例/gi有效/gi的/ude1情况下/nz，/w通过/p细心/a和/cc耐心/gi去/vf发现/vbug/gi了/ule，/w每个/r用例/nz都/d有可能/nz发现/vbug/gi，/w每个/r地方/n都/d有可能/nz出错/gi，/w所以/c测试过程/gi中/f思维/gi要/v清晰/a（/w测试过程/gi数据流/n及/cc结果/n都/d得/ude3看/v仔细/ad了/ule，/wbug/gi都/d在/p里面/f发现/v的/ude1）/w。/w如何/ryv描述/gibug/gi也/d很/d有/vyou讲究/v，/wbug/gi在/p什么/ry情况下/nz会/v产生/v，/w如果/c条件/n变化/gi一点点/nz，/w就/d不会/v有/vyou这个/rzbug/gi，/w以/p哪些/ry最少/d的/ude1操作步骤/nz就/d能/v重现/v这个/rzbug/gi，/w这个/rzbug/gi产生/v的/ude1规律/gi是/vshi什么/ry？/w如果/c你/rr够/v厉害/a的话/udh，/w可以/v帮/v开发人员/n初步/d定位问题/n。/w34./nz /x你/rr的/ude1测试/gi职业/gi发展/gi是/vshi什么/ry？/w　/nz　/nz测试/gi经验/gi越多/ad，/w测试/gi能力/gi越高/d。/w所以/c我/rr的/ude1职业/gi发展/gi是/vshi需要/v时间/gi累积/v的/ude1，/w一步步/nz向着/p高级/a测试/gi工程师/gi奔去/nz。/w而且/c我/rr也/d有/vyou初步/d的/ude1职业规划/nz，/w前/f3/nz年/qt累积/v测试/gi经验/gi，/w按/p如何/ryv做好/v测试/gi工程师/gi的/ude111/nz，/w12/nz点/gi要求/n自己/rr，/w不断/d的/ude1更新/gi自己/rr改正/v自己/rr，/w做好/v测试/gi任务/gi。/w35./nz /x你/rr自/p认为/v测试/gi的/ude1优势/gi在/p哪里/rys？/w　　/nz优势/gi在于/v我/rr对/p测试/gi坚定不移/vl的/ude1信心/n和/cc热情/an，/w虽然/c经验/gi还/d不够/a，/w但/c测试/gi需要/v的/ude1基本技能/nz我/rr有/vyou信心/n在工作中/l得以/v发挥/v。/w36./nz /x你/rr以前/f工作/gi时/qt的/ude1测试流程/gi是/vshi什么/ry？/w　/nz　/nz公司/nis对/p测试流程/gi没有/v规定/n如何/ryv做/v，/w但/c每个/r测试人员/n都/d有/vyou自己/rr的/ude1一套/nz测试流程/gi。/w我/rr说/v下/f我/rr1/nz年/qt来/vf不断/d改正/v（/w自己/rr总结/gi，/w吸取/v同行/gi的/ude1方法/gi）/w后/f的/ude1流程/gi吧/y。/w需求评审/gi（/w有/vyou开发人员/n，/w产品经理/gi，/w测试人员/n，/w项目经理/nnt）/w－/w需求/gi确定/v(/nz出/vf一份/nz确定/v的/ude1需求/gi文档/gi)/nz－/w开发设计/i文档/gi（/w开发人员/n在/p开始/v写/v代码/gi前/f就/d能/v输出/gi设计/gi文档/gi）/w－/w想好/v测试/gi策略/gi，/w写出/v测试用例/gi－/w发给/v开发人员/n和/cc测试/gi经理/gi看看/v（/w非正式/b的/ude1评审/gi用/p例/n）/w－/w接到/v测试/gi版本/n－/w执行/v测试用例/gi（/w中间/f可能会/nz补充/vn用/p例/n）/w－/w提交/gibug/gi（/w有些/rzbug/gi需要/v开发人员/n的/ude1确定/v（/w严重/a级别/n的/ude1，/w或/c突然/ad发现/v的/ude1在/p测试用例/gi范围/n之外/f的/ude1，/w难以/d重现/v的/ude1）/w，/w有些/rz可以/v直接/ad录制/v进/vftd/nz）/w－/w开发人员/n修改/gi（/w可以/v在/p测试过程/gi中/f快速/d的/ude1修改/gi）/w－/w回归/gi测试/gi（/w可能/v又/d会/v发现/v新问题/nz，/w再/d按/p流程/gi开始/v跑/v）/w。/w37./nz /x当/p开发人员/n说/v不/d38./nz /x是/vshibug/gi时/qt，/w39./nz /x你/rr如何/ryv应付/v？/w　　/nz开发人员/n说/v不是/cbug/gi，/w有/vyou2/nz种/q情况/n，/w一是/nz需求/gi没有/v确定/v，/w所以/c我/rr可以/v这么/rz做/v，/w这个/rz时候/n可以/v找来/v产品经理/gi进行/vn确认/v，/w需不需要/v改动/vn，/w3/nz方/q商量/v确定/v好/a后/f再/d看/v要/v不要/d改/v。/w二是/nz这种/r情况/n不/d可能/v发生/v，/w所以/c不/d需要/v修改/gi，/w这个/rz时候/n，/w我/rr可以/v先/d尽可能/d的/ude1说出/v是/vshibug/gi的/ude1依据/n是/vshi什么/ry？/w如果/c被/pbei用户/gi发现/v或/c出/vf了/ule问题/gi，/w会/v有/vyou什么/ry不良/a结果/n？/w程序员/gi可能会/nz给/p你/rr很/d多/a理由/n，/w你/rr可以/v对/p他/rr的/ude1解释/gi进行/vn反驳/v。/w如果/c还是/c不行/a，/w那/rzv我/rr可以/v给/p这个/rz问题/gi提出/v来/vf,/nz跟/p开发/gi经理/gi和/cc测试/gi经理/gi进行/vn确认/v,/nz如果/c要/v修改/gi就/d改/v,/nz如果/c不要/d修改/gi就/d不/d改/v。/w其实/d有些/rz真的/d不是/cbug/gi，/w我/rr也/d只是/d建议/gi的/ude1方式/n写进/vtd/nz中/f，/w如果/c开发人员/n不/d修改/gi也/d没有/v大/a问题/gi。/w如果/c确定/v是/vshibug/gi的话/udh，/w一定/b要/v坚持/v自己/rr的/ude1立场/n，/w让/v问题/gi得到/v最后/f的/ude1确认/v。/w23．/nz你/rr为什么/ryv想/v离开/v目前/t的/ude1职务/n？/w　　/nz因为/c公司/nis运作/gi情况/n并不/d理想/n，/w公司/nis需要/v调整/vn部门/gi体系/gi，/w公司/nis考虑到/v缩减/v部门/gi人员/gi，/w所以/c大批量/d的/ude1裁员/vi（/w有/vyou6/nz，/w7/nz个/q）/w，/w这/rzv是/vshi我/rr的/ude1第一/mq份/q工作/gi，/w对/p公司/nis也/d有/vyou较深/d的/ude1感情/n，/w因为/c在/p这里/rzs我/rr找到/v了/ule职业/gi理想/n（/w就是/v测试/gi）/w，/w所以/c公司/nis需要/v精简人员/nz，/w我/rr自愿/vd退出/gi。/w虽然/c很/d舍不得/v，/w但/c我/rr将/d会/v有/vyou新的/a发挥/v能力/gi的/ude1舞台/n。/w24/nz：/w你/rr对/p我们/rr公司/nis了解/v有/vyou多少/ry？/w25/nz：/w你/rr找/v工作/gi时/qt，/w最重要/nz的/ude1考虑/v因素/gi为何/ryv？/w　/nz　/nz工作/gi的/ude1性质/n和/cc内容/gi是否/v能/v让/v我/rr发挥所长/n，/w并/cc不断/d成长/gi。/w26/nz：/w为什么/ryv我们/rr应该/v录取/v你/rr？/w　/nz　/nz您/rr可以/v由/p我/rr过去/vf的/ude1工作/gi表现/v所/usuo呈现/v的/ude1客观/a数据/gi，/w明显/a地/ude2看出/v我/rr全力以赴/vl的/ude1工作/gi态度/n。/w27/nz：/w请/v谈谈/v你/rr个人/n的/ude1最大/gm特色/n。/w　　/nz我/rr的/ude1坚持/v度/qv很高/d，/w事情/n没有/v做到/v一个/mq令人满意/al的/ude1结果/n，/w绝不/d罢手/vi。/w28./nz白箱/n测试/gi和/cc黑箱测试/gi是/vshi什么/ry?/nz什么/ry是/vshi回归/gi测试/gi?/nz29。/nz单元测试/gi、/w集成测试/gi、/w系统测试/gi的/ude1侧重点/n是/vshi什么/ry？/w30。/nz设计用例/gi的/ude1方法/gi、/w依据/n有/vyou那些/rz？/w31。/nz一个/mq测试/gi工程师/gi应/v具备/v那些/rz素质/gi和/cc技能/gi？/w32./nz集成测试/gi通常/d都/d有/vyou那些/rz策略/gi？/w33./nz你/rr用/p过/uguo的/ude1测试工具/nz的/ude1主要/b功能/gi、/w性能/gi及/cc其他/rzv？/w34./nz一个/mq缺陷/gi测试报告/gi的/ude1组成/gi35./nz基于/pweb/gi信息管理/gi系统测试/gi时/qt应/v考虑/v的/ude1因素/gi有/vyou哪些/ry？/w36./nz软件/gi测试项目/n从/p什么/ry时候/n开始/v，/w？/w为什么/ryv？/w37./nz需求/gi测试/gi注意事项/nz有/vyou哪些/ry？/w38./nz简述/v一下/m缺陷/gi的/ude1生命周期/nz39./nz测试/gi分析测试/nz用/p例/n注意/v（/w事项/n）/w？/w　/nz　/nz你/rr在/p你/rr所在/n的/ude1公司/nis是/vshi怎么/ryv开展/v测试/gi工作/gi的/ude1？/w是/vshi如何/ryv组织/gi的/ude1？/w　/nz　/nz你/rr认为/v理想/n的/ude1测试流程/gi是/vshi什么/ry样子/n？/w　/nz　/nz你/rr是/vshi怎样/ryv工作/gi的/ude1？/w　/nz　/nz软件测试/gi活动/gi的/ude1生命周期/nz是/vshi什么/ry？/w　/nz　/nz请/v画/v出/vf软件测试/gi活动/gi的/ude1流程图/gi？/w　　/nz针对/gi缺陷/gi采取/v怎样/ryv管理/gi措施/gi？/w　/nz　/nz什么/ry是/vshi测试/gi评估/gi？/w测试/gi评估/gi的/ude1范围/n是/vshi什么/ry？/w　　/nz如果/c能够/v执行/v完美/a的/ude1黑盒测试/gi，/w还/d需要/v进行/vn白盒测试/gi吗/y？/w为什么/ryv？/w　/nz　/nz测试/gi结束/v的/ude1标准/gi是/vshi什么/ry？/w　/nz　/nz软件/gi验收/vn测试/gi除了/palpha/nz,/nzbeta/nz测试/gi以外/f,/nz还有/v哪/ry一种/nz?/nz　　/nz做/v测试/gi多久/ryt了/ule？/w　　/nz以前/f做/v过/uguo哪些项目/nz？/w　　/nz你们/rr以前/f测试/gi的/ude1流程/gi是/vshi怎样/ryv的/ude1？/w　/nz　答/nz：/w测试计划/gi－/w测试用例/gi设计/gi－/w测试/gi执行/v－/w测试/gi分析报告/nz　　/nz用/p过/uguo哪些/ry测试工具/nz？/w　　/nz为什么/ryv选择/gi测试/gi这行/r？/w　/nz　答/nz：/w它/rr是/vshi一个/mq新兴/gi的/ude1行业/gi，/w有/vyou发展潜力/n，/w而且/c很/d锻炼/vn人/n，/w需要/v掌握/v更多/ad的/ude1技能/gi，/w比做/v开发/gi要/v更/d难/a　　/nz为什么/ryv得/ude3他们/rr公司/nis雇用/v？/w　　/nz如果/c我/rr雇用/v你/rr，/w你/rr能/v给/p部门/gi带来/v什么/ry贡献/n？/w　　/nz如何/ryv从/p工作/gi中/f看出/v你/rr是/vshi个/q自动/d自觉/a的/ude1人/n　　/nz你/rr的/ude1工作/gi通常/d能/v在/p时限/n内/f完成/v吗/y./nz（/w我/rr想问/nz一下/m就是/v她/rr问/v这个/rz问题/gi的/ude1动机/gi是/vshi什么/ry）/w　　/nz通常/d你/rr对于/p别人/rr批评/vn你/rr会/v有/vyou什么样/ryv的/ude1反应/vn　　/nz如果/c明知/v这样/rzv做/v不/d对/p，/w你/rr还/d会/v依/v主管/gi的/ude1指/v过去/vf做/v吗/y　/nz　/nz如果/c你/rr接到/v一个/mq客户/n抱怨/v的/ude1电话/gi，/w你/rr确知/nz无法/v解决/v他/rr的/ude1问题/gi，/w你/rr会/v怎么/ryv处理/vn　　/nz你/rr觉得/v什么样/ryv的/ude1人/n最难/a相处/vi　　/nz为什么/ryv得/ude3他们/rr公司/nis雇用/v？/w　/nz　/nz　　/nz帮助/v公司/nis提高/v软件质量/gi和/cc测试/gi部门/gi的/ude1技术水平/nz　　/nz如果/c我/rr雇用/v你/rr，/w你/rr能/v给/p部门/gi带来/v什么/ry贡献/n？/w　/nz　/nz　　/nz分享/gi我/rr的/ude1测试/gi经验/gi和/cc测试/gi技能/gi，/w提高/v测试/gi部门/gi技术水平/nz　　/nz如何/ryv从/p工作/gi中/f看出/v你/rr是/vshi个/q自动/d自觉/a的/ude1人/n　/nz　　/nz自动/d自觉/a范围/n太/d广/a　/nz /x1./nz工作/gi成果/gi　/nz2./nz /x工作/gi质量/gi　　/nz你/rr的/ude1工作/gi通常/d能/v在/p时限/n内/f完成/v吗/y./nz（/w我/rr想问/nz一下/m就是/v她/rr问/v这个/rz问题/gi的/ude1动机/gi是/vshi什么/ry）/w　　/nz　　/nz在/p有/vyou足够/v的/ude1资源/gi和/cc合理/a的/ude1工作量/n的/ude1情况下/nz，/w完全/ad可以/v按时/d完成/v，/w并能/v比/p一般/ad人/n做/v的/ude1更好/d　　/nz通常/d你/rr对于/p别人/rr批评/vn你/rr会/v有/vyou什么样/ryv的/ude1反应/vn　　/nz　　/nz有错/a即/v改/v，/w无/v措勉/nz之/uzhi　/nz　/nz如果/c明知/v这样/rzv做/v不/d对/p，/w你/rr还/d会/v依/v主管/gi的/ude1指/v过去/vf做/v吗/y　/nz　/nz　　/nz在/p公司/nis内部/f下级/n是否/v有/vyou申诉/vn渠道/gi？/w　　/nz如果/c你/rr接到/v一个/mq客户/n抱怨/v的/ude1电话/gi，/w你/rr确知/nz无法/v解决/v他/rr的/ude1问题/gi，/w你/rr会/v怎么/ryv处理/vn　　/nz　　/nz为什么/ryv抱怨/v？/w是/vshi怎么样/ryv的/ude1问题/gi？/w　/nz　/nz　　/nz如果/c是/vshi客服/nz问题/gi，/w提交/gi客服/nz部门/gi解决/v　　/nz　　/nz如果/c是/vshi质量/gi问题/gi，/w分析/gi原因/n，/w下/f一/nz版本/n改进/gi　　/nz你/rr觉得/v什么样/ryv的/ude1人/n最难/a相处/vi　　/nz　　/nz自/p以为是/nz的/ude1人/n　　/nz什么/ry叫/vi单元测试/gi？/w　/nz　/nz　/nz　/nz请/v就/d软件/gi测试人员/n应该/v具备/v什么样/ryv的/ude1基本素质/nz说说/v你/rr的/ude1看法/n。/w　　/nz请/v就/d如何/ryv在/p开发/gi中/f进行/vn软件质量/gi控制/vn说说/v你/rr的/ude1看法/n　　/nz /x简述/v软件测试/gi的/ude1意义/n，/w以及/cc软件测试/gi的/ude1分类/gi1/nz、/w功能测试/gi，/w性能测试/gi，/w界面/gi测试/gi，/w安全/gi测试/gi（/w可以/v简单/a点/gi，/w比如/v只/d涉及/v到/vcookies/nz里/f的/ude1内容/gi）/w，/w压力/n测试/gi（/w商业/n性质/n的/ude1网站/gi）/w /x等等/udeng，/wb/nz//nzs/nz软件/gi也/d要/v根据/p其/rz具体/a功能/gi采用/v不同/a的/ude1测试/gi策略/gi。/w2/nz、/w态度/n、/w责任心/n、/w自信/gi、/w敏锐/a的/ude1观察力/n、/w良好/a的/ude1发散/vn思维/gi3/nz、/w先/d设计/gi后/f开发模式/gi，/w加强/v单元测试/gi，/w加强/v代码/gi走查/nz，/w有一套/r完整/a的/ude1白盒/nz测试方法/nz。/w关键/n是/vshi加强/v开发人员/n的/ude1质量/gi意识/n，/w增进/v程序员/gi向/p工程师/gi水平/n发展/gi。/w4/nz、/w意义/n嘛/y，/w就/d自己/rr想/v吧/y。/w软件测试/gi的/ude1分类/gi，/w这个/rz很/d多/a人/n都/d按/p各种/rz方法/gi去/vf分/qt。/w无/v明确/a答案/gi给/p你/rr。/w对/p测试/gi的/ude1理解/gi―/w―/w基本/a的/ude1测试/gi知识/gi，/w对/p测试/gi是否/v认可/vn？/w /x75。/nz /x3/nz、/w谈一谈/nr过去/vf自己/rr的/ude1工作/gi―/w―/w了解/v经历/gi、/w提供/v进一步/d提问/gi的/ude1素材/n，/w表达能力/n测试/gi技能/gi测试/gi设计/gi的/ude1方法/gi并/cc举例说明/nz―/w―/w测试技术/gi的/ude1使用/gi测试工具/nz―/w―/w熟悉/v程度/n，/w能否/v与/cc当前工作/l匹配/gi？/w如何/ryv做/v计划/gi？/w如何/ryv跟踪/vn计划/gi？/w―/w―/w日常/b工作/gi能力/gi如果/c开发人员/n提供/v的/ude1版本/n不/d满足/v测试/gi的/ude1条件/n，/w如何/ryv做/v？/w―/w―/w与/cc开发人员/n协作/gi的/ude1能力/gi熟悉/vunix/gi系统/gi、/woracle数据库/gi吗/y？/w―/w―/w是否/v具备/v系统/gi知识/gi做/v过/uguo开发/gi吗/y？/w写/v过/uguo哪些/ry代码/gi？/w―/w―/w开发/gi技能/gi阅读/gi英语/nz文章/gi，/w给出/v理解/gi说明/v？/w―/w―/w部分/n英语/nz能力/gi文档/gi的/ude1意义/n―/w―/w是否/v善于/v思考/gi？/w（/w最简单/nz的/ude1概念/gi，/w不同/a层次/n的/ude1理解/gi）/w假如/c进入/v我们/rr公司/nis，/w对/p我们/rr哪些方面/nz会/v有/vyou帮助/v？/w―/w―/w讲讲/v自己/rr的/ude1特长/n随便/ad找/v一件/nz物品/gi，/w让/v其/rz测试/gi―/w―/w测试/gi的/ude1实际操作/n能力/gi软件测试/gi的/ude1方法/gi有/vyou？/w软件测试/gi的/ude1过程/gi？/w有/vyou一个/mq新的/a软件/gi，/w假如/c你/rr是/vshi测试/gi工程师/gi，/w该/rz如何/ryv做/v？/w软件测试/gi分/qt哪/ry两/nz种/q方法/gi？/w分别/d适合/v什么/ry情况/n？/w2。/nz一套/nz完整/a的/ude1测试/gi应该/v由/p哪些/ry阶段/gi组成/gi？/w分别/d阐述/v一下/m各个/rz阶段/gi。/w3。/nz软件测试/gi的/ude1类型/gi有/vyou那些/rz？/w分别/d比较/gi这些/rz不同/a的/ude1测试/gi类型/gi的/ude1区别/gi与/cc联系/gi。/w4。/nz测试用例/gi通常/d包括/v那些/rz内容/gi？/w着重/vd阐述/v编制/vn测试用例/gi的/ude1具体做法/nz5。/nz在/p分别/d测试/giwinform/nz的/ude1c/nz//nzs/nz结构/gi与/cc测试/giweb/gi结构/gi的/ude1软件/gi是/vshi，/w应该/v采取/v什么样/ryv的/ude1方法/gi分别/d测试/gi？/w他们/rr存在/v什么样/ryv的/ude1区别/gi与/cc联系/gi？/w6。/nz在/p测试/giwinform/nz的/ude1c/nz//nzs/nz结构/gi软件/gi时/qt，/w发现/v这个/rz软件/gi的/ude1运行/gi速度/n很慢/d，/w您/rr会/v认为/v是/vshi什么/ry原因/n？/w您/rr会/v采取/v哪些/ry方法/gi去/vf检查/gi这个/rz原因/n？/w7。/nz描述/gi使用/gibugzilla/nz缺陷/gi管理工具/nz对/p软件缺陷/gi（/wbug/gi）/w跟踪/vn的/ude1管理/gi的/ude1流程/gi你/rr在/p五年/nz内/f的/ude1个人/n目标/gi和/cc职业/gi目标/gi分别/d是/vshi什么/ry？/w　　/nz分析/gi这个/rz问题/gi是/vshi用来/v了解/v你/rr的/ude1计划/gi能力/gi的/ude1，/w通过/p这个/rz问题/gi，/w面试/gi人/n同时/c还/d可以/v知道/v你/rr的/ude1目标/gi是否/v符合/v企业/gi对/p你/rr的/ude1安排/v。/w　　/nz错误/gi回答/v我/rr想/v在/p将来/t的/ude1某个/rz时候/n考虑/v这个/rz问题/gi。/w如今/t企业/gi的/ude1领导者/nnt更换/v频繁/a，/w我/rr认为/v做/v太多/ad的/ude1个人/n计划/gi是/vshi荒谬/a可笑/a的/ude1，/w不是/c吗/y？/w　/nz　/nz评论/gi这种/r回答/v属于/v令人/v反感/an的/ude1一类/b。/w首先/d，/w当/p有人/r想/v了解/v你/rr的/ude1目标/gi时/qt，/w将来/t的/ude1某个/rz时候/n这种/r通俗/a说法/n并不/d奏效/vi。/w其次/c，/w认为/v企业/gi很/d脆弱/gi，/w领导者/nnt更换/v频繁/a，/w这种/r说法/n毫无疑问/dl会/v令人/v反感/an，/w而且/c也/d是/vshi不合理/nz的/ude1。/w最后/f，/w认为/v做/v计划/gi可笑/a，/w看不起/v这个/rz问题/gi，/w而且/c反问/v面试/gi人/n，/w这些/rz都/d注定/v了/ule这样/rzv的/ude1求职者/n最终/d会/v失败/vi。/w　　/nz正确/a回答/v从现在起/l的/ude1五年/nz之内/f，/w我/rr希望/v能够/v在/p一个/mq很好/ad的/ude1职位/gi上/f待/vi几年/nz，/w而且/c最好/d有/vyou一次/nz晋升/gi，/w然后/c就/d期待/v着/uzhe下一步/nz。/w不管/c是/vshi向上/vi提升/gi，/w还是/c在/p企业/gi内/f横向/n调动/v，/w对/p我/rr个人/n来说/uls，/w我/rr希望/v找到/v一家/n企业/gi―/w―/w一家/n愿意/v做/v相互/d投入/v的/ude1企业/gi―/w―/w待/vi上/f一段时间/nz。/w　　/nz评论/gi这个/rz问题/gi没有/v回答/v得/ude3过分/ad具体/a（/w那样/rzv可能会/nz产生/v漏洞/n）/w，/w而且/c它/rr表明/v你/rr有/vyou雄心/n，/w并且/c思考/gi过/uguo在/p企业/gi中的/v成长/gi方式/n。/w通过/p表达/gi横向/n调动/v和/cc向上/vi提升/gi的/ude1愿望/n，/w表明/v你/rr是/vshi一个/mq有/vyou灵活性/gi的/ude1人/n。/w　/nz问题/gi23/nz　/nz你/rr怎样/ryv做出/v自己/rr的/ude1职业/gi选择/gi？/w　　/nz分析/gi /x面试/gi人/n提出/v这个/rz问题/gi是/vshi为了/p了解/v求职者/n的/ude1动机/gi，/w看看/v他/rr（/w她/rr）/w应聘/vi这份/r工作/gi是否/v有/vyou什么/ry历史渊源/nz，/w是否/v有/vyou职业规划/nz，/w是不是/v仅仅/d在/p漫无/nz目的地/n申请/v很/d多/a工作/gi。/w　　/nz错误/gi回答/v /x我/rr一直/d都/d想/v在/p企业界/n工作/gi。/w自/p孩提时代/n起/vf，/w我/rr就/d梦想/gi自己/rr至少/d也/d要/v成为/v大/a企业/gi的/ude1副总裁/nnt。/w　　/nz评论/gi /x除了/p难以/d令人/v相信/v之外/f，/w这种/r回答/v还/d存在/v一个/mq问题/gi：/w它/rr表明/v求职者/n会/v对/p副总裁/nnt以下/f的/ude1职位/gi不感兴趣/l。/w　　/nz正确/a回答/v /x在/p上/f大学/gi四年级/nz前/f的/ude1那个/rz夏天/ns，/w我/rr决定/v集中精力/nz在/p某/rz一/nz领域/gi谋求/v发展/gi。/w尽管/c我/rr是/vshi学/v商业/n的/ude1，/w但是/c我/rr不/d知道/v自己/rr最终/d会/v从事/vi哪/ry一行业/nz的/ude1工作/gi。/w我/rr花/n了/ule一定/b的/ude1时间/gi考虑/v自己/rr的/ude1目标/gi，/w想/v清楚/a了/ule自己/rr擅长/v做/v的/ude1事情/n以及/cc想/v从/p工作/gi中/f得到/v的/ude1东西/n，/w最后/f我/rr得出/v了/ule一个/mq坚定/a的/ude1结论/gi，/w那/rzv就是/v这个/rz行业/gi是/vshi最/d适合/v我/rr的/ude1。/w　　/nz评论/gi /x这种/r回答/v表明/v，/w求职者/n认真/ad地/ude2做/v过/uguo一/nz些/q计划/gi，/w缩小/v了/ule自己/rr的/ude1关注点/n，/w而且/c也/d认准/v了/ule前进/vi的/ude1方向/gi。/w这种/r回答/v还/d表明/v，/w求职者/n理解/gi个人/n职业规划/nz的/ude1重要性/n，/w并且/c有/vyou能力/gi做出/v认真/ad的/ude1个人/n决策/gi。/w