#手机/gi淘宝/n的/ude1高质量/nz持续/vd交付/v探索/v
转/v自/p：/w前言/gi随着/p移动互联网/gi的/ude1迅速/ad普及/v，/w手机/gi淘宝/n业务/gi在/p迅速/ad的/ude1成长/gi，/w目前/t已经/d发展/gi成为/v拥有/v40/nz多/a个/qbundle/nz（/w业务/gi模块/gi）/w的/ude1超大/bapp/gi产品/gi，/w在/p这/rzv后面/f有着/v数/n百名/nz的/ude1研发/gi人员/gi的/ude1努力工作/v。/w业务/gi的/ude1成长/gi和/cc人员/gi的/ude1倍增/vi给/p技术/gi架构/gi、/w团队/gi合作/vn、/w产品/gi的/ude1交付/v都/d带来/v了/ule巨大/a的/ude1挑战/gi。/w本文/r将/d会/v讲述/v手机/gi淘宝/n研发/gi团队/gi在/p两年/nz的/ude1时间/gi为了/p达到/v高质量/nz持续/vd交付/v的/ude1目标/gi而/cc做出/v的/ude1种种/q努力/gi。/w希望/v借此机会/vl向/p大家/rr分享/gi手淘/nz的/ude1经验/gi与/cc教训/n，/w与/cc大家/rr共同/d探讨/v高质量/nz持续/vd交付/v之/uzhi道/qv。/w第一/mq阶段/gi：/w单/b工程单/nz构建/gi产物/n、/w初级/b流程/gi、/w初级/b质量/gi保障/vn回到/v两年/nz多/a以前/f，/w手淘/nz还是/c一个/mq年轻/a的/ude1产品/gi，/w业务/gi不/d多/a、/w研发/gi人数/n不/d多/a、/w代码/gi数量/n也/d不/d多/a、/w测试/gi的/ude1手段/n也/d很/d单一/gi。/w这个/rz时期/n的/ude1特点/n就是/v所有/b代码/gi都/d在/p一个/mq工程/n里面/f，/w测试/gi、/w发布/gi都/d是/vshi围绕/v这/rzv一个/mq工程/n的/ude1代码/gi分支/n所/usuo编译/gi出来/vf的/ude1包/v来/vf进行/vn的/ude1。/w工程/n架构/gi这个/rz时候/n的/ude1手/n淘/v基本上/d就是/v一个/mq大/a工程/n，/w依赖/v以/p源码/gi依赖/v为主/vi，/w所有/b的/ude1开发人员/n共享/gi这/rzv一个/mq工程/n，/w在/p同一个/b工程/n上/f开发/gi。/w存在的问题/gi代码/gi混/v在/p一起/s，/w不/d便于管理/nz。/w一个/mq模块/gi的/ude1代码/gi有/vyou问题/gi就/d会/v影响/gi整个/b项目/gi的/ude1开发人员/n。/w不能/v支持/v业务/gi的/ude1快速增长/n。/w研发/gi流程/gi工程/n的/ude1架构/gi决定/v了/ule研发/gi交付/v的/ude1流程/gi，/w所以/c当时/t的/ude1流程/gi也/d比较简单/l，/w开发人员/n在/p本地/gi开发/gi完成/v以后/f直接/ad提交/gi代码/gi，/w然后/c编译/gi服务器进行/n打包/vi，/w出/vf包/v以后/f测试人员/n进行/vn测试/gi，/w如此/rzv反复/d，/w最/d根据/p代码/gi库/n的/ude1最后/f一次/nz提交/gi进行/vn发布/gi。/w如/v下图/n所示/nz：/w相关/vn厂商/gi内容/gi相关/vn赞助商/nndqcon/nz全球/gi软件开发/nz大会/gi，/w2015/nz年/qt10/nz月/n15/nz-/nz17/nz日/b，/w上海光大会展中心/nt国际大酒店/ns。/w。/w存在的问题/gi提测/nz和/cc集成/vn阶段/gi混/v在/p一起/s，/w提测/nz代码/gi质量/gi较差/d，/w开发人员/n不断/d的/ude1提交/gi修改/gibug/gi从而/c导致/gi不断/d的/ude1集成/vn包/v。/w任何/rz一个/mq编译/gi不过/c的/ude1问题/gi会/v造成/v整个/b团队/gi在/p等待/gi。/w回滚/gi只能/v做到/v代码/gi级别/n的/ude1回滚/gi。/w发布/gi前/f回归/gi如/v发现/v问题/gi只能/v等待/gi开发人员/n修改/gibug/gi，/w然后/c重新/d出包/nz，/w再/d进行/vn一轮/nz回归/gi，/w如此/rzv反复/d工作量/n很大/d。/w如/v遇到/v阻塞/vn问题/gi，/w比如/v登录/gi有/vyou问题/gi，/w那么/c所有/b的/ude1人员/gi都/d要/v等待/gi登录/gi的/ude1开发人员/n修改/gi完/vibug/gi才能/n继续/v工作/gi，/w造成了/v大量/m的/ude1等待时间/gi。/w发布/gi过程/gi只有/c正式/ad发布/gi这/rzv一个/mq步骤/gi，/w很容易/nz造成/v故障/gi遗漏/v到/v线/n上/f。/w质量保证/gi手段/n这个/rz时期/n的/ude1手/n淘/v测试/gi主要/b以/p手工/gi测试/gi为主/vi，/w附加/vn一/nz些/qmonkey/nz测试/gi和/cc少量/mq的/ude1自动化/gi脚本/gi。/w存在的问题/gi纯手工/n的/ude1测试/gi造成了/v测试人员/n大量/m的/ude1在/p做/v重复/gi工作/gi的/ude1现象/n。/w测试/gi经验/gi没有/v积累/gi。/w非/b功能性/n的/ude1问题/gi缺乏/v测试/gi手段/n。/w出/vf集成/vn包/v的/ude1节奏/n不/d可控/nz，/w导致/gi测试人员/n频繁/a换包/nz测试/gi，/w造成/v大量/m的/ude1重复/gi工作/gi。/w对于/p不同/a的/ude1环境/n需要/v打出/v多种不同/l配置/gi的/ude1测试/gi包/v（/w如/v：/w测试/gi包/v、/w预发/nz包/v、/w线/n上/f包/v等/udeng）/w，/w测试人员/n需要/v安装/gi多/a个/q包/v进行/vn反复/d的/ude1回归/gi。/w第二阶段/nz：/w多/a工程/n单一/gi构建/gi产物/n、/w平台/gi建立/gi、/w初级/b持续集成/gi、/w发布/gi流程/gi建立/gi随着/p移动互联网/gi的/ude1迅猛发展/nz，/w手机/gi淘宝/n的/ude1业务/gi随之/d倍增/vi，/w研发/gi人员/gi也/d倍增/vi。/w这个/rz时候/n大小/n业务/gi模块/gi已经/d超过/v20/nz个/q，/w研发/gi人员/gi超过/v了/ule百人/nz。/w这个/rz时候/n原有/v的/ude1工程/n架构/gi已经/d完全/ad不能/v满足/v业务/gi的/ude1需要/v了/ule，/w质量/gi保障/vn也/d面临/v着/uzhe很大/d的/ude1挑战/gi，/w也/d就是/v在/p这个/rz时期/n我们/rr建立/gi了/ule一系列/b的/ude1平台/gi：/w打包/vi平台/gi、/w发布/gi平台/gi、/w测试/gi平台/gi、/w验收/vn平台/gi从而/c使用/gi自动化/gi的/ude1方式/n提升/gi了/ule些/q效率/gi。/w并且/c建立/gi了/ule灰度/gi发布/gi的/ude1流程/gi，/w提升/gi了/ule最终/d发布/gi的/ude1质量/gi。/w不过/c这些/rz努力/gi也/d没有/v阻止/v质量/gi和/cc交付/v问题/gi的/ude1大规模/b爆发/v…/w…/w工程/n架构/gi工程/n架构/gi是/vshi整个/b研发/gi的/ude1基础/gi，/w所有/b的/ude1事情/n还是/c要/v从/p工程/n架构/gi讲起/v。/w为了/p能够/v接入/vn越来越/d多/a的/ude1业务/gi，/w手机/gi淘宝/n的/ude1架构/gi从/p之前/f的/ude1单一/gi工程/n的/ude1方式/n演进/vn为/p模块化/gi开发/gi的/ude1方式/n，/w每/rz一个/mq模块/gi被称作/nbundle/nz。/w同时/c引入/v了/ule仓库/gi的/ude1概念/gi，/w每个/r模块/gi将/d源码/gi打包/vi之后/fdeploy/nz进入/v仓库/gi，/w然后/c由/pbuilder/gi工程/n进行/vn依赖/v管理/gi并/cc编译/gi打包/vi。/w存在的问题/gi这次/r改造/vn解决/v了/ule之前/f多/a业务/gi并行/vn开发/gi的/ude1问题/gi，/w最终/d打包/vi的/ude1时候/n也/d不会/v直接/ad依赖/v各个/rzbundle/nz的/ude1代码库/nz，/w完成/v了/ule部分/n的/ude1解耦/gi。/w但是/c还是/c存在/v很/d多/a的/ude1问题/gi：/w在/p同一个/b版本/n中/f所有/b的/ude1研发/gi人员/gi还是/c用/p的/ude1同一/b套/q依赖/v配置/gi，/w任何/rz模块/gi的/ude1改动/vn还是/c会/v影响/gi其它/rz模块/gi，/w尤其/d是/vshi核心业务/gi和/cc框架/gi层/gisdk/nz的/ude1提交/gi有/vyou问题/gi的话/udh会/v影响/gi整个/b团队/gi的/ude1进度/gi。/w仓库/gi的/ude1版本/n管理混乱/l，/w开发/gi和/cc集成/vn共用/b同一/b套/q仓库/gi，/w开发/gi可以/v随意/ad部署/gi，/w造成/v集成/vn包/v无法控制/nz。/w由于/p各个/rzbundle/nz是/vshi将/d源码/gi部署/gi到/v仓库/gi的/ude1，/w所以/c构建/gi还是/c以/p源码/gi为基础/nz的/ude1，/w在/p代码/gi越来越/d多/a的/ude1情况下/nz，/w造成了/v整包/nz编译/gi速度/n缓慢/a。/w尤其/d是/vshi在/p等待/gi很长/d时间/gi以后/f编译/gi失败/vi，/w这种/r感觉/gi是/vshi让/v人/n抓狂/nz的/ude1。/w这个/rz问题/gi已经/d极大/a地/ude2影响/gi到/v了/ule研发/gi的/ude1效率/gi。/w各个/rzbundle/nz的/ude1代码/gi最终/d还是/c要/v编译/gi到/v一个/mq产物/n当中/f，/w各个/rzbundle/nz还是/c会/v相互影响/l，/w编译/gi失败/vi后/f定位问题/n成为/v了/ule一大/n难题/n。/w这里/rzs讲/v一/nz下/f当时/t几/d个/q典型/n场景/gi：/w开发人员/n只是/d添加/gi了/ule一个/mq方法/gi，/w然后/c等待/gi了/ule10/nz分钟/qt进行/vn编译/gi，/w结果/n编译/gi失败/vi，/w然后/c排查/v一/nz下午/t问题/gi，/w结果/n是/vshi框架/gisdk/nz更新/gi导致/gi的/ude1。/w一大/n早/a几/d十/nz个/q测试人员/n在/p等待/gi回归/gi验证/v发布包/nz，/w结果/n发布/gi包/v不是/c编译/gi失败/vi就是/v核心/n功能/gi不/d可用/v最后/f到/v了/ule凌晨/t2/nz点钟/qt，/w发布包/nz终于/d出来/vf了/ule。/w这样/rzv的/ude1场景/gi太美/v，/w让/v人/n不敢/d去/vf回忆/v。/w研发/gi流程/gi由于/p架构/gi改造/vn，/w提交/gi集成/vn的/ude1角色/gi从/p开发人员/n变成/v了/ule业务/gi模块/gi的/ude1研发/gi团队/gi，/w提交/gi集成/vn的/ude1方式/n从/p提交/gi代码/gi变成/v了/uledeploy/nz到/v仓库/gi，/w但是/c由于/p工程/n架构/gi的/ude1问题/gi本质/n上/f没有/v完成/v各个/rzbundle/nz的/ude1解耦/gi，/w所以/c整个/b团队/gi还是/c在/p一条线/nz上/f进行/vn开发/gi。/w不过/c这/rzv各/rz阶段/gi加入/v灰度/gi发布/gi的/ude1概念/gi，/w灰度/gi制度/gi的/ude1建立/gi使/v很/d多/a问题/gi提前/vd暴露/v，/w从而/c提高/v了/ule正式/ad发布/gi版本/n的/ude1质量/gi。/w另外/c这个/rz阶段/gi建立/gi起/vf了/ule代码/gi审核/gi、/w打包/vi平台/gi、/w发布/gi平台/gi、/w测试/gi平台/gi、/w舆情/n监控/gi平台/gi等/udeng，/w自动化/gi了/ule很/d多/a事情/n，/w在/p一定/b程度/n上/f提升/gi了/ule工作效率/nz，/w大致/d使用/gi流程/gi如下/vi：/w存在的问题/gi集成/vn的/ude1虽有/c雏形/n但/c依然/d不/d明显/a，/w提测/nz和/cc集成/vn的/ude1界限/n依然/d模糊/gi，/w很/d多/abundle/nz还是/c开发/gi完/vi以后/f直接/addeploy/nz到/v主/ag项目/gi中/f然后/c打出/v集成包/nz进行/vn测试/gi。/w集成/vn的/ude1标准/gi虽然/c提出/v，/w但/c不能/v很好/ad的/ude1运作/gi，/w导致/gi集成/vn质量/gi很差/d。/w核心/n功能/gi阻塞/vn的/ude1问题/gi越来越/d突出/a，/w长时间/nz出/vf不了/v可用/v的/ude1包成/v了/ule一个/mq大/a问题/gi。/w回滚/gi操作/gi依然/d困难/an。/w项目/gi的/ude1节奏/n依然/d混乱/a，/w导致/gi项目/gi延期/vi和/cc研发/gi人员/gi效率/gi下降/vi。/w质量保证/gi手段/n这个/rz时期/n的/ude1手/n淘/v测试/gi团队/gi建立/gi了/ule内存/gi、/w性能/gi、/w流量/gi电量/n等/udeng专项/b测试/gi机制/gi，/w编写/gi了/ule一/nz些/q半自动化/nz的/ude1测试工具/nz，/w建立/gi了/ule自动化/gi适配/nz平台/gi，/w并/cc组建/v了/ule外包/nz团队/gi以/p提高/v测试/gi覆盖率/n。/w这时候/rzt测试人员/n工作/gi流程/gi如下/vi图/gi：/w存在的问题/gi测试人员/n在/p不断/d的/ude1更新/gi测试/gi包/v和/cc等待/gi出/vf包/v上面/f浪费/gi了/ule大量/m的/ude1时间/gi。/w自动测试/nz和/cc专项/b测试/gi只能/v在/p灰度/gi阶段/gi版本/n质量/gi基本/a稳定/an的/ude1时候/n才能/n介入/v，/w这/rzv不但/c压缩/gi了/ule这些/rz测试/gi的/ude1时间/gi，/w而且/c由于/p是/vshi在/p项目/gi后期/f发现/v的/ude1问题/gi所以/c会/v使/v问题/gi修复/gi成本/n增加/v。/w非/b功能测试/gi只有/c专项/b测试人员/n来/vf做/v，/w此类/r测试/gi的/ude1覆盖率/n还/d不/d理想/n。/w测试/gi经验/gi的/ude1积累/gi手段/n主要/b是/vshi自动化测试/gi平台/gi，/w但是/c这/rzv对于/p手/n淘/v研发/gi团队/gi来说/uls还是/c远远/d不够/a的/ude1。/w外包/nz团队/gi的/ude1组建/v解决/v了/ule人力/gi紧张/a的/ude1问题/gi，/w但是/c外包/nz人员/gi的/ude1工作/gi效果/gi难以/d评估/gi。/w对于/p不同/a的/ude1环境/n需要/v打出/v多种不同/l配置/gi的/ude1测试/gi包/v（/w如/v：/w测试/gi包/v、/w预发/nz包/v、/w线/n上/f包/v等/udeng）/w，/w测试人员/n需要/v安装/gi多/a个/q包/v进行/vn反复/d的/ude1回归/gi测试/gi。/w当前/t阶段/gi：/w多/a工程/n多/a构建/gi产物/n、/w流程/gi逐渐/d完善/v、/w多/a种/q质量/gi保障/vn手段/n建立/gi基于/p前/f两/nz个/q阶段/gi的/ude1经验/gi和/cc教训/n，/w手机/gi淘宝/n研发/gi团队/gi在/p工程/n架构/gi、/w研发/gi流程/gi、/w质量/gi保障/vn等/udeng多方面/n不断/d的/ude1进行/vn完善/v，/w从而/c建立/gi起来/vf现在/t的/ude1体系/gi。/w工程/n架构/gi现在/t手机/gi淘宝/n的/ude1工程/n架构/gi进行/vn了/ule进一步/d的/ude1改造/vn，/w形成/v了/ule一套/nz插件/gi化/v的/ude1体系/gi，/w而/cc分/qtbundle/nz编译/gi的/ude1引入/v大大缩短/i了/ule构建/gi时间/gi，/w从而/c使/v构建/gi速度/n不再/d成为/v瓶颈/gi。/w另外/c分/qtbundle/nz编译/gi可以/v提早/d发现/v编译/gi问题/gi，/w从而/c不会/v导致/gi整包/nz编译/gi时/qt编译/gi失败/vi。/w另外/c引入/v了/ule依赖/v配置/gi项/q的/ude1概念/gi，/w目前/t项目/gi完整包/i的/ude1构建/gi完全/ad取决于/v依赖/v配置/gi，/w在/p单/bbundle/nz开发/gi、/w提测/nz、/w项目/gi集成/vn、/w发布/gi等/udeng各个/rz阶段/gi的/ude1依赖/v配置/gi完全/ad独立/a，/w各个/rzbundle/nz的/ude1开发/gi测试人员/n可以/v在/p完全/ad独立/a的/ude1环境/n中/f进行/vn开发/gi测试/gi，/w不会/v受到/v干扰/gi。/w研发/gi流程/gi有/vyou了/ule工程/n架构/gi的/ude1有力/a支持/v，/w研发/gi流程/gi慢慢/d进入/v了/ule正轨/n。/w首先/d明确/a了/ulebundle/nz开发/gi、/w提测/nz、/w集成/vn、/w灰度/gi、/w正式/ad发布/gi等/udeng各个/rz生命周期/nz的/ude1边界/n，/w真正/d做到/v各个/rz阶段/gi的/ude1相互/d独立/a。/w其次/c在/p各个/rz生命周期/nz中/f加入/v了/ule规范性/n的/ude1流程/gi，/w并/cc由/p平台/gi保证/v了/ule流程/gi的/ude1真正/d实施/gi。/w最后/f质量保证/gi手段/n和/cc效率/gi也/d有/vyou了/ule很大/d提升/gi。/w基于/p以上/f几/d点/gi手/n淘/v的/ude1整个/b研发/gi做到/v了/ule类/gi于/p火车/n发车/vn的/ude1发布/gi过程/gi：/w各个/rzbundle/nz在/p有着/v自己/rr的/ude1需求/gi、/w开发/gi、/w测试计划/gi，/w相互/d独立/a。/w手机/gi淘宝/n主/ag项目/gi制定/gi发布/gi计划/gi，/w确定/v集成/vn窗口/s和/cc发布/gi时间/gi点/gi。/w在/p集成/vn窗口/s时间/gibundle/nz可以/v自主/vd提交/gi集成/vn。/w集成/vn提交/gi需要/v走/v流程/gi，/w包括/v填写/vchecklist/nz、/w代码/gi检查/gi、/wbug/gi统计/gi、/w提前/vd编译/gi预集/nz成包/nz进行/vn测试/gi等/udeng。/w这/rzv就/d避免/v了/ule明显/a的/ude1集成/vn问题/gi遗漏/v到/v集成/vn环境/n中/f。/w集成/vn期间/f的/ude1集成/vn包/v每天/r出/vf一个/mq或者/c两/nz个/q，/w避免/v了/ule测试人员/n不断/d拿/v包/v回归/gi的/ude1情况/n。/w集成/vn窗口/s对于/p时间/gi要求/n严/a，/w赶不上/d计划/gi或者/c质量/gi不/d达标/vi的/ude1bundle/nz不予/v集成/vn。/w这/rzv就是/v火车/n不等/vi人/n的/ude1原则/gi。/w以上/f机制/gi保证/v了/ule手机/gi淘宝/n每天/r都/d有/vyou一个/mq候选包/nz，/w可以/v随时/d进行/vn灰度/gi发布/gi，/w并且/c灰度/gi发布/gi单独/d拉取/nz一个/mq依赖/v配置/gi分支/n，/w不/d影响/gi集成/vn窗口/s。/wbundle/nz的/ude1独立/a，/w依赖/v配置/gi的/ude1独立/a保证/v了/ule手机/gi淘宝/n可以/v并行/vn多/a个/q发布/gi计划/gi，/w各个/rzbundle/nz可以/v按照/p需求/gi自主/vd决定/v搭乘/v哪个/ry发布/gi计划/gi进行/vn发布/gi。/w目前/t手/n淘/v项目/gi节奏/n为/p两/nz个/q星期/n发布/gi一个/mq版本/n。/w如果/c需要/v还/d可以/v更快/d的/ude1进行/vn发版/nz。/w最/d短/a只/d需要/v1/nz个/q小时/n就/d可以/v发/v一个/mq新版/b。/w目前/t的/ude1平台/gi建设/gi工作/gi也/d进入/v了/ule快车道/n，/w所有/b的/ude1项目/gi生命周期/nz都/d有/vyou相应/vi的/ude1平台/gi工具/gi支持/v，/w如下/vi图/gi：/w质量保证/gi手段/n有/vyou了/ule高效/b稳定/an的/ude1流程/gi，/w剩下/v的/ude1事情/n就是/v如何/ryv保证/v产品/gi在/p快节奏/nz的/ude1持续/vd交付/v下/f的/ude1保持/v很高/d的/ude1质量/gi。/w质量/gi保障/vn上面/f手机/gi淘宝/n研发/gi团队/gi做/v了/ule几/d方面/n事情/n：/w1./nz /x流程/gi方面/n1/nz）/w创建/gi了/ule提测/nz单/b、/w集成单/nz、/w发布/gi单/b等/udeng流程/gi。/w建立/gi了/ule标准/gi，/w并/cc依托/v平台/gi自动/d检查/gi，/w提高/v了/ule交付/v的/ude1质量/gi。/w2/nz）/w建立/gi持续集成/gi体系/gi，/w不但/c能/v提早/d发现/v更多/ad的/ude1问题/gi，/w而且/c提升/gi了/ule测试人员/n拿到/v的/ude1包/v的/ude1质量/gi。/w3/nz）/w建立/gi线/n上线/n下/f监控/gi分析/gi体系/gi。/w2./nz /x包/v稳定性/n方面/n：/w1/nz）/wbundle/nz阶段/gi根据/p项目/gi进度/gi自己/rr控制/vn提测/nz包/v的/ude1频率/n，/w集成/vn阶段/gi每日/r验证/vdailybuild/nz即可/v，/w所以/c解决/v了/ule之前/f测试/gi同学/n不断/d安装/gi新版本/nz的/ude1包/v的/ude1问题/gi。/w2/nz）/w研发/gi阶段/gi的/ude1包/v内部/f支持/v环境/n切换/vn，/w这/rzv实现/gi了/ule只/d构建/gi一次/nz，/w环境/n根据/p配置/gi切换/vn的/ude1梦想/gi。/w测试/gi时/qt手机/gi上/f只/d需要/v安装/gi一次包/nz即可/v完成/v多/a种/q环境/n下/f的/ude1测试/gi。/w3./nz /x自动化测试/gi与/cc测试工具/nz方面/n1/nz）/w引入/v多/a种/q静态/gi扫描/gi引擎/n，/w并/cc定制/n多种/m规则/gi：/w适配/nz规则/gi、/wcrash/nz规则/gi、/w框架/gi约定/v规则/gi、/w安全/gi规则/gi等/udeng，/w并且/c不断/d地/ude2将/d测试阶段/n、/w线/n上/f问题/gi等/udeng总结/gi抽象/gi成/v新的/a扫描/gi规则/gi补充/vn进入/v扫描/gi引擎/n。/w2/nz）/w在/p测试阶段/n包种/nz插入/gi相应/vi的/ude1测试/gisdk/nz，/w并且/c这种/rsdk/nz不会/v侵入/v应用/gi代码/gi，/w所以/c只/d需要/v在/p发布/gi的/ude1时候/n去掉/v测试/gisdk/nz即可/v。/w测试/gisdk/nz可以/v在/p测试人员/n（/w包括/v外包/nz适配/nz测试人员/n）/w正常/a使用/gi过程/gi中/f自动检测/nz并/cc上报/vi问题/gi，/w这样/rzv就/d可以/v在/p同一/b的/ude1平台/gi上/f看到/v研发/gi过程/gi中的/v质量/gi情况/n并/cc进行/vn修复/gi。/w3/nz）/w自动化/gi平台/gi方面/n也/d在/p根据/p手/n淘/v测试/gi经验/gi不断/d的/ude1进化/vn，/w在/p整个/b研发/gi过程/gi中/f自动化测试/gi一直/d在/p执行/v，/w不仅/c可以/v提高/v产品/gi稳定性/n，/w也/d可以/v发现/v性能/gi、/w电量/n等/udeng非/b功能/gi问题/gi。/w4/nz）/wmock/nz工具/gi、/w验证/v平台/gi等/udeng辅助/vn测试工具/nz也/d提升/gi了/ule测试人员/n的/ude1效率/gi。/w4./nz /x线/n上线/n下/f监控/gi分析/gi1/nz）/w线下/n质量/gi数据/gi、/w线/n上/f业务/gi问题/gi、/w舆情/n反馈/gi等/udeng信息/gi统一/vn汇集/v到/v平台/gi上/f进行/vn统一/vn的/ude1分析/gi告警/gi，/w不仅/c能/v快速/d的/ude1发现/v问题/gi，/w而且/c能/v通过/p数据分析/gi能够/v帮助/v快速/d定位/gi和/cc解决问题/v。/w2/nz）/w根据/p平台/gi中的/v数据/gi，/w可以/v用/p经验/gi推动/v流程/gi的/ude1优化/gi、/w补充/vn测试用例/gi、/w添加/gi扫描/gi规则/gi、/w增加/v自动化/gi场景/gi、/w催生/vi新的/a测试工具/nz等/udeng，/w这样/rzv可以/v使/v经验/gi形成/v闭环/n，/w使/v质量/gi保障/vn工作/gi更加/d高效/b。/w以上/f就是/v手机/gi淘宝/n研发/gi团队/gi在/p建立/gi高质量/nz持续/vd交付/v体系/gi过程/gi中的/v经验/gi分享/gi，/w虽然/c现在/t在/p架构/gi、/w流程/gi，/w质量/gi保障/vn方面/n有/vyou了/ule一/nz些/q积累/gi，/w但是/c在/p移动互联网/gi这个/rz领域/gi还有/v诸如/v稳定性/n、/w电量/n、/w流量/gi、/w性能/gi、/w适配/nz、/w用户/gi体验/v、/w线/n上/f运维/gi、/w故障/gi告警/gi等/udeng难题/n等待/gi我们/rr去/vf解决/v。/w前方/s的/ude1道路/n依然/d坎坷/an，/w我们/rr会/v更加/d努力/gi，/w并/cc不断/d前行/v。/w作者简介/nz杨强/nr（/w花名/n：/w元战/nz）/w阿里巴巴/nt技术/gi专家/gi，/w2012/nz年/qt加入/v阿里巴巴/nt无线/gi事业部/nis，/w目前/t负责/v手机/gi淘宝/n专项/b测试/gi组/n，/w主要/b负责/v无线/gi研发/gi支撑/v平台/gi，/w无线技术/gi运维/gi平台/gi，/w无线/gi专项/b测试工具/nz以及/cc无线/gisdk/nz测试/gi等/udeng方面/n的/ude1工作/gi。/w曾经/d在/p趋势科技/nt、/w华为/gi从事/vi测试/gi工作/gi。/w