#Hadoop/gi作业/gi调度/vn算法/gi
hadoop/gi集群/gi中/f有/vyou三种/nz作业/gi调度/vn算法/gi，/w分别为/vfifo/gi，/w公平/a调度/vn算法/gi和/cc计算/gi能力/gi调度/vn算法先/nz来/vf先/d服务/gi（/wfifo/gi）/wfifo/gi比较简单/l，/whadoop/gi中/f只有/c一个/mq作业/gi队列/gi，/w被/pbei提交/gi的/ude1作业/gi按照/p先后顺序/i在/p作业/gi队列/gi中/f排队/gi，/w新/a来/vf的/ude1作业/gi插入/gi到/v队/n尾/ng。/w一个/mq作业/gi运行/gi完/vi后/f，/w总是/d从/p队/n首/q取下/v一个/mq作业/gi运行/gi。/w这种/r调度/vn策略/gi的/ude1优点/gi是/vshi简单/a、/w易于/vd实现/gi，/w同时/c也/d减轻/v了/ulejobtracker/nz的/ude1负担/n。/w但是/c它/rr的/ude1缺点/gi也/d是/vshi显然/ad的/ude1，/w它/rr对/p所有/b的/ude1作业/gi都/d一视同仁/vl，/w没有/v考虑到/v作业/gi的/ude1紧迫/a程度/n，/w另外/c对/p小/a作业/gi的/ude1运行/gi不利/a。/w公平/a调度/vn策略/gi这种/r策略/gi在/p系统/gi中/f配置/gi了/ule任务/gi槽/ng，/w一个/mq任务/gi槽/ng可以/v运行/gi一个/mqtask/nz任务/gi，/w这些/rz任务/gi就是/v一个/mq大/a的/ude1作业/gi被/pbei切分/v后/f的/ude1小/a作业/gi。/w当/p一个/mq用户/gi提交/gi多/a个/q作业/gi时/qt，/w每个/r作业/gi可以/v分配/gi到/v一定/b的/ude1任务/gi槽/ng以/p执行/vtask/nz任务/gi（/w这里/rzs的/ude1任务/gi槽/ng可以/v理解/gi为/p可以/v运行/gi一个/mqmap/nz任务/gi或/creduce/nz任务/gi）/w。/w如果/c把/pba整个/bhadoop/gi集群/gi作业/gi调度/vn跟/p操作系统/gi的/ude1作业/gi调度/vn相比/vi，/w第一/mq种/qfifo/gi就/d相当于/v操作系统/gi中/f早期/f的/ude1单道批/nz处理/vn系统/gi，/w系统/gi中/f每个/r时刻/n只有/c一道/d作业/gi在/p运行/gi，/w而/cc公平/a调度/vn相当于/v多道批/nz处理/vn系统/gi，/w它/rr实现/gi了/ule同一个/b时刻/n多/a道/qv作业/gi同时/c运行/gi。/w由于/plinux/gi是/vshi多用户/n的/ude1，/w若/c有/vyou多/a个/q用户/gi同时/c提交/gi多/a个/q作业/gi会/v怎样/ryv？/w在/p这种/r策略/gi中/f给/p每个/r用户/gi分配/gi一个/mq作业/gi池/ng，/w然后/c给/p每个/r作业/gi池/ng设置/gi一个/mq最小/a共享/gi槽/ng个数/n，/w什么/ry是/vshi最小/a共享/gi槽/ng个数/n呢/y？/w先要/b理解/gi一个/mq最小/a什么/ry意思/n，/w最小/a是/vshi指/v只要/c这个/rz作业/gi池/ng需要/v，/w调度器/nz应该/v确保/v能够/v满足/v这个/rz作业/gi池/ng的/ude1最小/a任务/gi槽数/nz的/ude1需求/gi，/w但是/c如何/ryv才能/n确保/v在/p它/rr需要/v的/ude1时候/n就/d有空/vi的/ude1任务/gi槽/ng，/w一种/nz方法/gi是/vshi固定/a分配/gi一定/b数量/n的/ude1槽/ng给/p作业/gi池/ng不动/v，/w这个/rz数量/n至少/d是/vshi最小/a任务/gi槽/ng，/w这样/rzv只要/c在/p作业/gi池/ng需要/v的/ude1时候/n就/d分配/gi给/p它/rr就行了/l，/w但是/c这样/rzv在/p这个/rz作业/gi池/ng没有/v用/p到/v这么/rz多任务/n槽/ng的/ude1时候/n会/v造成/v浪费/gi，/w这种/r策略/gi实际上/d是/vshi这样/rzv做/v的/ude1，/w当/p作业/gi池/ng的/ude1需求/gi没有/v达到/v最小/a任务/gi槽数/nz时/qt，/w名义/n上/f是/vshi自己/rr的/ude1剩余/vn的/ude1任务/gi槽/ng会/v被/pbei分给/v其他/rzv有/vyou需要/v的/ude1作业/gi池/ng，/w当/p一个/mq作业/gi池/ng需要/v申请/v任务/gi槽/ng的/ude1时候/n若/c系统/gi中/f没有/v了/ule，/w这时候/rzt不会/v去/vf抢占/gi别人/rr的/ude1（/w也/d不/d知道/v抢/v谁/ry的/ude1啊/y）/w，/w只要/c当前/t一个空/nz的/ude1任务/gi槽/ng释放/gi会/v被/pbei立即/d分配/gi给/p这个/rz作业/gi池/ng。/w在/p一个/mq用户/gi的/ude1作业/gi池内/s，/w多/a个/q作业/gi如何/ryv分配/gi槽/ng这个/rz可以/v自行/d选择/gi了/ule如/vfifo/gi。/w所以/c这种/r调度/vn策略/gi分为/v两/nz级/q：/w第一级/nz，/w在/p池间/nz分配/gi槽/ng，/w在/p多用户/n的/ude1情况下/nz，/w每个/r用户/gi分配/gi一个/mq作业/gi池/ng。/w第二级/nz，/w在/p作业/gi池内/s，/w每个/r用户/gi可以/v使用/gi不同/a的/ude1调度/vn策略/gi。/w计算/gi能力/gi调度/vn计算/gi能力/gi调度/vn和/cc公平/a调度/vn有点/d类/gi，/w公平/a调度/vn策略/gi是/vshi以/p作业/gi池/ng为/p单位/n分配任务/n槽/ng，/w而/cc计算/gi能力/gi调度/vn是/vshi以/p队列/gi为/p单位/n分配/gitasktracker/nz（/w集群/gi中/f一个/mq节点/gi）/w，/w这种/r调度/vn策略/gi配置/gi了/ule多/a个/q队列/gi，/w每个/r队列/gi配置/gi了/ule最小/a额度/n的/ude1tasktracker/nz数量/n，/w同/p公平/a调度/vn策略/gi类/gi，/w当/p一个/mq队列/gi有/vyou空闲/gi的/ude1tasktracker/nz时/qt，/w调度器/nz会/v将/d空闲/gi的/ude1分配/gi给/p其他/rzv的/ude1队列/gi，/w当/p有/vyou空闲/gi的/ude1tasktracker/nz时/qt，/w由于/p这时候/rzt可能/v有/vyou多/a个/q队列/gi没有/v得到/v最小/a额度/n的/ude1tasktracker/nz而/cc又/d在/p申请/v新的/a，/w空闲/gi的/ude1tasktracker/nz会/v被/pbei优先/vd分配/gi到/v最/d饥饿/n的/ude1队列/gi中/f去/vf，/w如何/ryv衡量/v饥饿/n程度/n呢/y？/w可以/v通过/p计算/gi队列/gi中/f正在/d运行/gi的/ude1任务/gi数/n与/cc其/rz分得/v的/ude1计算/gi资源/gi之间/f的/ude1比/p是否/v最低/a来/vf判断/gi的/ude1，/w越/d低/a说明/v饥饿/n程度/n越高/d。/w计算/gi能力/gi调度/vn策略/gi是/vshi以/p队列/gi的/ude1方式/n组织/gi作业/gi的/ude1，/w所以/c一个/mq用户/gi的/ude1作业/gi可能/v在/p多/a个/q队列/gi中/f，/w如果/c不/d对/p用户/gi做/v一定/b的/ude1限制/vn，/w很可能/nz出现/v在/p多/a个/q用户/gi之间/f出现/v严重/a不/d公平/a的/ude1现象/n。/w所以/c在/p选中/v新/a作业/gi运行/gi时候/n，/w还/d需要/v考虑/v作业/gi所属/n的/ude1用户/gi是否/v超过/v了/ule资源/gi的/ude1限制/vn，/w如果/c超过/v，/w作业/gi不会/v被/pbei选中/v。/w对于/p在/p同一个/b队列/gi中/f，/w这种/r策略/gi使用/gi的/ude1是/vshi基于/p优先级/n的/ude1fifo/gi策略/gi，/w但是/c不会/v抢占/gi。/w