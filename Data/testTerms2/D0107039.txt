#敏捷开发/gi与/cc敏捷测试/gi
   /x敏捷开发/gi：/w1./nz敏捷/gi型/k方法/gi是/vshi“适/nz配/v性/ng”/w而非/c“/w预设/v性/ng”/w。/w重型/b方法/gi试图/v对/p一个/mq软件开发/nz项目/gi在/p很长/d的/ude1时间跨度/nz内/f作出/v详细/gi的/ude1计划/gi，/w然后/c依/v计划/gi进行/vn开发/gi。/w这类/r方法/gi在/p计划/gi制定/gi完成/v后/f拒绝/v变化/gi。/w而/cc敏捷/gi型/k方法/gi则/d欢迎/v变化/gi。/w其实/d，/w它们/rr的/ude1目的/gi就是/v成为/v适应/v变化/gi的/ude1过程/gi，/w甚至/d能/v允许/v改变/v自身/rr来/vf适应/v变化/gi。/w2./nz敏捷/gi型/k方法/gi是/vshi“/w面向/v人/n”/w的/ude1(/nzpeople/nz-/nzoriented/nz)/nz /x而非/c“/w面向/v过程/gi”/w的/ude1 /x(/nzprocess/nz-/nzoriented/nz)/nz。/w /x它们/rr试图/v使/v软件开发/nz工作/gi顺应/v人/n的/ude1天性/n而非/c逆/vg之/uzhi。/w它们/rr强调/v软件开发/nz应当/v是/vshi一项/nz愉快/a的/ude1活动/gi。/w /x我/rr认为/v以上/f两/nz个/q特点/n很好/ad的/ude1概括/v了/ule敏捷/gi开发方法/nz的/ude1核心思想/n：/w适应/v变化/gi和/cc以/p人/n为/p中心/gi。/w /x敏捷开发/gi其实/d借鉴/gi了/ule大量/m软件工程/gi中的/v方法/gi。/w迭代/gi与/cc增量/gi开发/gi，/w这/rzv两/nz种/q在/p任何/rz一本/nz软件工程/gi教材/gi中/f都会/n被/pbei提到/v的/ude1方法/gi，/w在/p敏捷开发/gi模式/gi中/f扮演/v了/ule很/d重要/a的/ude1角色/gi。/w再/d向前/gi追溯/v，/w我们/rr还/d也/d可见/c到/v瀑布/gi式/k与/cc快速/d原型/gi法/n的/ude1影子/n，/w也许/d还有/v多/a。/w /x改善/v，/w而非/c创新/gi。/w敏捷开发/gi可/v理解/gi为/p在/p原有/v软件开发/nz方法/gi基础上/nz的/ude1整合/gi―/w―/w取其精华/i，/w去/vf其/rz糟粕/n。/w因此/c敏捷开发/gi继承/gi了/ule不/d少/a原有/v方法/gi的/ude1优势/gi。/w“/w在/p敏捷/gi软件开发/nz的/ude1过程/gi中/f，/w我们/rr每/rz两/nz周/qt都会/n得到/v一个/mq可以/v工作/gi的/ude1软件/gi，/w”/wfowler/nz介绍/gi，/w“/w这种/r非常/d短/a的/ude1循环/gi，/w使/v终端/gi客户/n可以/v及时/ad、/w快速/d地/ude2看到/v他们/rr花钱/vi构建/gi的/ude1软件/gi是/vshi一个/mq什么样/ryv的/ude1结果/n。/w”/w  /x敏捷开发/gi提出/v了/ule以下/f遵循/gi的/ude1原则/gi：/w /x・/w /x我们/rr最/d优先/vd要/v做/v的/ude1是/vshi通过/p尽早/d的/ude1、/w持续/vd的/ude1交付/v有/vyou价/n的/ude1软件/gi来使/n客户/n满意/v。/w /x・/w /x即使/c到/v了/ule开发/gi的/ude1后期/f，/w也/d欢迎/v改变/v需求/gi。/w敏捷/gi过程/gi利用/v变化/gi来/vf为/p客户/n创造/v竞争/vn优势/gi。/w /x・/w /x经常性/n地/ude2交付/v可以/v工作/gi的/ude1软件/gi，/w交付/v的/ude1间隔/n可以/v从/p几/d个/q星期/n到/v几个月/nz，/w交付/v的/ude1时间/gi间隔/n越短/v越好/d。/w  /x・/w /x在/p整个/b项目开发/gi期间/f，/w业务人员/nz和/cc开发人员/n必须/d天天/d都/d在/p一起/s工作/gi。/w /x・/w /x围绕/v被/pbei激励/vn起来/vf的/ude1个体/n来/vf构建/gi项目/gi。/w给/p他们/rr提供/v所需/nz的/ude1环境/n和/cc支持/v，/w并且/c信任/vn他们/rr能够/v完成/v工作/gi。/w  /x・/w /x在/p团队/gi内部/f，/w最/d具有/v效果/gi并/cc富有/v效率/gi的/ude1传递信息/n的/ude1方法/gi，/w就是/v面对面/dl的/ude1交谈/vi。/w  /x・/w /x工作/gi的/ude1软件/gi是/vshi首要/b的/ude1进度/gi度量/v标准/gi。/w /x・/w /x敏捷/gi过程/gi提倡/v可持续/nz的/ude1开发/gi速度/n。/w责任人/nnt、/w开发者/gi和/cc用户/gi应该/v能够/v保持/v一个/mq长期/d的/ude1、/w恒定/an的/ude1开发/gi速度/n。/w /x・/w /x不断/d地/ude2关注/v优秀/gi的/ude1技能/gi和好/vi的/ude1设计/gi会/v增强/v敏捷/gi能力/gi。/w  /x・/w /x简单/a是/vshi最/d根本/a的/ude1。/w /x・/w /x最好/d的/ude1构架/n、/w需求/gi和/cc设计/gi出于/v自/p组织/gi团队/gi。/w /x・/w /x每隔/d一定/b时间/gi，/w团队/gi会/v在/p如何/ryv才能/n更/d有效地/nz工作/gi方面/n进行/vn反省/v，/w然后/c相应/vi地/ude2对/p自己/rr的/ude1行为/n进行/vn调整/vn。/w  /x敏捷测试/gi流程/gi总结/gi：/w /x在/p敏捷/gi方法/gi中/f，/wxp/nz方法/gi强调/v测试/gi在/p整个/b项目开发/gi过程/gi中的/v重要性/n。/w针对/gi敏捷/gi开发方法/nz的/ude1敏捷测试/gi不同于/c以往/t针对/gi传统开发/gi模式/gi的/ude1测试/gi,/nz在/p敏捷/gi团队/gi中/f,/nz测试/gi是/vshi整个/b项目组/nis的/ude1“/w车头/n灯”/nz，/w它/rr告诉/v大家/rr现在/t到/v哪/ry了/ule，/w正在/d往/p哪个/ry方向/gi走/v。/w测试员/nz为/p项目组/nis提供/v丰富/a的/ude1信息/gi，/w使得/vi项目组/nis基于/p这些/rz可靠/a的/ude1信息/gi作出/v正确/a的/ude1决定/v。/w不仅/c是/vshi测试员/nz要/v保证质量/nz，/w而是/c整个/b项目组/nis的/ude1每/rz一/nz个人/n都/d要/v对/p质量/gi负责/v。/w测试员/nz不/d跟/p开发人员/n纠缠/v错误/gi，/w而是/c帮助/v他们/rr找到/v目标/gi,/nz共同/d为/p达到/v项目/gi的/ude1最终目标/nz而/cc努力/gi。/w敏捷测试/gi也/d需要/v高度/d迭代/gi工作/gi、/w频繁/a得到/v客户/n的/ude1反馈/gi，/w需要/v动态/gi调整/vn测试计划/gi、/w测试/gi的/ude1执行/v。/w并且/c，/w敏捷/gi测试人员/n参与/gi到/v了/ule更多/ad的/ude1敏捷/gi生产/gi活动/gi中/f，/w积极/ad的/ude1影响/gi了/ule团队/gi做出/v的/ude1决定/v和/cc计划/gi。/w /x根据/p公司/nis项目/gi目前/t采用/v的/ude1敏捷开发/gi模式/gi，/w相应/vi的/ude1敏捷测试/gi建议/gi采用/v以下/f流程/gi：/w  /x1./nz /x验证/v需求/gi和/cc设计/gi /x需求/gi和/cc设计/gi具体来说/nz一般/ad包括/v：/w（/w1/nz）/w由/p项目经理/nnt根据/p需求/gi文本/gi而/cc编写/gi的/ude1功能设计/i文本/gi（/wfunctional design specification/nz）/w；/w（/w2/nz）/w由/p开发人员/n根据/p功能/gi文本/gi而/cc编写/gi的/ude1实施/gi设计/gi文本/gi（/wimplementation design specification/nz）/w包括/v(/nzarchitecture document/nz,/nz project scope statement/nz,/nz use case /nz)/nz。/w作为/p测试人员/n，/w审核/gi重点/n是/vshi检查/gi文本/gi对/p用户/gi需求/gi定义/gi的/ude1完整性/gi、/w严密性/nz和/cc功能设计/i的/ude1可测性/gm./nz /x在/p测试/gi初期/f，/w测试人员/n要/v学会/v做/v静态/gi测试/gi，/w做好/v需求分析/gi，/w做好/v对/p设计/gi逻辑/n的/ude1分析/gi。/w测试人员/n要/v更多/ad的/ude1思考/gi需求/gi的/ude1可实现/nz性/ng，/w将/d自身/rr作为/p第一/mq用户/gi积极参与/i项目/gi和/cc系统/gi的/ude1需求分析/gi，/w设计/gi和/cc开发/gi。/w积极/ad地/ude2参与/gi前期工作/nz，/w并/cc迅速/ad反馈/gi给/p设计/gi和/cc开发/gi其/rz静态/gi测试/gi结果/n。/w要/v尽早/d的/ude1开始/v测试/gi，/w不要/d等待/gi到/v功能/gi完全/ad做好/v才/d开始/v。/w /x产出/vn物/ng:/w测试/gi需要/v提交/gi评审/gi结果/n文档/gi,/nz可以/v让/v测试/gi更多/ad的/ude1参与/gidb design/nz,/nz框架/gi的/ude1评审/gi中/f来/vf  /x2./nz /x测试计划/gi，/w测试用例/gi  /x2.1/nz /x编写/gi计划/gi、/w测试用例/gi /x在/p敏捷开发/gi的/ude1过程/gi中/f由于/p是/vshi根据/p每个/ruser story/nz来/vf估算/v时间/gi的/ude1。/w开发人员/n将/d对/p本次/r迭代/gi所/usuo需要/v的/ude1完成/v的/ude1user story/nz进行/vn评估/gi。/w开发人员/n可以/v和/cc客户/n直接/ad沟通/gi，/w来/vf确定/v每个/ruser story/nz的/ude1优先级/n。/w  /x好处/gi：/w /x客户/n可以/v很/d清楚/a的/ude1了解到/v哪些/ryuser story/nz需要/v花费/v多长/n的/ude1时间/gi，/w以及/cc他们/rr的/ude1优先级/n。/w /x问题/gi：/w /x在/puser story/nz的/ude1时间/gi估算/v上/f，/w开发人员/n常会/n估算/v过/uguo少/a。/w引起/v版本/n无法/v按时/d发布/gi或者/c必须/d进行/vn加班/vi才能/n进行/vn发布/gi。/w  /x分析/gi：/w /x由于/p版本/n更新/gi很快/d，/w任务/gi的/ude1时间/gi都/d是/vshi以/p小时/n来/vf进行/vn估算/v的/ude1。/w开发人员/n一般/ad会/v忽略/v掉/v开发/gi以外/f的/ude1时间/gi，/w比如/v开发/gi中/f遇到/v问题/gi的/ude1时间/gi，/w开会/vi，/w给/p其他/rzv成员/nnt提供/v帮助/v的/ude1时间/gi，/w等等/udeng。/w  /x举/v个/q例子/gi：/w /x开发人员/n估算/v某个/rzuser story/nz编码/gi的/ude1时间/gi需要/v1.5/nz天/qt，/w开发人员/n自己/rr估算/v了/ule其他/rzv时间/gi为/p半天/mq。/w于是/cc开发人员/n给/p的/ude1估算/v时间/gi是/vshi2/nz天/qt。/w /x开发阶段/n实际/n的/ude1花费/v时间/gi如下/vi，/w每天/r花费/v开/v例会/n的/ude1时间/gi。/w在/p例会/n中/f项目/gi的/ude1其他/rzv成员/nnt需要/v技术/gi上/f的/ude1支持/v。/w于是/cc发费/nz了/ule3/nz个/q小时/n进行/vn帮助/v。/w在/p开发/gi的/ude1过程/gi中/f遇到/v了/ule一/nz些/q没有/v预见到/v的/ude1问题/gi，/w结果/n解决问题/v花费/v了/ule4/nz个/q小时/n。/w（/w也许/d更多/ad）/w。/w需要/v处理/vn一/nz些/q公司/nis突发性/b的/ude1事务/gi等等/udeng。/w /x所以/c非常/d建议/gi大家/rr在/p估算/v时间/gi上/f能/v充分/ad的/ude1考虑到/v以外/f的/ude1因素/gi，/w某/rz本/rzxp/nz相关/vn的/ude1书上/s写到/v，/w在/p时间/gi估算/v上/f最好/d的/ude1时间/gi是/vshi编码/gi时间/gi的/ude12/nz－/w3/nz倍/q。/w听/v起来/vf很/d吓人/a，/w但是/c实际/n的/ude1过程/gi中/f，/w的确/d需要/v这么/rz多/a的/ude1时间/gi。/w  /x测试人员/n根据/p已/d审核/gi通过/p的/ude1需求/gi和/cc设计/gi编制/vn测试计划/gi，/w设计/gi测试用例/gi。/w在/p前面/f提到/v的/ude1三种/nz文本/gi中/f，/w功能设计/i文本/gi是/vshi主要/b依据/n。/w测试/gi的/ude1这/rzv两/nz个/q文本/gi也/d要/v被/pbei项目经理/nnt和/cc开发人员/n审核/gi。/w /x2.2/nz /x测试用例/gi的/ude1审核/gi /x为/p使/v开发人员/n能/v参与/gi到/vtest case/nz的/ude1review/nz中/f来/vf，/w以/p保证/vtc/nz的/ude1质量/gi和/cc可行性/gi，/w确保/v测试/gi工作/gi的/ude1顺利进行/nz，/w让/v开发人员/n迅速/ad地/ude2了解/v测试/gi的/ude1重点/n并/cc给出/v相应/vi的/ude1意见/gi和/cc建议/gi，/w测试人员/n在/p出/vf tc/nz的/ude1同时/c，/w应/v出/vf一份/nztc/nz_/nzmatrix/nz（/wtest case/nz跟踪/vn矩阵/gi）/w，/w其中/rz注明/vtc/nz已/d覆盖/gi了/ule哪些/ryfeatures/nz，/w具体/a每个/rfeatures/nz对应/vi的/ude1tc/nz的/ude1编号/gi，/w这样/rzv在/p测试/gi经理/gi和/ccpm/nz对/ptc/nz进行/vn review/nz的/ude1时候/n，/w能够/v对/ptc/nz的/ude1覆盖率/n一目了然/vl，/w对/p覆盖率/n不足/an（/w如/v某个/rz重点/nfeature/nz的/ude1test case/nz不够/a）/w的/ude1地方/n能够/v及时/ad给出/v意见/gi。/w /x另外/c，/w在/p每天/r早上/t的/ude1morning meeting/nz上/f，/w测试人员/n可以/v简洁/gi地/ude2讲述/v一下/m当天/t测试/gi的/ude1重点/n部分/n，/w以及/cc项目/gi中/f存在/v哪些/ry严重/a的/ude1bug/gi，/w让/v开发人员/n了解/v当天/t测试/gi的/ude1重点/n是/vshi什么/ry，/w怎样/ryv进行/vn测试/gi，/w并/cc提出/v自己/rr的/ude1意见/gi和/cc建议/gi。/w这样/rzv做/v加强/v了/ule开发/gi与/cc测试人员/n的/ude1交流/gi和/cc沟通/gi，/w使/v测试/gi工作/gi能够/v更加/d有效/gi，/w更加/d顺利/ad地/ude2开展/v。/w  /x在/p迭代/gi后期/f测试/gi要/v抽时间/l更新/gitest case/nz。/w  /x3./nz /x实施/gi运行/gi测试/gi