#深入浅出/al设计模式/nz（/w三/nz）/w：/w4./nz抽象工厂模式/gi  /x5./nz原型模式/gi
上例/n中/f，/w对于/p中英文/n翻译/gi就/d需要/v两/nz个/q不同/a的/ude1工厂/gi类/gi，/w如果/c此时/r要/v增加/v语义/n的/ude1处理/vn功能/gi，/w按照/p工厂方法模式/gi，/w则/d还/d需要/v增加/v一个/mq对/p语义/n处理/vn的/ude1抽象工厂/gi类/gi，/w然后/c再/d增加/v对/p中英文/n语义/n处理/vn的/ude1两/nz个/q具体/a的/ude1工厂/gi类/gi，/w这时/rzt就/d有/vyou2/nz个/q抽象/gi的/ude1工厂/gi类/gi，/w4/nz个/q具体/a的/ude1工厂/gi类/gi。/w如果/c此时/r还/d需要/v增加/v语音/gi播报/v功能/gi，/w则/d还/d需要/v创建/gi新的/a工厂/gi类/gi，/w这样/rzv工厂/gi类/gi的/ude1量/n就/d会/v不断/d增加/v，/w此时/r就/d需要/v使用/gi抽象工厂模式/gi了/ule。/w先/d设计三/nz个/q产品/gi接口/gi：/w再/d分别/d中英文/n实现/gi这些/rz产品/gi接口/gi的/ude1具体/a类/gi：/w再/d设计/gi抽象工厂/gi：/w客户端/gi操作/gi：/w /x在/pjava/gi中/f，/w可以/v直接/ad将/d对象/gi赋值/v给/p新的/a对象/gi，/w但/c因为/cjava/gi是/vshi地址/gi传递/v，/w因此/c如果/c修改/gi新/a对象/gi的/ude1值/n，/w则/d原来/d对象/gi的/ude1值/n也/d会/v修改/gi。/w但/c如果/c希望/v新/a对象/gi与/cc原来/d是/vshi独立/a的/ude1，/w此时/r就/d需要/v使用/gi原型模式/gi。/w原型模式/gi虽然/c是/vshi创建/gi型/k的/ude1模式/gi，/w但是/c与/cc工程模式/n没有/v关系/gi，/w从/p名字/n即可/v看出/v，/w该/rz模式/gi的/ude1思想/gi就是/v将/d一个/mq对象/gi作为/p原型/gi，/w对/p其/rz进行/vn复制/gi、/w克隆/gi，/w产生/v一个/mq和/cc原/b对象/gi类似/a的/ude1新/a对象/gi。/w在/pjava/gi中/f，/w复制/gi对象/gi是/vshi通过/pclone/nz(/nz)/nz实现/gi的/ude1。/w浅复制/nz：/w将/d一个/mq对象/gi复制/gi后/f，/w基本/a数据类型/gi的/ude1变量/gi都会/n重新/d创建/gi，/w而/cc引用/gi类型/gi，/w指向/v的/ude1还是/c原/b对象/gi所/usuo指向/v的/ude1。/w /x深/a复制/gi：/w将/d一个/mq对象/gi复制/gi后/f，/w不论是/c基本/a数据类型/gi还有/v引用/gi类型/gi，/w都/d是/vshi重新/d创建/gi的/ude1。/w简单/a来说/uls，/w就是/v深复制/nz进行/vn了/ule完全彻底/i的/ude1复制/gi，/w而/cc浅/a复制/gi不/d彻底/ad。/w先/d看看/v浅复制/nz的/ude1情况/n：/w将/d其/rz改为/v深/a复制/gi：/w只需/v将/d中的/vprotected object clone/nz(/nz)/nz修改/gi成/v以下/f即可/v：/w还有/v一种/nz深复制/nz方法/gi，/w需要/v采用/v流/gi的/ude1形式/gi读入/gi当前/t对象/gi的/ude1二进制/gi输入/v，/w再写/v出/vf二进制/gi数据/gi对应/vi的/ude1对象/gi（/w利用/v了/ule序列化/gi和/cc反序/nz列化/nz，/w所以/c一定/b要/v继承/gi）/w：/w /x//nz*/nz /x深/a复制/gi /x*/nz//nz  /x