#低延/nz时/qt系统架构/gi（/w一/nz）/w架构/gi演化/gi概述/gi
伴随/v着/uzhe计算机/gi、/w互联网/gi等/udeng技术/gi的/ude1发展/gi，/w用户/gi对系统/l低/a延时/v的/ude1要求/n越来越/d高/a，/w媒体/n直播/vn、/w证券/nis报价/vn、/w社交/gi类/gi软件/gi、/w当前/t作为/p技术/gi热点/gi的/ude1大数据处理/gi，/w各行/r各类/r的/ude1应用/gi都/d需要/v不断/d优化/gi其/rz低/a延时/v架构/gi。/w低/a延时/v系统架构/gi优化/gi经久不衰/vl，/w其/rz目的/gi是/vshi提高/v用户/gi体验/v，/w吸引/v客户/n，/w并/cc最终/d直接/ad或者/c间接/b的/ude1创造价/nz。/w一/nz、/w低/a延时/v架构/gi的/ude1核心思想/n及/cc解决/v的/ude1问题/gi低/a延时/v系统架构/gi不断/d优化/gi和/cc发展/gi，/w并/cc呈现/v螺旋式/n上升/vi的/ude1状态/gi，/w其/rz核心思想/n主要/b有/vyou三个/nz：/w1/nz、/w /x尽可能减少/i网络/gi中转/gi环节/gi，/w提高/v网络/gi速度/n。/w减少/v跳点/nz；/w增加/v带宽/n，/w使用/gi千兆/q、/w万兆网卡/nz，/w甚至/dinfiniband/nz。/w2/nz、/w /x尽可能/d的/ude1提高/v数据处理/gi速度/n，/w提高/v处理器/gi速度/n，/w使用/gi内存计算/gi技术/gi，/w使用/gi并行计算/gi等/udeng高性能/gi处理/vn技术/gi。/w3/nz、/w /x尽可能/d的/ude1减少/v磁盘/giio/gi操作/gi、/w同步操作/l等/udeng，/w以/p降低/v接口/gi延迟/v。/w在/p架构/gi不断/d优化/gi的/ude1过程/gi中/f，/w需要/v不断/d解决/v的/ude1问题/gi包括/v：/w1/nz、/w /x数据/gi可靠性/gi。/w在/p尽量减少/i数据/gi落地/vi（/w不一定/nz没有/v）/w的/ude1情况下/nz，/w保证数据/n不/d丢失/v。/w采用/v异步/gi写/v磁盘/gi、/wha/nz等/udeng技术/gi保证数据/n可靠性/gi。/w2/nz、/w /x吞吐量/gi。/w对/p大规模/b的/ude1数据/gi应能/v保证/v数据处理/gi速度/n，/w分布式计算/nz的/ude1协调/gi和/cc架构/gi。/w3/nz、/w /x高/a可用/v、/w容错/gi等/udeng。/w三低/nz延时/v架构/gi演化/gi概述/gi /x低/a延时/v架构/gi的/ude1演化/gi是/vshi伴随/v着/uzhe计算机/gi软硬件/gi行业/gi的/ude1发展/gi，/w各行各业/n的/ude1需求/gi发展/gi起来/vf的/ude1，/w我们/rr以/p证券/nis行业/gi中的/v行情报价/nz为/p例/n，/w管中窥豹/vl，/w来看/u一/nz下/f低/a延时/v机构/n的/ude1演化/gi历史/n1/nz、/w /x早期/f架构/gi模型/gi在/p最初/d的/ude1硬件资源/l匮乏/vi的/ude1年代/n，/w数据/gi的/ude1接入/vn处理/vn发布/gi都/d部署/gi在/p一起/s，/w减少/v各种/rzio/gi操作/gi，/w充分利用/n有限/a的/ude1资源/gi，/w保证系统/n的/ude1运行/gi。/w如/v图/gi1/nz所示/nz：/w图/gi1/nz最简单/nz模型/gi早期/f架构/gi的/ude1演化/gi中/f，/w更为/d成型/vi的/ude1一个/mq系统架构/gi模型/gi如/v图/gi2/nz所示/nz，/w系统/gi内/f各/rz进程/gi之间/fipc/nz进程通信/gi如/v共享内存/nz技术/gi等/udeng进行/vn数据/gi的/ude1交互/gi，/w数据/gi的/ude1接入/vn部分/n引入/v缓冲/vn队列/gi模型/gi，/w以/p避免/v网络/gi拥堵/v或/c丢包/nz，/w同时/c具备/v缓冲/vn功能/gi，/w提高/v系统/gi的/ude1吞吐/vn压力/n。/w比如/v流媒体/nz模型/gi中/f通过/p时间/gi戳/v序列号/gi等/udeng标识/n配合/v数据/gi重传/gi等/udeng保证数据/n的/ude1可靠/a。/w图/gi2/nz早期/f通用/gi的/ude1成熟/a架构/gi关于/p这/rzv一/nz部分/n，/w笔者/n曾/d有幸/v拜/v读过/v国内/s最早/d一代/n证券行情/nz报价/vn系统/gi的/ude1部分/n核心/n代码/gi，/w并/cc曾/d与/cc早/a在/p90/nz年代/n便/d从事/vi该/rz行业/gi的/ude1第一代/nz程序员/gi共事/vi。/w在/p感叹/v这位/r前辈/n职业/gi精神/gi的/ude1同时/c，/w更是/d感叹/v这/rzv部分/n系统架构/gi的/ude1魅力/n。/w所谓/v没有/v最好/d的/ude1架构/gi，/w只有/c最合适/a的/ude1架构/gi，/w限于/v当时/t各种/rz环境/n和/cc资源/gi，/w架构师/gi要/v充分考虑/n系统/gi的/ude1可用性/gi和/cc成本/n，/w对/p一点一滴/n细节/gi的/ude1把握/gi已经/d到/v了/ule极致/gi。/w主要/b体现/v在/p以下几点/l：/w第一个/gi是/vshi基于/p内存/gi文件/gi的/ude1数据/gi计算/gi和/cc管理/gi。/w通过/p哈希链/nz表/n的/ude1方式/n自/p组织/gi内存/gi数据/gi，/w实现/gi增删/v改查/nz等/udeng操作/gi，/w同时/c通过/p内存/gi文件/gi和/cc磁盘/gi文件/gi的/ude1映射/gi机制/gi，/w实现/gi内存/gi数据/gi的/ude1持久化/nz备份/gi，/w并/cc解决/v读写/gi锁/v机制/gi等/udeng核心问题/gi，/w这些/rz实际/n都/d是/vshi内存数据库/gi的/ude1一种/nz简单/a实现/gi，/w像/vfastdb/nz等/udeng。/w极大/a提高/v数据/gi计算/gi和/cc共享/gi的/ude1速度/n。/w第二个/nz是/vshi高并发/gi异步/gi服务/gi框架/gi。/w基于/pc/nz、/wc语言/gi的/ude1异步/gisocket/gi完成/v，/w实现/gi稳定/an可靠/a的/ude1高并发/gi的/ude1服务/gi要求/n。/w在/p行业/gi发展/gi的/ude1过程/gi中/f，/w出现/v的/ude1其他/rzv高性能/gi网络/gi框架/gi如/vace/nz、/wlibev/nz等/udeng一直/d是/vshi数据/gi类/gi、/w游戏类/n服务/gi使用/gi的/ude1基础/gi框架/gi。/w使用/gic/nz\/nzs/nz架构/gi，/w并/cc通过/p数据/gi推送/nz技术/gi尽快/d的/ude1将/d有效/gi数据/gi发送到/l客户端/gi。/w所有/b实时/n数据/gi都/d是/vshi采用/v流/gi的/ude1方式/n进行/vn处理/vn和/cc发送/gi，/w这/rzv也/d是/vshi早期/f流式计算/nz的/ude1雏形/n。/w即使/c在/pb/nz\/nzs/nz大行其道/vl的/ude1很长/d时间/gi内/f，/w这种/r架构/gi仍然/d是/vshi对/p低/a延时/v需求/gi最/d合理/a的/ude1解决方案/gi。/w在/phtml5/gi中/f出现/v的/ude1websocket/nz技术/gi，/w实际上/d是/vshi完善/vbs/nz架构/gi在/p实时/n数据/gi方面/n表现/v的/ude1不足/an。/w第三/nz个/q是/vshi消息/n对/p列/v缓冲/vn技术/gi。/w当然/d只是/d用来/v做/v缓冲/vn，/w不/d像/v今天/t的/ude1消息中间件/nz具有/v那么/c多/a的/ude1强大/a功能/gi。/w通过/p基本/a的/ude1数组/gi或/c链表/gi等/udeng结构/gi，/w实现/gi数据/gi缓冲/vn，/w提高/v系统/gi的/ude1吞吐能力/gi。得一提/nz的/ude1是/vshi对于/p有些/rz采用/v非/b可靠/a传输/gi协议/gi（/wudp/gi、/wrdp/nz等/udeng）/w的/ude1系统/gi，/w通过/p时间/gi戳/v或/c序列号/gi等/udeng方式/n，/w实现/gi数据/gi重传/gi机制/gi，/w保证数据/n的/ude1完整性/gi，/w如一/r些/q视频/gi直播/vn系统/gi或/c流媒/nz体系统/nz。/w第四个/nz是/vshi文件系统/gi。/w以/p低成本/nz来/vf完成/v数据/gi的/ude1存储/gi和/cc组织/gi，/w并/cc实现/gi检索/gi和/cc装载/v等/udeng。/w和/cc上述/b所有/b环节/gi一起/s，/w不/d使用/gi数据库/gi或/c第三方/nz的/ude1软件产品/gi，/w第一/mq是/vshi降低成本/v，/w第二/mq便是/v部署/gi运维/gi简单/a。/w当然/d，/w前提/n是/vshi系统/gi具有/v强大/a的/ude1稳定性/n。/w第五个/nz必须/d要/v提/v强大/a的/ude1编程语言/gi，/wc/nz\/nzc/nz。/w用/p最靠近/n系统/gi底层/n、/w最/d高效/b的/ude1语言/gi，/w完美/a实现/gi上述/b四点/nz。/w提供/v高性能/gi和/cc计算/gi效率/gi，/w提供/v低/a存储结构/gi。/w在/p这些/rz系统/gi的/ude1代码/gi中/f，/w处处/d可见/c存储/gi计算/gi的/ude1优化/gi，/w掩码/gi、/w位运算/gi、/w二进制/gi传输/gi、/w浮点/nz型/k与/cc长/a整形/vn转换/gi，/w甚至/d部分/n核心/n模块/gi采用/v汇编语言/gi。/w2/nz、/w /x较为/d成熟/a的/ude1架构/gi体系/gi早期/f的/ude1架构/gi体现/v了/ule其/rz技术/gi特点/n，/w也/d存在/v一些/m问题/gi：/w系统/gi的/ude1扩展性/n、/w开放性/n、/w数据/gi的/ude1再/d利用/v，/w这些/rz与/cc过去/vf兴起/v的/ude1soa/gi观念/n看起来/v不入/v。/w随着/p消息中间件/nz、/w内存数据库/gi、/w分布式计算/nz等/udeng更多/ad商业化/vn产品/gi或者/c更多/ad互联网/gi技术/gi的/ude1飞速发展/nz，/w低/a延时/v系统/gi主要/b呈现/v如下/vi样貌/n：/w图/gi3/nz成熟/a机构/n体系/gi消息队列/gi中间件/nmq/nz技术/gi主要/b用于/v解决/v缓冲/vn、/w解耦/gi、/w数据/gi可靠性/gi、/w一致性/gi等/udeng问题/gi，/w并/cc可/v通过/p发布/gi订阅/v等/udeng机制/gi完成/v系统/gi的/ude1分布式/gi扩展/gi和/cc数据/gi的/ude1分布式/gi处理/vn，/w可以/v提供/v峰/ng处理/vn能力/gi。/w消息队列/gi产品/gi众多/a，/w商业化/vn产品/gi有/vyouibm mq/nz、/wtibco/nz等/udeng，/w开源/gi产品/gi则/d层出不穷/vl，/w各/rz有/vyou优势/gi，/w如/vactivemq/nz、/wrabbitmq/nz、/wzeromq/nz，/w以及/cc大数据处理/gi中/f使用/gi的/ude1kafka/nz、/wrocketmq/nz等/udeng技术/gi。/w举例/gi来讲/uls，/w对/p数据/gi可靠性/gi要求/n不/d高/a，/w保证/v最快/d速度/n获得/v最新/a数据/gi的/ude1情形/n，/wtibco/nz的/ude1rv/nz产品/gi无人/b能/v出/vf其/rz右/f，/w其/rz组/n播/v机制/gi能/v快速/d实现/gi数据/gi的/ude1分享/gi，/w同时/c通过/p硬件/gi产品/gi、/w基于/p内存/gi的/ude1消息/n交换/gi技术/gi、/winfiniband/nz技术/gi等/udeng，/w始终/d走/v在/p低/a延时/v技术/gi的/ude1前沿/s。/w而/cc对/p数据/gi可靠性/gi等/udeng有/vyou一定/b要求/n的/ude1情形/n，/wibm wmq/nz、/wrabbitmq/nz等/udeng具有/v较高/ad的/ude1效率/gi。/w关于/p消息中间件/nz技术/gi的/ude1相关/vn比较/gi和/cc分析/gi，/w我们/rr将/d在/p《/w低延/nz时/qt系统架构/gi（/w二/nz）/w消息队列/gi技术/gi分析/gi》/w中/f进行/vn探讨/v。/w内存数据库/gi技术/gi主要/b用于/v解决/v数据/gi缓存/gi、/w组织/gi与/cc管理/gi、/w提高/v查询/gi和/cc访问/gi效率/gi等/udeng。/w像/v关系型/b的/ude1包括/voracle timesten/nz，/waltibase/nz、/wsap hana/nz、/wibm soliddb/nz、/w开源/gi的/ude1fastdb/nz等/udeng。/w像/v非/b关系型/b基于/pkv/nz的/ude1缓存/gi产品/gi有/vyouredis/gi、/wmongodb/gi等/udeng。/w另外/c，/w分布式/gi缓存/gi产品/gi如/vgemfire/nz等/udeng也/d逐渐/d开拓/v新的/a领域/gi。/w内存数据库/gi比较/gi的/ude1主要参数/nz包括/v，/w数据量/n、/w数据/gi读写/gi速度/n、/w接口/gi形式/gi、/w数据/gi持久化/nz方式/n、/w与/cc传统/n数据库/gi的/ude1数据/gi同步/gi接口/gi等/udeng。/w这/rzv部分/n工作/gi我们/rr将/d在/p后续/vn进行/vn探讨/v。/w消息队列/gi技术/gi和/cc内存数据库/gi技术/gi的/ude1发展/gi为/p低/a延时/v系统架构/gi提供/v了/ule技术/gi基础/gi，/w极大/a的/ude1提升/gi了/ule系统/gi的/ude1可扩展性/gi、/w稳定性/n、/w可靠性/gi。/w在/p成熟/a的/ude1架构/gi体系/gi中/f，/wmq/nz分布/vi于/p各个环节/l之间/f，/w形成/v流式/n分布/vi的/ude1形式/gi，/w各/rz节点/gi即是/c消费者/n同时/c又是/c生产者/n，/w最终/d将/d结果/n数据/gi等/udeng写入/gi内存数据库/gi。/w或/c直接/ad通过/p实时/n的/ude1方式/n发布/gi出去/vf。/w3/nz /x流式/n实时/n分布式计算/nz架构/gi体系/gi在后/v摩尔定律/gi时代/gi，/w伴随/v数据/gi吞吐量/gi的/ude1增多/v、/w大数据处理/gi的/ude1需求/gi，/w分布式/gi流式计算/nz框架/gi逐渐/d兴起/v。/w大数据/gi计算/gi主要/b有/vyou批量/d计算/gi和/cc流式计算/nz两/nz种/q形态/n，/w如何/ryv构建/gi低/a延迟/v、/w高吞吐/nz且/c持续/vd可靠/a运行/gi的/ude1大数据/gi流式计算/nz系统/gi是/vshi当前/t亟待解决/vl的/ude1问题/gi，/w流式/n大数据/gi所/usuo呈现出/v的/ude1实时性/nz、/w易/ad失性/nz、/w突发性/b、/w无序性/nz、/w无限性/n等/udeng特征/gi，/w在/p系统结构/gi、/w数据传输/gi、/w应用/gi接口/gi、/w高/a可用/v技术/gi、/w可伸缩性/l、/w系统/gi容错/gi、/w状态/gi一致性/gi、/w负载均衡/gi、/w数据/gi吞吐量/gi等/udeng方面/n提出/v了/ule技术/gi挑战/gi。/w在/p第/mq2/nz节/q的/ude1架构/gi体系/gi之上/f，/w进一步/d考虑/v系统/gi的/ude1吞吐/vn，/w将/d分布式/gi消息队列/gi技术/gi、/w分布式/gi内存数据库/gi技术/gi、/w分布式计算/nz协调/gi调度/vn等/udeng技术/gi进行/vn综合/vn应用/gi，/w便/d形成/v了/ule流式计算/nz的/ude1架构/gi体系/gi，/w在/p这个/rz过程/gi中/f出现/v了/ule分布式/gi消息队列/gi如/vkafka/nz技术/gi、/w分布式/gi协调/gi框架/gi如/vzookeeper/nz等/udeng技术/gi。/w其中/rz得一提/nz的/ude1是/vshizeromq/nz，/w虽然/c它/rr不是/c传统意义/n的/ude1消息队列/gi，/w但是/c为/p数据/gi分发/v订阅/v，/w流式/n处理/vn等/udeng提供/v了/ule很/d多/a可以/v扩展/gi的/ude1模型/gi，/w包括/vpush/nz|/nzpull/nz、/wpub/nz|/nzsub/nz、/wforward/nz、/wroute/nz等/udeng。/w通过/pipc/nz或者/c网络/gi分发/v机制/gi，/w实现/gi了/ule线程/gi、/w进程/gi、/w主机/gi之间/f的/ude1弹性/n伸缩/vn。/w实时/n流式计算/nz框架/gi的/ude1代表/nnt主要/b有/vyouspark/gi和/ccstorm/nz。/w以/pstorm/nz为/p例/n，/w说明/v其/rz流式/n特点/n，/w限于/v篇幅/n，/w我们/rr将/d于/p后续/vn章节/n对流/vn式/k计算/gi技术/gi进行/vn详细/gi比较/gi和/cc分析/gi。/w