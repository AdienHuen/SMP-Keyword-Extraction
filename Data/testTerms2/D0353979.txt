#VB/nz./nzNET/nz机房/gi收费/gi /x&/nz /x初/f感受/gi
总体/n感受/gi：/w /x机房/gi也/d进行/vn了/ule好/a几天/nz了/ule，/w不过/c最近/t这/rzv几天/nz只是/d停留/vi在/p表面/n工作/gi，/w到底/d该/rz如何/ryv下手/vi，/w才/d更容易/nz消化/v呢/y？/w这/rzv真的/d成/v了/ule自己/rr首要/b的/ude1解决问题/v：/w /x看/v培养/v计划/gi，/w自己/rr也/d了解/v了/ule大概/d的/ude1流程/gi，/wuml/gi图/gi，/w文档/gi，/w数据库/gi…/w…/w，/w可是/c到底/d该/rz从/p哪/ry下手/vi？/w如何/ryv利用/v自己/rr学习/gi到/v的/ude1三层/nz解耦/gi？/w数据库/gi该/rz设计/gi成/v什么样/ryv的/ude1？/w等等/udeng，/w都/d是/vshi一/nz些/q很/d让/v人/n头痛/a的/ude1问题/gi。/w包/v图/gi：/w /x按计划/d来/vf，/w应该/v是从/v文档/gi开始/v，/w浏览/gi了/ule大家/rr的/ude1相关/vn博客/gi，/w也/d是/vshi从此/d开始/v的/ude1，/w对于/puml/gi图/gi，/w自己/rr首先/d画/v了/ule一个/mq包图/nz，/w来/vf对/p机房/gi进行/vn了/ule一个/mq大概/d的/ude1了解/v，/w当然/d刚开始/nz的/ude1想法/gi肯定/v是/vshi被/pbei打破/v了/ule，/w因为/c只是/d想到/v了/ule一个/mq简单/a的/ude1三层/nz关系/gi而已/y，/w修改/gi后/f的/ude1包/v图/gi如下/vi：/w下边/f来/vf分析/gi一下/m：/w1/nz）/w为什么/ryv要/v使用/gifacade/gi模式/gi呢/y？/w首先/d要/v明白/vfacade/gi的/ude1应用/gi场合/n以及/cc主要/b作用/gi是/vshi什么/ry？/w /x详情/n我/rr的/ude1，/w在/pu/nz层/gi与/ccb/nz层/gi之间/f添加/gifacade/gi模式/gi，/w主要/b的/ude1目的/gi就是/v提供/v一个/mq简单/a的/ude1接口/gi，/w这样/rzv就/d可以/v减少/v他们/rr互相/d之间/f的/ude1依赖/v情况/n，/w更好/d的/ude1工作/gi。/w2/nz）/w使用/gi工厂模式/gi到底/d有/vyou什么/ry用/p呢/y？/w /x看图/v就/d可以/v清晰/a的/ude1发现/v，/wb/nz层/gi通过/pidal/nz接口/gi，/w将/dd/nz层/gi中的/v类/gi反射/gi过来/vf，/w也/d就是/v在/pb/nz层/gi产生/v了/uled/nz层/gi的/ude1类/gi，/w在/p此/rzs建立/gi一个/mqfactory/gi，/w方便/ab/nz层/gi的/ude1引用/gi，/w也/d就是/v所谓/v的/ude1“反射/nz抽象工厂/gi”/w，/w以后/f会/v做/v详细/gi的/ude1介绍/gi。/w包/v图/gi就/d这样/rzv在/p自己/rr懂非懂/nz中/f结束/v了/ule，/w其实/d画/v完/vi之后/f感觉/gi真的/d是/vshi蛮/d简单/a的/ude1，/w让/v自己/rr的/ude1头脑/n对于/p三层/nz又/d有/vyou了/ule一个/mq更加/d清晰/a的/ude1认识/v。/w用/p例/n图/gi：/w /x对于/p用/p例/n图/gi，/w自己/rr又/d重新/d分析/gi了/ule一番/mq，/w总/b觉得/v和/cc第一遍/nz的/ude1没有/v多/a大/a的/ude1区别/gi，/w当然/d这/rzv只是/d从/p一个/mq角度/n来/vf观察/gi而已/y，/w画/v用/p例/n图/gi的/ude1思考/gi方式/n有/vyou很/d多/a，/w如/v我/rr也/d可以/v只/d针对/gi学生/gi上机/vi信息/gi来/vf画一个/nz用/p例/n图/gi：/w数据库/gi的/ude1建立/gi：/w /x第一次/nz敲/v机房/gi的/ude1时候/n也/d只是/d简单/a的/ude1按照/p参考/gi重新/d建立/gi了/ule一个/mq，/w这次/r对于/p机房/gi的/ude1重构/gi，/w显然/ad要/v想/v再/d偷懒/vi是/vshi不/d可能/v的/ude1了/ule，/w这次/r数据库/gi的/ude1建立/gi一定/b要/v满足/v三层/nz的/ude1要求/n，/w即/v达到/v解耦/gi的/ude1目的/gi，/w主要/b的/ude1使用/gi方法/gi则/d是/vshi数据库/gi课本/n中/f介绍/gi的/ude1主/ag外键/gi问题/gi以及/cc最让人/n烦恼/an的/ude1三范式/nz，/w不过/c试想/v一下/m应用/gi之后/f的/ude1程序/gi，/w就/d会/v觉得/v没有/v那么/c乏味/a了/ule，/w再/d想想/v其/rz强大/a的/ude1作用/gi，/w试问/v：/w你/rr抵抗/vn他们/rr，/w那/rzv你/rr能/v做到/v这些/rz吗/y？/w所以/c还是/c乖乖/d的/ude1应用/gi吧/y！/w感慨/v：/w /x这/rzv就是/v这/rzv几天/nz自己/rr抵触/vi机房/gi而/cc停留/vi所得/n的/ude1初/f感受/gi吧/y！/w不过/c时间/gi无声无息/vl的/ude1过去/vf了/ule，/w貌/ng自己/rr的/ude1抵触/vi心理/gi也/d随之/d渐渐/d的/ude1消失/vi了/ule，/w在/p此为/c自己/rr加油/vi吧/y！/w相信/v这块/r肥肉/n自己/rr总/b有/vyou办法/gi来/vf消化/v他/rr…/w…/w