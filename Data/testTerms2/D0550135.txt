#代理/giip/gi采集器/nz(/nz1/nz)/nz
还/d没/d撸/ng完码/nz,/nz但是/c撸/ng了/ule一半/mq了/ule,/nz校验/v那块/r撸/ng的/ude1差不多/al了/ule,/nz这次/r代码/gi就/d不/d贴/v在/p这边/rzs了/ule,/nz有空/vi丢/vgithub/gi上面/f./nz下篇/n再/d给/p上/f地址/gi了/ule./nz这次/r就/d大概/d说/v下/f自己/rr的/ude1思路/gi:/w整体/n的/ude1架构/gi就/d如上图/i了/ule,/nz库用/nz的/ude1是/vshiredis/gi内存数据库/gi./nz其实/d与其说是/c库/n还/d不如说是/c队列/gi,/nz我/rr用/p的/ude1是/vshigo/nz写/v的/ude1,/nz这块/r写成/v一个/mq接口/gi,/nz可以/v使用/gigo map/nz实现/gi队列/gi,/nz也/d可以/v使用/giredis/gi或者/c其它/rz方式/n去/vf实现/gi都行/n,/nz这/rzv写/v都/d是/vshi细节/gi./nz采集器/nz最/d核心/n的/ude1部分/n是/vshi代理/gi的/ude1判断/gi,/nz不是/c很难/d,/nz但是/c也/d不算/v简单/a./nz目前/t想不到/vl怎么/ryv在/ptcp/gi判断/gi那块/r实现/gi两/nz次/qv握手/vi,/nz因为/c三次/nz握手/vi是/vshi已经/d建立/gi了/ule连接/gi了/ule,/nz释放/gi连接/gi的/ude1时候/n更是/d需要/v4/nz次/qv,/nz所以/c这块/r的/ude1性能/gi损耗/vn很大/d./nz这块/r目前/t整/v的/ude1是/vshi三次/nz握手/vi四次/nz释放/gi./nz另外/c需要/v明白/v的/ude1是/vshi上面/f4/nz种/q代理/gi的/ude1区别/gi:/whttp/gi代理/gi是/vshi建立/gi在/ptcp/gi协议/gi上面/f的/ude1,/nz同样/dhttps/gi,/nz即/v也/d是/vshi建立/gi在/ptcp/gi上面/f的/ude1./nz另外/c就是/vsocket/gi5/nz和/ccsocket/gi4/nz的/ude1区别/gi,/nzsocket/gi5/nz为/psocket/gi4/nz的/ude1升级版/nz,/nzsocket/gi4/nz只/d支持/vtcp/gi,/nz而/ccsocket/gi5/nz不仅/c支持/vtcp/gi还/d支持/vudp/gi以及/cc各种/rz验证/v./nz如果/c了解/v了/ule上面/f四种/nz协议/gi的话/udh校验/v这块/r就/d不难/d了/ule./nz另外/c还有/v一点/m就是/v采集/v的/ude1时候/n需要/v初始化/vip/gi库/n,/nz这块/r就/d采用/v开源/gi /x的/ude1ip/gi库/n了/ule,/nz因为/c都/d是/vshi已经/d整理/gi好/a的/ude1(/nz拿来主义/n~/nz~/nz~/nz)/nz./nz还有/v一个/mq端口/gi的/ude1问题/gi,/nz毕竟/d一台/nz主机/gi端口/gi有/vyou215/nz-/nz1/nz个/q端口/gi,/nz所以/c这里/rzs又/d有/vyou两/nz种/q方案/gi,/nz1/nz是/vshi端口扫描/nz,/nz2/nz是/vshi采用/v常用/a端口/gi,/nz比如/v8088/nz之类/rz的/ude1./nz整体/n情况/n差不多/al就/d这样/rzv的/ude1了/ule./nz剩下/v的/ude1就/d继续/v撸/ng吧/y~/nz