#为什么/ryv寄存器/gi和/cc内存/gi访问/gi带宽/n差/a这么/rz多/a？/w
原因/n一/nz：/w距离/gi不同/a距离/gi不是/c主要/b因素/gi，/w但是/c最好/d懂/v，/w所以/c放在/v最/d前面/f说/v。/w内存/gi离/v比较/gi远/a，/w所以/c要/v耗费/v更长/d的/ude1时间/gi读取/gi。/w以/p的/ude1为/p例/n，/w电流/gi每秒钟/nz可以/v振荡/vn亿次/nz，/w每次/r耗时/vi大约/d为/p纳秒/nz。/w光/n在/p纳秒/nz的/ude1时间/gi内/f，/w可以/v前进/vi厘米/q。/w也/d就是说/c，/w在/p的/ude1一个/mq时钟/gi周期/n内/f，/w光/n可以/v前进/vi厘米/q。/w因此/c，/w如果/c内存/gi距离/gi超过/v厘米/q，/w就/d不/d可能/v在/p一个/mq时钟/gi周期/n内/f完成/v数据/gi的/ude1读取/gi，/w这/rzv还/d没有/v考虑/v硬件/gi的/ude1限制/vn和/cc电流/gi实际上/d达/v不到/v光速/n。/w相比之下/vl，/w寄存器/gi在/p内部/f，/w当然/d读/v起来/vf会/v快一点/nz。/w距离/gi对于/p桌面/gi电脑/gi影响/gi很大/d，/w对于/p手机/gi影响/gi就要/d小得多/d。/w手机/gi的/ude1时钟/gi频率/n比较慢/l（/w为/p）/w，/w而且/c手机/gi的/ude1内存/gi紧挨/v着/uzhe。/w原因/n二/nz：/w硬件设计/gi不同/a苹果公司/nt新/a推出/v的/ude1，/w是/vshi，/w寄存器/gi有/vyou多/a位/q（/w个位/n寄存器/gi，/w加上/v个位/n寄存器/gi）/w。/w而/cc的/ude1内存/gi是/vshi，/w约/d为/p亿位/nz（/w）/w。/w这/rzv意味着/v，/w高性能/gi、/w高/a成本/n、/w高/a耗电/vi的/ude1设计/gi可以/v用/p在/p寄存器/gi上/f，/w反正/d只有/c多/a位/q，/w而/cc不能/v用/p在/p内存/gi上/f。/w因为/c每个/r位/q的/ude1成本/n和/cc能耗/n只要/c增加/v一/nz点点/v，/w就/d会/v被/pbei放大/v亿倍/nz。/w事实上/bl确实/ad如此/rzv，/w内存/gi的/ude1设计/gi相对/d简单/a，/w每个/r位/q就是/v一个/mq电容/gi和/cc一个/mq晶体管/gi，/w而/cc寄存器/gi的/ude1设计/gi则/d完全/ad不同/a，/w多/a出好/v几/d个/q电子元件/n。/w并且/c通电/vi以后/f，/w寄存器/gi的/ude1晶体管/gi一直/d有/vyou电/n，/w而/cc内存/gi的/ude1晶体管/gi只有/c用/p到/v的/ude1才/d有/vyou电/n，/w没用到/l的/ude1就/d没电/l，/w这样/rzv有利于/v省电/vi。/w这些/rz设计/gi上/f的/ude1因素/gi，/w决定/v了/ule寄存器/gi比/p内存/gi读取/gi速度/n更快/d。/w原因/n三/nz：/w工作方式/gi不同/a寄存器/gi的/ude1工作方式/gi很/d简单/a，/w只有/c两步/n：/w（/w1/nz）/w找到/v相关/vn的/ude1位/q，/w（/w2/nz）/w读取/gi这些/rz位/q。/w内存/gi的/ude1工作方式/gi就要/d复杂/a得/ude3多/a：/w找到/v数据/gi的/ude1指针/gi。/w（/w指针/gi可能/v存放在/v寄存器/gi内/f，/w所以/c这一步/nz就/d已经/d包括/v寄存器/gi的/ude1全/a部/q工作/gi了/ule。/w）/w将/d指针/gi送往/v内存/gi管理/gi单元/n（/w）/w，/w由/p将/d虚拟/gi的/ude1内存地址/nz翻译成/l实际/n的/ude1物理地址/gi。/w将/d物理地址/gi送往/v内存/gi控制器/n（/w）/w，/w由/p内存/gi控制器/n找出/v该/rz地址/gi在/p哪/ry一/nz根/n内存/gi插槽/gi（/w）/w上/f。/w确定/v数据/gi在/p哪/ry一个/mq内存/gi块/q（/w）/w上/f，/w从/p该/rz块/q读取数据/n。/w数据/gi先/d送回/v内存/gi控制器/n，/w再送/v回/v，/w然后/c开始/v使用/gi。/w内存/gi的/ude1工作/gi流程/gi比/p寄存器/gi多/a出/vf许多步/nz。/w每一步/d都会/n产生/v延迟/v，/w累积/v起来/vf就/d使得/vi内存/gi比/p寄存器/gi慢/a得/ude3多/a。/w为了/p缓解/v寄存器/gi与/cc内存/gi之间/f的/ude1巨大/a速度差异/gi，/w硬件/gi设计师/nnt做出/v了/ule许多努力/nz，/w包括/v在/p内部/f设置/gi缓存/gi、/w优化/gi工作方式/gi，/w尽量/d一次性/d从/p内存/gi读取/gi指令/gi所要/b用/p到/v的/ude1全部/m数据/gi等等/udeng。/w