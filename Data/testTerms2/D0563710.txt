#设计/gi模式--装饰/nz模式/gi
装饰模式/gi是/vshi属于/v结构型/n的/ude1设计模式/nz。/w装饰模式/gi的/ude1定义/gi：/w /x动态/gi给/p一个/mq对象/gi添加/gi一/nz些/q额外/b的/ude1职责/gi，/w就/d增加/v功能/gi来说/uls，/w装饰模式/gi比/p生成/v子类/gm更加/d灵活/a。/w /x装饰模式/gi的/ude1结构图/gi如下/vi：/w  /x适用性/n：/w /x1/nz /x在/p不/d影响/gi其他/rzv对象/gi的/ude1情况下/nz，/w以/p动态/gi，/w透明/a的/ude1方式/n给/p单个/b对象/gi添加/gi职责/gi /x2/nz /x处理/vn那些/rz可以/v撤销/v的/ude1职责/gi /x3/nz /x当/p不能/v采用/v生成/v子类/gm的/ude1方式/n进行/vn扩充/v时/qt。/w一种/nz情况/n是/vshi，/w可能/v有/vyou大量/m的/ude1对立/vi的/ude1扩展/gi，/w为/p支持/v每/rz一/nz种/q组合/gi将/d产生/v大量/m的/ude1子类/gm，/w使得/vi子类/gm爆炸性/n的/ude1增长/gi。/w另一种/nz情况/n是因为/c类/gi定义/gi被/pbei隐藏/v，/w或/c类/gi定义/gi不能/v用于/v生成/v子类/gm。/w /x协作/gi decorator/nz将/d请求/gi转发给/v它/rr的/ude1component/nz对象/gi，/w并/cc有可能/nz在/p转发/gi请求/gi前后/f执行/v以下/f附加/vn的/ude1动作/gi /x优点/gi /x1/nz /x比/p静态/gi继承/gi更加/d灵活/a，/w使用/gidecorator/gi可以/v很容易/nz的/ude1重复/gi添加/gi一个/mq特性/gi。/w如/v在/ptextview/gi添加/gi两/nz个/q边框/n时/qt，/w仅/d需/v添加/gi两/nz个/q边框/n对象/gi。/w /x2/nz /x避免/v在/p层次/n架构/gi高层/n的/ude1类/gi有/vyou太多/ad的/ude1特性/gi /x缺点/gi /x1/nz decorator/nz与/cccomponent/nz不/d一样/uyy，/w从/p对象/gi的/ude1标示/v观点/gi来看/u，/w一个/mq被/pbei修饰/v的/ude1组件/gi与/cc这个/rz组件/gi是/vshi有区别/nz的/ude1，/w因此/c使用/gi装饰/gi时/qt不/d应该/v依赖/v对象/gi标识/n /x2/nz /x有/vyou许多小/nz对象/gi /x注意/v /x1/nz /x接口/gi的/ude1一致性/gi /x，/w装饰/gi对象/gi的/ude1接口/gi与/cc它/rr所/usuo装饰/gi的/ude1component/nz的/ude1接口/gi是/vshi一致/a的/ude1 /x2/nz /x省略/v抽象/gi的/ude1decorator/gi类/gi /x3/nz /x保持/vcomponent/nz类/gi的/ude1简单性/nz /x4/nz /x改变/v对象/gi的/ude1外壳/n与/cc对象/gi的/ude1内核/gi