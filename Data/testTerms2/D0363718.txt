#iOS/gi笔记/gi：/w第十二/nz篇/q OC /nz协议/gi
1./nz协议/gi概述/giprotocol/nz(/nz协议/gi)/nz：/w就/d一个/mq用途/n，/w用来/v声明/gi一大/n堆/gi的/ude1方法/gi（/w不能/v声明/gi成员/nnt变量/gi）/w，/w不能/v写/v实现/gi。/w好处/gi：/w提高/v程序/gi的/ude1灵活性/gi提高/v程序/gi的/ude1可扩展性/gi提高/v程序/gi的/ude1可维护性/gi2./nzprotocol/nz的/ude1定义/gi式/k：/w@/nzprotocol/nz协议/gi名称/n//nz//nz方法/gi声明/gi列表/vi@/nzend/nz说明/v：/w必须/d以/p@/nzprotocol/nz开头/n以/p@/nzend/nz结尾/n中间/f只/d写/v方法/gi声明/gi3./nz式/k：/w@/nzinterface/nz类名/n:/w父类/nz协议/gi名称/n1/nz,/nz协议/gi名称/n2/nz,/nz…/w//nz//nz根据/p需要/v实现/gi协议/gi中的/v方法/gi@/nzend/nz4./nz协议/gi与/ccid/nz协议/gi可以/v限制/vnidid/nz协议/gi名称/n对象/gi指针/gi;/nz这种/r指针/gi只能/v指向/v遵守/v这个/rz协议/gi的/ude1对象/gi，/w这种/r指针/gi可以/v指向/v任意/d的/ude1遵守/v这个/rz协议/gi的/ude1对象/gi优点/gi：/w1./nz对比/gi直接/ad使用/giid/nz定义/gi变量/gi来说/uls，/wid/nz协议/gi可以/v进行/vn类型/gi检查/gi2./nz可以/v在/p没有/v继承/gi情况下/nz，/w使用/gi多态/gi的/ude1特性/gi一个/mq协议/gi可以/v被/pbei多/a个/q类/gi遵守/v一个/mq类/gi可以/v遵守/v多/a个/q协议/gi，/w多/a个/q协议/gi使用/gi逗号/n分隔/vi协议/gi也/d可以/v遵守/v协议/gi一个/mq协议/gi也/d可以/v遵守/v多/a个/q其他/rzv协议/gi，/w中间/f也/d是/vshi用/p逗号/n隔开/v5./nznsobject/nz协议/gi：/w基/ng协议/gi当/p一个/mq协议/gi遵守/v了/ule基/ng协议/gi，/w那么/c他/rr就/d有/vyou了/ule基/ng协议/gi中/f所有/b的/ude1方法/gi的/ude1声明/gi主要/b：/w自定义/nz协议/gi的/ude1时候/n，/w都/d要/v直接/ad或/c间接/b遵守/v基/ng协议/gi目的/gi：/w通过/pid/nz协议/gi名称/n定义/gi的/ude1对象/gi指针/gi可以/v指向/v基/ng协议/gi中/f声明/gi的/ude1方法/gi6./nz协议/gi的/ude1两/nz个/q关键字/gi：/w1./nz@/nzrequired/nz必须/d的/ude1，/w如果/c某个/rz类/gi遵守/v这个/rz协议/gi，/w就/d必须/d要/v实现/gi的/ude1方法/gi（/w默认/v的/ude1）/w2./nz@/nzoptional/nz可选/v的/ude1，/w如果/c某个/rz类/gi遵守/v这个/rz协议/gi，/w协议/gi的/ude1方法/gi可以/v实现/gi也/d可以/v不/d实现/gi代理/gi（/w委托/vn）/w设计模式/nz1./nz设计模式/nz：/w是/vshi一套/nz被/pbei反复/d使用/gi、/w多数/a人/n知晓/v的/ude1、/w经过/p分类/gi编目/gi的/ude1、/w代码/gi设计/gi经验/gi的/ude1总结/gi。/w2./nz每/rz一/nz种/q设计模式/nz都/d有/vyou一定/b使用场景/gi代理/gi设计模式/nz使用场景/gi:/w当/pa/nz类/gi对象/gi发生/v了/ule什么事/nz，/w想/v通知/gib/nz类/gi对象/gi的/ude1时候/n(/nz让/vb/nz类/gi对象/gi成为/va/nz类/gi对象/gi的/ude1代理/gi)/nz当/pa/nz类/gi对象/gi有些/rz事情/n，/w自己/rr无法/v处理/vn，/w需要/vb/nz类/gi对象/gi帮助/v它/rr处理/vn(/nz让/vb/nz类/gi对象/gi成为/va/nz类/gi对象/gi的/ude1代理/gi)/nz当/pb/nz类/gi对象/gi想要/v监听/gia/nz类/gi对象/gi中/f发生/v的/ude1事情/n的/ude1时候/n(/nz让/vb/nz类/gi对象/gi成为/va/nz类/gi对象/gi的/ude1代理/gi)/nz3./nz代理/gi设计模式/nz的/ude1实现/gi步骤/gi：/w1./nz定义/gi一个/mq协议/gi，/w协议/gi中/f声明/gi代理/gi需要/v实现/gi的/ude1方法/gi命名规则/gi：/w类名/ndelegate/nz代理/gi方法/gi一般/ad都/d需要/v把/pba自己/rr作为/p参数/gi传入/gi代理/gi方法/gi一般/ad情况/n都/d是/vshi可选/v的/ude12./nza/nz类/gi中/f：/w需要/v定义/gi有/vyou一个/mqidadelegatedelegate/nz属性/gi当/pa/nz类/gi发生/v某个/rz事件/gi的/ude1时候/n要/v通知/gi代理/gi，/w通知/gi之前/f先/d判断/gi代理/gi是否/v实现/gi了/ule该/rz方法/gi，/w如果/c实现/gi了/ule就/d调用/gi代理/gi的/ude1方法/gi3./nzb/nz类/gi中/f：/w遵守/v代理/gi协议/gi实现/gi代理/gi协议/gi中的/v方法/gi4./nz让/vb/nz类/gi对象/gi成为/va/nz类/gi对象/gi的/ude1代理/gi（/w建立/gi关系/gi）/w