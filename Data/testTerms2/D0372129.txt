#中小型/b网站/gi的/ude1缓存/gi策略/gi
转载/v于/p在/p上/f一篇/nz文章/gi《/w》/w中/f，/w介绍/gi了/ule大型网站/gi的/ude1系统架构/gi，/w其中/rz缓存/gi环境/n非常/d重要/a，/w大型网站/gi往往/d使用/gisquid/gi前端/gi缓存/gi服务器/gi群/ng，/wmemcache/gi分布式/gi缓存/gi，/w负载均衡/gi，/wcdn/gi等/udeng来/vf提升/gi性能/gi。/w但/c中小型/b网站/gi使用/gi这些/rz大家伙/nz就/d有/vyou杀鸡/v用/p牛刀/nr的/ude1感觉/gi，/w但/c毋庸置疑/vl，/w缓存/gi是/vshi需要/v的/ude1，/w开发者/gi开发/gi程序/gi的/ude1时候/n若/c没有/v并发/gi思维/gi，/w一味/d注重/v业务逻辑/gi，/w往往/d导致/gi并发/gi用户/gi可能/v在/p差不多/al相同/a的/ude1时间/gi请求/gi相同/a的/ude1数据/gi，/w网站/gi再/d请求/gi数据库/gi，/w如果/c使用/gi缓存/gi，/w对/p这种/r相同/a的/ude1请求/gi，/w或者/c不变/nz的/ude1数据/gi，/w可以/v缓存/gi起来/vf，/w直接/ad从/p内存/gi读取/gi，/w可以/v大大/d提升/gi并发访问/gi的/ude1性能/gi，/w减少/v数据库/gi访问/gi次数/gi。/w因为/c数据库/gi往往/d是/vshi最/d容易/ad出现/v瓶颈/gi的/ude1地方/n，/w而/cc通过/p使用/gi恰当/a的/ude1缓存/gi技术/gi可以/v非常/d有效地/nz减轻/v数据库/gi的/ude1负载/gi。/w根据/p我/rr的/ude1经验/gi，/w中小型/b网站/gi可以/v采用/v这样/rzv的/ude1缓存/gi策略/gi /x：/w如果/c是/vshi单/b台/q服务器/gi可以/v直接/ad缓/a存在/v内存/gi，/w怕/v内存/gi不够/a就/d合理/a利用/vasp/nz.net/gi所/usuo提供/v的/ude1缓存机制/gi，/w有/vyou现成/b的/ude1干嘛/nz不用/d呢/y？/w缓存/gi存在/vxml/nz文件/gi中/f也/d是/vshi一种/nz备选/nz方案/gi，/w但/c首先/d速度/n没有/v内存/gi的/ude1来/vf的/ude1快/a，/w其次/c是/vshi写入/gi并发/gi写入/gixml/nz的/ude1时候/n会/v锁住/v文件/gi。/w可以/v选用/v现成/b的/ude1微软/ntccache application block/nz来/vf实现/gi。/w有/vyou多/a台/q的/ude1服务器/gi的话/udh可以/v考虑/vmemcached/gi，/w或者/c其他/rzv类/gi的/ude1东西/n，/w或者/c另加/nz一个/mq数据库/gi作为/p缓存库/nz也/d行/ng啊/y。/w当然/d有钱/a的/ude1可以/v用/p内存数据库/gi。/w但/c不是/c所有/b数据/gi都/d可以/v缓存/gi的/ude1：/w对于/p恒定/an不变/nz的/ude1数据/gi，/w系统启动/l后/f放入/v缓存/gi就/d不/d过期/gi不/d更新/gi了/ule。/w对于/p偶尔/d改变/v的/ude1数据/gi，/w缓存/gi过期/gi时间/gi可以/v稍微/d长/a一/nz些/q，/w比如/v15/nz分钟/qt。/w对于/p经常/d改变/v的/ude1数据/gi，/w但/c访问量/nz极大/a的/ude1热点/gi数据/gi，/w可以/v缓存/gi很短/d的/ude1时间/gi，/w例如/v30/nz秒/qt，/w或/c60/nz秒/qt。/w（/w微软/ntc有/vyou一种/nz数据库/gi数据/gi改变/v自动/d同步/gi缓存/gi的/ude1sqldependency/nz功能/gi，/w有兴趣/v的/ude1读者/n可以/v关注/v）/w如此/rzv，/w便/d可/v最大/gm程度/n的/ude1利用/v缓存/gi，/w从而/c可以/v有效/gi提高/v系统/gi性能/gi，/w并/cc明显/a减轻/v数据库/gi和/cc网络/gi负载/gi。/w你/rr也/d可以/v统计/gi并发访问/gi最高/a的/ude1页面/gi和/ccdb/nz访问/gi的/ude1频率/n，/w把/pba网页/gi静态/gi化/v，/w或/c缓存/gi该/rz些/q热点/gi，/w淘汰/v不/d热/a的/ude1(/nz缓存/gi替换算法/gi)/nz，/w即使/c缓存/gi30/nz秒/qt，/w或/c60/nz秒/qt也/d是/vshi很大/d的/ude1性能/gi提升/gi，/w因为/c他们/rr的/ude1并发/gi访问量/nz很大/d，/w导致/gi数据库/gi的/ude1压力/n也/d很大/d。/w代码/gi参考/gi：/w使用/gi策略模式/gi和/cc单例模式/gi的/ude1单机/n内存/gi缓存/gi：/w(/nz可以/v扩展到/v其他/rzv的/ude1缓存/gi策略/gi，/w例如/vmemcache/gi等/udeng)/nzicachestrategy/nz./nzcsdefaultcachestrategy/nz./nzcscachingmanager/nz./nzcs/gi调用/gi：/w调用/gi时序/n图/gi：/w