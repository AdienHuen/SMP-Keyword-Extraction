#网页/gi爬虫/gi
一/nz./nz /x前言/gi /x最近/t要/v测试/gi修改/gi一个/mq反爬虫/gi代码/gi，/w /x之前/f一直/d没/d接触/v过/uguo反爬虫/gi，/w /x只闻其声/i不见/v其人/r。/w /x既然/c要/v反爬虫/gi，/w /x肯定/v要/v理解/gi爬虫/gi的/ude1思维方式/gi，/w /x见招拆招/nz，/w /x不过/c遗憾/gi的/ude1是/vshi只要/c你/rr想/v爬/v没啥/nz爬/v不到/v的/ude1，/w /x比如/v控制/vn下/f爬取/nz频率/n，/w /x用/p无/v数/n个/q代理/gi小/a量/n多/a次/qv爬取/nz，/w /x反爬虫/gi只能/v说/v是/vshi尽量/d增加/v一/nz些/q爬取/nz的/ude1门槛/n吧/y，/w /x至少/d把/pba一/nz些/q练手/nz的/ude1小爬虫/nz（/w比如/v现在/t这个/rz小菜鸡/nz爬虫/gi）/w挡/v在/p外面/f，/w /x减少/v些/q负载/gi。/w二/nz./nz /x设计思路/gi（/w1/nz）/w一个/mq收集/v所需/nz网页/gi全站/n或者/c指定/v子/ng域名/gi的/ude1链接/gi队列/gi（/w2/nz）/w一个/mq存放/v将要/d访问/gi的/ude1url/gi队列/gi（/w跟/p上述/b有点/d重复/gi，/w /x用/p空间/n换/v时间/gi，/w /x提升/gi爬取/nz速度/n）/w（/w3/nz）/w一个/mq保存/gi已/d访问/gi过/uguourl/gi的/ude1数据结构/gi数据结构/gi有/vyou了/ule，/w /x接下来/vl就是/v算法/gi了/ule，/w /x一般/ad推荐/gi采取/v广度优先/gi的/ude1爬取/nz算法/gi，/w /x免得/v中/f了/ule反爬虫/gi的/ude1某些/rz循环/gi无限/b深度/gi的/ude1陷阱/gi。/w使用/gi了/ule jsoup /nz（/w一个/mq解析/gihtml/gi元素/gi的/ude1lib/nz）/w和/cc httpclient /nz(/nz网络/gi请求/gi包/v)/nz来/vf简化/gi代码实现/gi。/w三/nz./nz /x代码实现/gi上述/b三种/nz数据结构/gi：/w入队/vn等待/gi：/w访问/gi页面/gi：/w三/nz./nz /x总结/gi及/cc将来/t要/v实现/gi功能/gi以上/f贴出/v了/ule简易版/njava/gi爬虫/gi的/ude1核心/n实现/gi模块/gi，/w /x基本上/d拿/v起来/vf就/d能/v测试/gi。/w比如/v前言/gi所/usuo提到/v的/ude1控制/vn爬取/nz速度/n（/w调度/vn模块/gi）/w，/w /x使用/gi代理/giip/gi访问/gi（/w收集/v网络/gi代理/gi模块/gi）/w的/ude1实现/gi在/p后续/vn版本/n中会/j慢慢/d加上/v.../w