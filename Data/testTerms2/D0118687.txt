#接口测试/gi的/ude1必要性/n
api/gi（/wapplication programming interface/nz）/w是/vshi中/f最/d基本/a的/ude1一种/nz类型/gi。/wapi/gi就/d像/v建造/v大楼/n的/ude1砖块/n，/w程序/gi开发人员/n通过/p运用/v一定/b规则/gi将/d砖块/n放在/v一起来/nz构造程序/n，/w从/p本质/n上/f来说/uls，/wapi/gi测试/gi是/vshi用来/v验证/v组成/gi软件/gi的/ude1那些/rz单个/b方法/gi的/ude1正确性/gi，/w而/cc不是/c测试/gi整个/b系统/gi本身/rz。/w　　/nzapi/gi测试/gi又/d称为/v，/w接口测试/gi是/vshi的/ude1一种/nz。/w它/rr主要/b借助于/v技术/gi，/w通过/p模拟/gi上层/f应用/gi或者/c系统/gi上层/f调用/gi接口/gi的/ude1应用场景/gi，/w是/vshi对系统/l接口/gi功能/gi进行/vn测试/gi的/ude1一种/nz手段/n。/w在/p进行/vn接口测试/gi的/ude1过程/gi中/f，/w测试/gi工程师/gi并不需要/l了解/v被/pbei测试/gi系统/gi的/ude1所有/b代码/gi，/w而/cc主要/b通过/p分析/gi接口定义/l以及/cc模拟/gi接口/gi调用/gi的/ude1业务/gi应用场景/gi来/vf进行/vn的/ude1设计/gi，/w从而/c达到/v对/p被/pbei测试/gi系统/gi功能/gi进行/vn测试/gi的/ude1目的/gi。/w接口测试/gi的/ude1重点/n是/vshi要/v检查数据/n的/ude1交换/gi、/w传递/v和/cc控制/vn管理/gi过程/gi，/w以及/cc系统/gi间/f的/ude1相互/d逻辑/n依赖/v关系/gi等/udeng。/w　　/nz接口测试/gi一般/ad应用于/v多/a系统/gi间/f交互/gi开发/gi，/w或者/c拥有/v多个子/nz系统/gi的/ude1应用系统/gi开发/gi的/ude1测试/gi。/w接口测试/gi适用/vi于/p为/p其他/rzv系统/gi提供/v服务/gi的/ude1底层/n框架/gi系统/gi和/cc中心/gi服务/gi系统/gi，/w主要/b测试/gi这些/rz系统/gi对外部/nis提供/v的/ude1接口/gi，/w验证/v其/rz正确性/gi和/cc稳定性/n。/w接口测试/gi同样/d适用/vi于/p一个/mq上层/f系统/gi中的/v服务/gi层/gi接口/gi，/w越/d往/p上层/f，/w其/rz测试/gi的/ude1难度/n越大/d。/w　　/nz接口测试/gi实施/gi在/p多/a系统/gi多/a平台/gi的/ude1构架/n下/f，/w有着/v极为/d高效/b的/ude1成本/n收益/gi比/p。/w接口测试/gi天生/b为/p高/a复杂性/gi的/ude1平台/gi带来/v高效/b的/ude1缺陷/gi检测/gi和/cc质量/gi监督/gi能力/gi。/w平台/gi越/d复杂/a，/w系统/gi越/d庞大/a，/w接口测试/gi的/ude1效果/gi越/d明显/a。/w接口测试/gi的/ude1目的/gi　　/nz接口测试/gi是/vshi测试/gi接口/gi，/w尤其/d是/vshi那些/rz与/cc系统/gi相关联/l的/ude1外部/f接口/gi。/w接口测试/gi的/ude1核心/n战略/gi在于/v：/w以/p保证系统/n的/ude1正确/a和/cc稳定/an为/p核心/n，/w以/p持续集/nz成为/v手段/n，/w提高/v测试/gi效率/gi，/w提升/gi用户/gi体验/v，/w降低/v产品/gi研发/gi成本/n。/w　　/nz■/nz /x核心/n：/w保证系统/n的/ude1稳定/an　　/nz的/ude1目标/gi是/vshi保证系统/n的/ude1正确/a和/cc稳定/an，/w接口测试/gi作为/p软件质量/gi管理/gi的/ude1一/nz部分/n也/d保证系统/n正确/a和/cc稳定/an，/w更/d准确/a地/ude2说/v是/vshi保证系统/n服务端/nz的/ude1正确/a和/cc稳定/an。/w一个/mq系统/gi的/ude1服务端/nz越/d接近/v底层/n，/w对系统/l的/ude1影响/gi就/d越大/d，/w甚至/d有可能/nz牵一发而动全身/nz，/w服务端/nz的/ude1一个/mq缺陷/gi可能会/nz引起/v客户端/gi的/ude1几个/nz甚至/d十几/mq个/q缺陷/gi，/w更/d可怕/a的/ude1是/vshi服务端/nz的/ude1缺陷/gi有可能/nz引起/v系统/gi的/ude1崩溃/vi，/w这/rzv对/p整个/b系统/gi来说/uls，/w损失/n将/d是/vshi不可估量/vl的/ude1，/w因此/c服务端/nz接口/gi的/ude1质量/gi将/d直接影响/v到/v系统/gi的/ude1正确/a和/cc稳定/an。/w　　/nz■/nz /x目的/gi：/w提高/v测试/gi效率/gi，/w提升/gi用户/gi体验/v，/w降低/v产品/gi研发/gi成本/n　　/nz接口测试/gi要为/c代码/gi的/ude1编写/gi保驾护航/nz，/w增强/v开发人员/n和/cc测试人员/n的/ude1自信/gi，/w让/v隐含/v的/ude1提前/vd暴露/v出来/vf，/w让/v开发人员/n在/p第一时间/nz修复/gibug/gi，/w让/v功能/gi测试人员/n和/cc人员/gi在/p测试/gi的/ude1时候/n更加/d顺手/d，/w最大限度/nz得/ude3减少/v底层/nbug/gi的/ude1出现/v数量/n，/w让/v产品/gi研发/gi的/ude1流程/gi更加/d顺畅/a，/w要/v缩短/v产品/gi的/ude1研发/gi周期/n，/w最后/f在/p产品/gi上线/n以后/f，/w要/v让/v用户/gi用得/v更加/d便捷/a，/w要/v让/v用户/gi感觉/gi产品/gi服务/gi零缺陷/nz。/w   /x接口测试/gi的/ude1意义/n　　/nz接口测试/gi是/vshi单元测试/gi的/ude1一个子/nz集/q，/w但/c又/d不/d等同于/vi单元测试/gi。/w从/p测试/gi的/ude1角度/n来看/u，/w接口测试/gi的/ude1价/n在于/v其/rz测试/gi投入/v比/p单元测试/gi少/a，/w而且/c技术难度/n也/d比/p单元测试/gi小/a。/w一般来说/vl，/w接口测试/gi的/ude1粒度/gi要/v比/p单元测试/gi更/d粗/a，/w它/rr主要/b是/vshi基于/p子系统/gi或者/c子/ng模块/gi的/ude1接口/gi层面/n的/ude1测试/gi。/w因此/c，/w接口测试/gi需要/v测试/gi的/ude1接口/gi或者/c函数/gi的/ude1数量/n会/v远远/d小于/v单元测试/gi，/w与此同时/c，/w接口定义/l的/ude1稳定性/n会/v远远/d高于/v类/gi级别/n的/ude1函数/gi。/w所以/c，/w接口/gi测试用例/gi代码/gi的/ude1改动/vn量/n也/d远远/d小于/v单元测试/gi，/w代码/gi维护/gi成本/n会/v比/p单元测试/gi少/a很/d多/a，/w因而/c测试/gi的/ude1投入量/n会/v小/a很/d多/a。/w从/p另外/c一个/mq层面/n来看/u，/w借助于/v接口测试/gi，/w可以/v保证/v子系统/gi或/c子/ng模块/gi在/p各种/rz应用场景/gi下/f接口/gi调用/gi的/ude1正确性/gi，/w那么/c子系统/gi或/c子/ng模块/gi的/ude1产品质量/nz也/d可以/v得到/v充分/ad的/ude1保证/v。/w因此/c，/w接口测试/gi是/vshi一种/nz适度/a的/ude1技术/gi，/w准确/a说/v它/rr是/vshi一种/nz灰盒/nz测试/gi，/w投入产出/v是/vshi非常/d理想/n的/ude1。/w　　/nz总的/b来说/uls，/w接口测试/gi是/vshi保证/v高/a复杂性/gi系统/gi质量/gi的/ude1内在/b要求/n和/cc低成本/nz的/ude1经济/gi利益/n的/ude1驱动/gi作用/gi下/f的/ude1最佳/z解决方案/gi。/w主要/b体现/v在/p下面/f的/ude1三个/nz方面/n：/w　　/nz首先/d，/w接口测试/gi节省/v了/ule测试/gi成本/n，/w根据/p数据模型/gg推算/v，/w底层/n的/ude1一个/mqbug/gi能够/v引发/v上层/f8/nz个/q左右/fbug/gi，/w而且/c底层/n的/ude1bug/gi很容易/nz引起/v全网/n的/ude1死机/gi。/w相反/vi接口测试/gi能够/v提供/v系统/gi复杂度/gi上升/vi情况下/nz的/ude1低成本/nz高效率/nz的/ude1解决方案/gi。/w　　/nz其次/c，/w接口测试/gi不同于/c传统开发/gi的/ude1单元测试/gi，/w接口测试/gi是/vshi站/vi在/p用户/gi的/ude1角度/n对系统/l接口/gi进行/vn全面/ad高效/b持续/vd的/ude1检测/gi。/w　　/nz最后/f，/w接口测试/gi是/vshi自动化/gi并且/c持续集成/gi的/ude1，/w这/rzv也/d是/vshi为什么/ryv接口测试/gi能够/v低成本/nz高/a收益/gi的/ude1根源/n。/wuft/gi中的/vapi/gi测试/gi　　/nzuft/gi（/wunified functional testing/nz--自动化/nz功能测试/gi）/w中的/v service test/nz为/papi/gi级别/n中的/v测试/gi提供/v了/ule一种/nz直观/a简便/a的/ude1方法/gi。/whp service test/nz工具/gi箱窗/nz提供/vrest/gi服务/gi、/wweb/gi服务/gi、/wjms/nz和/cchttp/gi等/udeng功能测试/gi领域/gi的/ude1活动/gi集合/gi，/w通过/p导入/giwsdl/nz文件/gi或/c从/p资源库/nz中/f使用/gi服务/gi就/d可以/v为/p工具/gi箱窗/nz中/f添加/gi活动/gi，/w还/d可以/v利用/v内置/vn的/ude1活动/gi向导/gi创建/gi新的/a自定义/nz活动/gi。/whp service test/nz对于/p那些/rz非/bgui/nz应用程序/nz，/w可以/v随时/d通过/p工具/gi箱窗/nz中/f拖/v放到/v视图/gi上/f创建/gi一个/mq测试/gi，/w为/p快速/d获得/v测试/gi结果/n提供/v了/ule一种/nz无需/v编写/gi代码/gi的/ude1方法/gi，/w高级/a用户/gi可以/v利用/v事件处理/l程序/gi自定义/nz测试/gi行为/n，/w并/cc自定义/nz代码/gi模块/gi。/wsoa/gi测试/gi的/ude1重要性/n　　/nz接口/gi开发/gi的/ude1发展/gi促成/v了/ulesoa/gi（/wservice/gi-/nzoriented architecture/nz--面/nz向/p服务/gi的/ude1体系结构/gi）/w的/ude1发展/gi，/wsoa/gi通过/p允许/v强定义/nz的/ude1关系/gi和/cc依然/d灵活/a的/ude1特定/b实现/gi，/wit /nz系统/gi既/c可以/v利用/v现有/v系统/gi的/ude1功能/gi，/w又/d可以/v准备/v在/p以后/f做/v一/nz些/q改变/v来/vf满足/v它们/rr之间/f交互/gi的/ude1需要/v。/wsoa/gi的/ude1出现/v，/w接口/gi的/ude1可/v重用性/nz给/pit/gi省略/v去/vf了/ule大量/m的/ude1。/w就/d开发/gi体系结构/gi方面/n而言/uls，/wsoa/gi是/vshi将来/t的/ude1一个/mq发展趋势/l。/w　　/nzsoa/gi虽然/c可以/v使/v业务/gi更加/d灵活/a，/w但是/c如果/c没有/v正确/a实施/gi，/wsoa/gi也/d会/v造成/v业务/gi中断/gi。/w因此/csoa/gi自动化测试/gi是/vshi一个/mq充分利用/n产品/gi和/cc流程/gi来/vf减少/v应用程序/nz升级/vi或/c部署/gi新的/a服务/gi的/ude1风险/gi的/ude1测试方法/nz。/wsoa/gi自动化测试/gi核心/n是/vshi为/p预/d部署/gi系统/gi申请/v工作/gi负载/gi，/w同时/c测试/gi系统/gi性能/gi的/ude1一个/mq过程/gi。/w构建/gi一个/mq良好/a的/ude1性能测试/gi必须/d满足/v以下/f条件/n：/w　　/nz■/nz /x服务/gi响应速度/nz对/p目标/gi用户/gi是/vshi足够/v的/ude1；/w　　/nz■/nz /x服务器/gi响应/v是否/v正确/a；/w　　/nz■/nz /x服务/gi能/v处理/vn异常/gi和/cc非法/b；/w　　/nz■/nz /x在/p预期/gi和/cc非/b预期/gi的/ude1用户/gi负载/gi下/f，/w服务/gi要/v稳定/an；/w　　/nz如果/c满足/v这些/rz条件/n就/d可以/v设计/gi出/vf有效/gi的/ude1测试/gi。/w一个/mq有效/gi的/ude1自动化/gi测试过程/gi能够/v帮助/v您/rr做出/v更/d明智/a的/ude1发布/gi决策/gi，/w减少/v系统/gi停机/vi时间/gi，/w并且/c防止/gi可用性/gi问题/gi。/w