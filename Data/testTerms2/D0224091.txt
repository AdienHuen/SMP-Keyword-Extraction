#C++/gi设计模式/nz―/w―/w组合模式/gi
问题/gi描述/gi上/f图/gi，/w是/vshi一个/mq公司/nis的/ude1组织/gi结构图/gi，/w总部/nis下面/f有/vyou多/a个/q子公司/nis，/w同时/c总部/nis也/d有/vyou各个部门/l，/w子公司/nis下面/f有/vyou多/a个/q部门/gi。/w如果/c对/p这样/rzv的/ude1公司/nis开发/gi一个/mqoa系统/gi，/w作为/p程序员/gi的/ude1你/rr，/w如何/ryv设计/gi这个/rzoa系统/gi呢/y？/w先/d不说/c如何/ryv设计/gi实现/gi，/w接着/c往/p下/f看/v，/w看完/v了/ule下面/f的/ude1内容/gi，/w再/d回过头来/nz想/v怎么/ryv设计/gi这样/rzv的/ude1oa系统/gi。/w什么/ry是/vshi组合模式/gi？/w在/pgof/gi的/ude1《/w设计模式/nz:/w可/v复用/gi面向对象/gi软件/gi的/ude1基础/gi》/w一/nz书/gi中/f对/p组合模式/gi是/vshi这样/rzv说/v的/ude1：/w将/d对象/gi组合/gi成树形/nz结构/gi以/p表示/v“/w部分-整体/nz”/w的/ude1层次结构/gi。/w组合/gi（/wcomposite/nz）/w模式/gi使得/vi用户/gi对/p单个/b对象/gi和/cc组合/gi对象/gi的/ude1使用/gi具有/v一致性/gi。/w组合模式/gi（/wcomposite/nz）/w将/d小/a对象/gi组合/gi成树形/nz结构/gi，/w使/v用户/gi操作/gi组合/gi对象/gi如同/v操作/gi一个/mq单个/b对象/gi。/w组合/gi模式定义/l了/ule“部/nz分-整体/nz”/w的/ude1层次结构/gi，/w基本/a对象/gi可以/v被/pbei组合成/l更大/d的/ude1对象/gi，/w而且/c这种/r操作/gi是/vshi可/v重复/gi的/ude1，/w不断/d重复/gi下去/vf就/d可以/v得到/v一个/mq非常/d大/a的/ude1组合/gi对象/gi，/w但/c这些/rz组合/gi对象/gi与/cc基本/a对象/gi拥有/v相同/a的/ude1接口/gi，/w因而/c组合/gi是/vshi透明/a的/ude1，/w用法/gi完全一致/i。/w我们/rr这样/rzv来/vf简单/a的/ude1理解/gi组合模式/gi，/w组合模式/gi就是/v把/pba一/nz些/q现有/v的/ude1对象/gi或者/c元素/gi，/w经过/p组合/gi后/f组成/gi新的/a对象/gi，/w新的/a对象/gi提供/v内部/f方法/gi，/w可以/v让/v我们/rr很/d方便/a的/ude1完成/v这些/rz元素/gi或者/c内部/f对象/gi的/ude1访问/gi和/cc操作/gi。/w我们/rr也/d可以/v把/pba组合/gi对象/gi理解/gi成/v一个/mq容器/gi，/w容器/gi提供/v各种/rz访问/gi其/rz内部/f对象/gi或者/c元素/gi的/ude1api/gi，/w我们/rr只/d需要/v使用/gi这些/rz方法/gi就/d可以/v操作/gi它/rr了/ule。/wuml/gi类图/gicomponent/nz：/w为/p组合/gi中的/v对象/gi声明/gi接口/gi；/w在/p适当/a的/ude1情况下/nz，/w实现/gi所有/b类/gi共有/v接口/gi的/ude1缺省/nz行为/n；/w声明/gi一个/mq接口/gi用于/v访问/gi和/cc管理/gicomponent/nz的/ude1子/ng组件/gi。/wleaf/nz：/w在/p组合/gi中/f表示/v叶/ng节点/gi对象/gi，/w叶/ng节点/gi没有/v子/ng节点/gi；/w在/p组合/gi中/f定义/gi叶/ng节点/gi的/ude1行为/n。/wcomposite/nz：/w定义/gi有/vyou子/ng部件/n的/ude1那些/rz部件/n的/ude1行为/n；/w存储子/nz部件/n。/wclient/nz：/w通过/pcomponent/nz接口/gi操作/gi组合/gi部件/n的/ude1对象/gi。/w代码实现/gi实现/gi要点/ncomposite/nz的/ude1关键/n之一/rz在于/v一个/mq抽象类/gi，/w它/rr既/c可以/v代表/nntleaf/nz，/w又/d可以/v代表/nntcomposite/nz；/w所以/c在/p实际/n实现/gi时/qt，/w应该/v最大化/vcomponent/nz接口/gi，/wcomponent/nz类/gi应为/vleaf/nz和/cccomposite/nz类/gi尽可能/d多/a定义/gi一/nz些/q公共/b操作/gi。/wcomponent/nz类/gi通常/d为/p这些/rz操作/gi提供/v缺省/nz的/ude1实现/gi，/w而/ccleaf/nz和/cccomposite/nz子类/gm可以/v对/p它们/rr进行/vn重/a定义/gi；/wcomponent/nz是否/v应该/v实现/gi一个/mqcomponent/nz列表/vi，/w在/p上面/f的/ude1代码/gi中/f，/w我/rr是/vshi在/pcomposite/nz中/f维护/gi的/ude1列表/vi，/w由于/p在/pleaf/nz中/f，/w不/d可能/v存在/v子/ngcomposite/nz，/w所以/c在/pcomposite/nz中/f维护/gi了/ule一个/mqcomponent/nz列表/vi，/w这样/rzv就/d减少/v了/ule内存/gi的/ude1浪费/gi；/w内存/gi的/ude1释放/gi；/w由于/p存在/v树形/gi结构/gi，/w当/p父/ng节点/gi都/d被/pbei销毁/v时/qt，/w所有/b的/ude1子/ng节点/gi也/d必须/d被/pbei销毁/v，/w所以/c，/w我/rr是/vshi在/p析构函数/gi中/f对/p维护/gi的/ude1component/nz列表/vi进行/vn统一/vn销毁/v，/w这样/rzv就/d可以/v免去/v客户端/gi频繁/a销毁/v子/ng节点/gi的/ude1困扰/v；/w由于/p在/pcomponent/nz接口/gi提供/v了/ule最大化/v的/ude1接口定义/l，/w导致/gi一/nz些/q操作/gi对于/pleaf/nz节点/gi来说/uls并不/d适用/vi，/w比如/v：/wleaf/nz节点/gi并/cc不能/v进行/vnadd/nz和/ccremove/nz操作/gi，/w由于/pcomposite/nz模式/gi屏蔽/v了/ule部分/n与/cc整体/n的/ude1区别/gi，/w为了/p防止/gi客户/n对/pleaf/nz进行/vn非法/b的/ude1add/nz和/ccremove/nz操作/gi，/w所以/c，/w在/p实际/n开发/gi过程/gi中/f，/w进行/vnadd/nz和/ccremove/nz操作/gi时/qt，/w需要/v进行/vn对应/vi的/ude1判断/gi，/w判断/gi当前/t节点/gi是否/v为/pcomposite/nz。/w组合模式/gi的/ude1优点/gi将/d对象/gi组合/gi成树形/nz结构/gi以/p表示/v“/w部分-整体/nz”/w的/ude1层次结构/gi。/w组合模式/gi使得/vi用户/gi对/p单个/b对象/gi和/cc组合/gi对象/gi的/ude1使用/gi具有/v一致性/gi。/w使用场景/gi你/rr想/v表示/v对象/gi的/ude1部分-整体/nz层次结构/gi；/w希望/v用户/gi忽略/v组合/gi对象/gi与/cc单个/b对象/gi的/ude1不同/a，/w用户/gi将/d统一/vn地/ude2使用/gi组合/gi结构/gi中的/v所有/b对象/gi。/w引用/gi大话/n设计模式/nz的/ude1片段/n：/w“/w当/p发现/v需求/gi中/f是/vshi体现/v部分/n与/cc整体/n层次结构/gi时/qt，/w以及/cc你/rr希望/v用户/gi可以/v忽略/v组合/gi对象/gi与/cc单个/b对象/gi的/ude1不同/a，/w统一/vn地/ude2使用/gi组合/gi结构/gi中的/v所有/b对象/gi时/qt，/w就/d应该/v考虑/v组合模式/gi了/ule。/w”/w总结/gi通过/p上面/f的/ude1简单/a讲解/gi，/w我们/rr知道/v了/ule，/w组合模式/gi意图/gi是/vshi通过/p整体/n与/cc局部/n之间/f的/ude1关系/gi，/w通过/p树形/gi结构/gi的/ude1形式/gi进行/vn组织/gi复杂/a对象/gi，/w屏蔽/v对象/gi内部/f的/ude1细节/gi，/w对外/vn展现/v统一/vn的/ude1方式/n来/vf操作/gi对象/gi，/w是/vshi我们/rr处理/vn更/d复杂/a对象/gi的/ude1一个/mq手段/n和/cc方式/n。/w现在/t再/d结合/v上面/f的/ude1代码/gi，/w想想/v文章/gi开头/n提出/v的/ude1公司/nisoa系统/gi如何/ryv进行/vn设计/gi。/w纪念/v雷哥/nr的/ude1离职/vi。/w