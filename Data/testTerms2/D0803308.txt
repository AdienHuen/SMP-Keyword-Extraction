#详解/v。/w。/w设计模式/nz5/nz―/w―/wDAO/nz。/w。/wstudying/nz
设计模式/nz5/nz―/w―/wdao/gi★/nz /x场景/gi和/cc问题/gi在/pjava/gi程序/gi中/f，/w经常/d需要/v把/pba数据/gi持久化/nz，/w也/d需要/v获取/gi持久化/nz的/ude1数据/gi，/w但是/c在/p进行/vn数据/gi持久化/nz的/ude1过程/gi中/f面临/v诸/rz多/a问题/gi（/w如/v：/w数据源/gi不同/a、/w存储/gi类型/gi不同/a、/w供应商/nnt不同/a、/w访问/gi方式/n不同/a等等/udeng）/w，/w请问/v如何/ryv能/v以/p统一/vn的/ude1接口/gi进行/vn数据/gi持久化/nz的/ude1操作/gi？/w例如/v：/w★/nz dao/nz的/ude1理解/gi1/nz、/wdao/gi其实/d是/vshi利用/v组合/gi工厂模式/gi来/vf解决问题/v的/ude1，/w并/cc没有/v带来/v新的/a功能/gi，/w所以/c学/v的/ude1其实/d就是/v个/q思路/gi。/w2/nz、/wdao/gi理论上/nz是/vshi没有/v层数/n限制/vn的/ude1。/w3/nz、/wdao/gi的/ude1各/rz层/gi理论上/nz是/vshi没有/v先后/d的/ude1。/w★/nz dao/nz模式/gi的/ude1本质/n一层/nz屏蔽/v一种/nz变化/gi图片/gi显示/gi路径/gi：/w★/nz /x代码实现/gi其他/rzv代码/gi超链接/gi：/w