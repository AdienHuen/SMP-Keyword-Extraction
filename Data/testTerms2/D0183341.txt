#MongoDB/gi学习/gi整理/gi（/w二）--特点/nz及/cc概念/gi介绍/gi
  /x本文/r是/vshi学习/gimongdb/nz：/wthe definitive guide/nz(/nzmongodb/gi权威/n指南/gi)/nz一书/nz做/v的/ude1浅显/a的/ude1整理/gi，/w请/v大神/nz们/k多多指教/nz。/w丰富/a的/ude1数据模型/gg mongodb/nz是/vshi面向文档/gi的/ude1非关系型数据库/gi，/w区别于/v关系型数据库/gi，/w将/d关系型数据库/gi的/ude1行/ng的/ude1概念/gi转变/v为/p文档/gi。/w面向文档/gi的/ude1方式/n可以/v将/d文档/gi或/c数据/gi内嵌/v到/v单个/b文档/gi中/f，/w这样/rzv一条/nz记录/gi就/d可以/v表示/v非常复杂/b的/ude1数据结构/gi关系/gi。/w同时/c符合/v面向对象/gi的/ude1设计思路/gi。/w mongodb/nz没有/v模式/gi，/w文档/gi的/ude1键/n不会/v事先/d定义/gi也/d不会/v固定/a不变/nz。/w由于/p不用/d将/d所有/b的/ude1数据/gi都/d放到/v一种/nz固定/a的/ude1模式/gi里/f，/w所以/c应用层/gi可以/v非常容易/l的/ude1变更/gi数据模型/gg，/w处理/vn新增/v或/c丢失/v的/ude1键/n。/w没有/v模式/gi的/ude1变更/gi需求/gi，/w也/d减少/v了/ule大量/m数据/gi迁移/gi的/ude1需求/gi。/w容易/ad扩展/gi /x数据/gi的/ude1指数级/nz增长/gi，/w必定会/l使/v开发者/gi面临/v一个/mq非常/d困难/an的/ude1选择/gi，/w如何/ryv扩展/gi数据库/gi？/w升级/vior/nz扩展/gi，/w升级/vi是/vshi最/d省力/a的/ude1方法/gi，/w但/c大型/b机/ng一般/ad都/d很/d昂贵/a且/c达到/v物理/n极限/n后/f的/ude1很难/d买到/v更好/d的/ude1机器/gi。/w这样/rzv做/v即/v不划算/l也/d不/d现实/n。/w而/cc扩展/gi就/d不同/a了/ule。/w mongodb/nz面向文档/gi的/ude1特点/n，/w可以/v使/v其/rz自动/d在/p多动/nz服务器之间/n分割/gi数据/gi，/w平衡/a集群/gi数据/gi和/cc负载/gi，/w自动/d重排/v文档/gi。/w当/p需要/v更大/d的/ude1容量/gi时/qt，/w只需/v在/p集群/gi中/f增加/v新机器/nz，/w数据/gi的/ude1扩展/gi交给/v数据库/gi来/vf完成/v。/w开发者/gi也/d可以/v专注/vi于/p如何/ryv编写/gi应用/gi，/w而/cc不是/c考虑/v如何/ryv扩展/gi数据/gi。/w丰富/a的/ude1功能/gi mongodb/nz支持/v通用/gi辅助/vn索引/gi、/w能/v进行/vn多/a种/q快速/d查询/gi、/w提供/v唯一/b的/ude1，/w复合/vn的/ude1和/cc地理/n空间/n的/ude1索引/gi能力/gi。/w /x开发人员/n不必/d使用/gi存储过程/gi，/w可以/v在/p服务端/nz直接存取/ljavascript/gi函数/gi和/cc值/n。/w /x支持/vmapreduce/gi和/cc其它/rz聚合/gi工具/gi /x固定/a大小/n的/ude1集合/gi对/p某些/rz类型/gi的/ude1数据/gi非常/d有/vyou用/p，/w如/v日志/gi。/w /x支持/v用/p一种/nz容易/ad使用/gi的/ude1协议/gi来/vf存储/gi大/a文件/gi和/cc元数据/gi。/w /x注意/v:/wmongodb/gi不/d支持/v联接/v(/nzjoin/nz)/nz和/cc复杂/a的/ude1多/a行事务/nz。/w简便/a的/ude1管理/gi /x除了/p启动/gi数据库服务器/gi外/f，/w几乎/d没有/v什么/ry性格/n的/ude1管理/gi操作/gi。/wmongodb/gi尽量/d让/v服务器/gi自治/vn来/vf简化/gi数据库/gi的/ude1管理/gi。/w主/ag服务器/gi一旦/d挂掉/nz，/w会/v自动/d切换/vn到/v备用/vn服务器/gi，/w并/cc设置/gi备用/vn服务器/gi为/p活跃/a服务器/gi。/w分布式/gi环境/n下/f，/w集群/gi只/d需要/v知道/v有/vyou新增/v的/ude1节点/gi就/d会/v自动/d集成/vn和/cc配置/gi新/a节点/gi。/w性能/gi mongodb/nz尽量/d将/d服务器端/gi处理/vn逻辑/n交给/v客户端/gi，/w这样/rzv的/ude1设计/gi获得/v了/ule非常/d好/a的/ude1性能/gi。/wmongodb/gi使用/gimongodb/gi传输/gi协议/gi作为/p与/cc服务器/gi交互/gi的/ude1主要/b方式/n，/w对/p文档/gi进行/vn动态/gi填充/v，/w预/d分配/gi数据文件/nz，/w用/p空间/n换取/v性能/gi的/ude1稳定/an。/w默认/v的/ude1存储引擎/gi使用/gi了/ule内存/gi映射/gi文件/gi，/w将/d内存/gi管理工作/n交给/v操作系统/gi处理/vn。/w动态/gi查询/gi优化器/nz会/v记住/v执行/v查询/gi最/d高效/b的/ude1方式/n。/w基本概念/nz /x1/nz、/w文档/gi是/vshimongodb/gi的/ude1核心/n概念/gi，/w类似于/v关系型数据库/gi中的/v行/ng记录/gi，/w是/vshi组成/gi集合/gi的/ude1基本/a数据/gi单元/n，/w如/v：/w  /x这/rzv是/vshi一个/mq简单/a的/ude1文档/gi，/w只有/c一个键/nzgreeting/nz,/nz其/rz对应/vi的/ude1值/n为/phello world/nz。/w /x一个/mq文档/gi可以/v有/vyou多/a个/q键值/n对/p，/w且/c位置/gi没有/v固定/a要求/n。/w /x文档/gi中的/v值/n可以/v是/vshi其它/rz数据类型/gi,/nz可以/v有/vyou整数据/nz，/w有数/a组/n，/w有/vyou集合/gi，/w如/v  /x键/n不能/v含有/v表示/v结尾/n的/ude1\/nz0/nz字符/gi。/w /x以/p_/nz(/nz下划线/n)/nz开头/n的/ude1键/n是/vshi保留/v的/ude1。/w /x$/nz有/vyou特别/d的/ude1意义/n，/w在/p特定/b的/ude1环境/n下/f才/d使用/gi。/w /x不能/v有/vyou重复/gi的/ude1键/n，/w键/n区分/v大小写/gi。/w /x每/rz一个/mq文档/gi都/d有/vyou一个/mq唯一/b的/ude1特殊/a的/ude1_/nzid/nz键/n，/w该/rz键/n由/p12/nz个/q字节/gi组成/gi，/w每个/r字节/gi由/p2/nz个字符/n组成/gi，/w共/d24/nz个字符/n。/w2/nz、/w集合/gi类似于/v关系型数据库/gi中的/v表/n，/w但/c它/rr是/vshi无/v模式/gi的/ude1，/w这/rzv就/d意味着/v集合/gi中的/v文档/gi可以/v是/vshi各种各样/bl的/ude1，/w如/v：/w    /x无/v模式/gi并不/d意味着/v需要/v把/pba所有/b的/ude1数据/gi全/a放在/v一个/mq集合/gi里/f，/w这样/rzv做/v在/p具体/a的/ude1开发环境/gi中/f并/cc不是/c最合适/a的/ude1，/w原因/n有/vyou以下几点/l：/w a/nz、/w把/pba所有/b的/ude1文档/gi放在/v一个/mq集合/gi里/f，/w开发者/gi要么/c需要/v每次/r查询/gi只/d返回/v需要/v的/ude1文档/gi。/w要么/c让/v查询/gi应用程序/nz处理/vn所有/b不同/a类型/gi的/ude1文档/gi，/w这/rzv是/vshi一个/mq非常/d烦人/a的/ude1过程/gi，/w且/c在/p查询/gi速度/n的/ude1上/f也/d不划算/l。/w b/nz、/w同类型/nz的/ude1文档/gi放在/v一起/s，/w数据/gi会/v更加/d集中/v，/w且/c索引/gi会/v更加/d有效/gi。/w集合/gi的/ude1命名/v不/d可以/v是/vshi空/ng字符串/gi，/w不/d可以/v带有/v\/nz0/nz，/w不能/v以/p系统/gi集合/gi保留/v前缀/nsystem/nz开头/n，/w不能/v含有/v保留/v字符/gi$/nz /x组织/gi集合/gi名/q的/ude1一种/nz通用/gi方式/n是/vshi用/p./nz字符/gi分开/vi，/w按/p命名/v空间/n划分/v的/ude1子集合/nz，/w如/vblog/nz./nzauthor    blog/nz./nzcontent/nz3/nz、/w数据库/gi是/vshi由/p多/a个/q集合/gi组成/gi的/ude1，/w一个/mqmongodb/gi实例/gi可以/v承载/v多/a个/q数据库/gi，/w各/rz数据库/gi之间/f完全/ad独立/a。/w /x数据库/gi的/ude1命名/v不/d可以/v是/vshi空/ng字符串/gi，/w不/d可以/v包含/v特殊字符/gi（/w’/w‘/w /x空格/n、/w./nz /x$/nz /x\/nz  /x//nz  /x\/nz0/nz）/w,/nz全部/m采用/v小写/n，/w不/d超过/v64/nz字节/gi。/w /x有/vyou一/nz些/q数据库/gi是/vshi保留/v的/ude1，/w可以/v直接/ad访问/gi。/w如/v：/w admin/nz:/w管理/gi用户/gi和/cc用户/gi权限/gi。/w local/nz:/w存储/gi本地/gi单台/nz数据库/gi上/f的/ude1任意/d集合/gi，/w不会/v被/pbei复制/gi。/w config/nz:/w保存/gi内部/f分片/gi信息/gi。/w /x数据库/gi加上/v集合/gi名/q就是/v完整/a的/ude1命令/gi空间/n，/w长度/gi不/d可以/v超过/v121/nz个/q字节/gi4./nzmongodb/gi默认/v监听/gi端口/gi是/vshi27017/nz,/nz还/d会/v启动/gi一个/mqhttp/gi服务器/gi，/w监听/gi28017/nz端口/gi。/w5./nz自带/njavascript shell/nz，/w可以/v非常/d方便/a的/ude1管理/gimongodb/gi数据/gi实例/gi。/wshell/gi在/p启动/gi后/f自动/d连接/gimongodb/gi服务器/gi，/w所以/c确保/v使用/gishell/gi前/f启动/gimongodb/gi服务器/gi。/w