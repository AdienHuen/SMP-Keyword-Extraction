#重学/njava/gi23/nz种/q设计模式/nz（/w12/nz）/w代理模式/gi
跟着/v《/w软件/gi秘笈---设计/nz模式/gi那/rzv点/gi事/n》/w学习/gi定义/gi：/w代理模式/gi（/wproxy pattern/nz）/w是/vshi软件设计/nz模式/gi中/f一/nz项/q基本/a技巧/gi，/w在/p代理模式/gi中/f，/w有/vyou两/nz个/q对象/gi参与/gi处理/vn同一/b请求/gi，/w接收/gi的/ude1请求/gi由/p代理/gi对象/gi委托/vn给/p真实/a对象/gi处理/vn，/w代理/gi对象/gi控制/vn请求/gi的/ude1访问/gi，/w它/rr在/p客户端/gi应用程序/nz与/cc真实/a目标/gi对象/gi之间/f起到/v了/ule一个/mq中介/gi桥梁/n的/ude1作用/gi。/w代理模式/gi使用/gi对象/gi聚合/gi代替/v继承/gi，/w有效/gi的/ude1降低/v了/ule软件/gi模块/gi之间/f的/ude1耦合度/gp。/w角色/gi：/w（/w1/nz）/w抽象/gi角色/gi：/w声明/gi真实/a对象/gi和/cc代理/gi对象/gi共同/d接口/gi（/w2/nz）/w真实/a角色/gi：/w真正/d处理/vn请求/gi的/ude1目标/gi对象/gi（/w3/nz）/w代理/gi角色/gi：/w代理/gi对象/gi角色/gi内部/f包含/v有/vyou真实/a对象/gi的/ude1引用/gi，/w从而/c代理/gi对象/gi可以/v将/d请求/gi转给/v真实/a对象/gi处理/vn，/w同时/c，/w代理/gi对象/gi在/p执行/v真实/a对象/gi操作/gi的/ude1前后/f还/d可以/v添加/gi附加/vn操作/gi。/w类图/gi：/w实例/gi：/w一个/mq红酒厂/nz和/cc代理商/nnd的/ude1例子/gi，/w来自/v《/w软件/gi秘笈-设计/nz模式/gi那些/rz事/n》/w先/d来看/u一/nz下/f直接/ad买/v红酒/nf运行/gi结果/n：/w现在/t创建/gi代理商/nnd调用/gi代理商/nnd：/w输出/gi结果/n是/vshi：/w分析/gi：/w代理模式/gi远远/d没有/v这么/rz简单/a，/w还有/v动态代理/gi和/cc面向/v切面/gi编程/gi（/waop/gi）/w这个/rz后面/f我/rr单独/d总结/gi设计原则/gi：/w1/nz：/w延迟/v加载/gi，/w提高/v系统/gi效率/gi2/nz：/w单一职责原则/gi使用/gi场合/n：/w（/w1/nz）/w远程/gi代理/gi（/wremoteproxy/nz）/w为/p一个/mq对象/gi在/p不同/a的/ude1地址/gi空间/n提供/v局部/n代理/gi。/w（/w2/nz）/w虚拟/gi代理/gi（/wvirtualproxy/nz）/w，/w若/c一个/mq对象/gi的/ude1创建/gi非常/d耗时/vi。/w（/w3/nz）/w保护/gi代理/gi（/wprotectionproxy/nz）/w控制/vn对/p原始/a对象/gi的/ude1访问/gi。/w一句话/l总结/gi：/wjava sdk/nz中的/v原型模式/gi：/wjava/gi./nzlang/nz./nzreflect/nz./nzproxy/gi参考资料/nz：/w《/w软件/gi秘笈---设计/nz模式/gi那/rzv点/gi事/n》/w