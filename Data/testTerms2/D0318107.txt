#mysql/gi锁/v研究/gi系列/n一/nz（/w锁/v的/ude1基本概念/nz）/w
写/v在/p前面/f这/rzv是/vshi我/rr读/v别人/rr博客/gi的/ude1文章/gi也/d是/vshimysql/gi高性能/gi一书/nz的/ude1关于/p锁/v的/ude1章节/n，/w读/v的/ude1时候/n有/vyou很/d多/a概念/gi理解/gi起来/vf确实/ad有点/d难/a，/w所以/c我/rr在/p这里/rzs再/d总结/gi一/nz下/f，/w关于/p一/nz些/q概念/gi或/c例子/gi我/rr直接/ad就/d转载/v别人/rr的/ude1内容/gi，/w自己/rr再/d写下/v感悟/gi。/w有些/rz概念/gi不/d只是/d读一遍/nz就/d全能/n理解/gi透/v了/ule，/w需要/v你/rr自己/rr亲自/d试验/vn！/w另外/c，/w我/rr发现/v有时候/d别人/rr跟/p你/rr说/v一/nz些/q比较/gi深/a的/ude1技术/gi的/ude1时候/n会/v觉得/v他/rr很/d牛/n，/w其实/d自己/rr去/vf研究/gi一番/mq发现/v也/d就是/v那回事/l。/w而且/c别人/rr说/v的/ude1也/d不是/c完全/ad对/p。/w内容/gi开始/v：/w锁/v的/ude1基本/a概念锁/nz是/vshi计算机/gi协调/gi多/a个/q进程/gi或/c线程/gi并发访问/gi某/rz一/nz资源/gi的/ude1机制/gi。/w在/p数据库/gi中/f，/w除/p传统/n的/ude1计算/gi资源/gi（/w如/vcpu/gi、/wram/nz、/wi/nz//nzo/nz等/udeng）/w的/ude1争用/nz以外/f，/w数据/gi也/d是/vshi一种/nz供许/nz多用户/n共享/gi的/ude1资源/gi。/w如何/ryv保证数据/n并发访问/gi的/ude1一致性/gi、/w有效性/gi是/vshi所有/b数据库/gi必须/d解决/v的/ude1一个/mq问题/gi，/w锁/v冲突/gi也/d是/vshi影响/gi数据库/gi并发访问/gi性能/gi的/ude1一个/mq重要/a因素/gi。/w从/p这个/rz角度/n来说/uls，/w锁/v对/p数据库/gi而言/uls显得/v尤其/d重要/a，/w也/d更加/d复杂/a。/w本章/r我们/rr着重/vd讨论/gimysql/gi锁/v机制/gi的/ude1特点/n，/w常见/a的/ude1锁/v问题/gi，/w以及/cc解决/vmysql/gi锁/v问题/gi的/ude1一些/m方法/gi或/c建议/gi。/w mysql/nz锁/v概述/gi /x相对/d其他/rzv数据库/gi而言/uls，/wmysql/gi的/ude1锁/v机制/gi比较简单/l，/w其/rz最/d显著/ad的/ude1特点/n是/vshi不同/a的/ude1存储引擎/gi支持/v不同/a的/ude1锁/v机制/gi。/w比如/v，/wmyisam/gi和/ccmemory/gi存储引擎/gi采用/v的/ude1是/vshi表级/nz锁/v（/wtable/nz-/nzlevel locking/nz）/w；/wbdb/nz存储引擎/gi采用/v的/ude1是/vshi页面/gi锁/v（/wpage/nz-/nzlevel locking/nz）/w，/w但/c也/d支持/v表级/nz锁/v；/winnodb/gi存储引擎/gi既/c支持/v行级/nz锁/v（/wrow/nz-/nzlevel locking/nz）/w，/w也/d支持/v表级/nz锁/v，/w但/c默认/v情况下/nz是/vshi采用/v行级/nz锁/v。/w mysql/nz这/rzv3/nz种/q锁/v的/ude1特性/gi可/v大致/d归纳如下/i。/w /x开销/n、/w加锁/gi速度/n、/w死锁/gi、/w粒度/gi、/w并发/gi性能/gi l         /nz表级/nz锁/v：/w开销/n小/a，/w加锁/gi快/a；/w不会/v出现/v死锁/gi；/w锁定/v粒度/gi大/a，/w发生/v锁/v冲突/gi的/ude1概率/gi最高/a,/nz并/cc发度/nz最低/a。/w l         /nz行级/nz锁/v：/w开销/n大/a，/w加锁/gi慢/a；/w会/v出现/v死锁/gi；/w锁定/v粒度/gi最小/a，/w发生/v锁/v冲突/gi的/ude1概率/gi最低/a,/nz并发/gi度/qv也/d最高/a。/w l         /nz页面/gi锁/v：/w开销/n和/cc加锁/gi时间/gi界/n于/p表锁/nz和/cc行锁/nz之间/f；/w会/v出现/v死锁/gi；/w锁定/v粒度/gi界/n于/p表锁/nz和/cc行锁/nz之间/f，/w并/cc发度/nz一般/ad。/w /x从/p上述/b特点/n可见/c，/w很难/d笼统/a地/ude2说/v哪种/ry锁/v更好/d，/w只能/v就/d具体/a应用/gi的/ude1特点/n来说/uls哪种/ry锁/v更/d合适/a！/w仅/d从/p锁/v的/ude1角度/n来说/uls：/w表级/nz锁/v更/d适合于/v以/p查询/gi为主/vi，/w只有/c少量/mq按/p索引/gi条件/n更新/gi数据/gi的/ude1应用/gi，/w如/vweb应用/gi；/w而/cc行级/nz锁/v则/d更/d适合于/v有/vyou大量/m按/p索引/gi条件/n并发/gi更新/gi少量/mq不同/a数据/gi，/w同时/c又/d有/vyou并发/gi查询/gi的/ude1应用/gi，/w如一/r些/q在线/vn事务处理/nz（/woltp/gi）/w系统/gi。/w这一点/nz在/p本书/gi的/ude1“/w开发/gi篇”/nz介绍/gi表/n类型/gi的/ude1选择/gi时/qt，/w也/d曾/d提到/v过/uguo。/w下面/f几/d节/q我们/rr重点/n介绍/gimysql/gi表锁/nz和/cc innodb/nz行锁/nz的/ude1问题/gi，/w由于/pbdb/nz已经/d被/pbeiinnodb/gi取代/v，/w即将/d成为/v历史/n，/w在/p此/rzs就/d不/d做/v进一步/d的/ude1讨论/gi了/ule。/w感悟/gi通常/d我们/rr理解/giinndb/nz和/ccmyisam/gi引擎/n的/ude1概念/gi，/w认为/vinndb/nz适合/v高并发/gi和/ccr/nz//nzw/nz比例/n较小/d的/ude1也/d就是/v写/v为主/vi的/ude1表/n，/wmyisam/gi适合/vr/nz//nzw/nz比例/n教/v大读/nz为主/vi的/ude1表/n。/w为什么/ryv呢/y？/w其实/d就是/v因为/c他们/rr的/ude1锁/v机制/gi导致/gi。/w具体/a的/ude1我们/rr后面/f再/d介绍/gi