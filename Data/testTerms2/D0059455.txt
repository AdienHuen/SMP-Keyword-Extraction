#网站/gi分布式/gi架构/gi的/ude1演进/vn
来源/gi：/w知乎/nz首先/d推荐/gi4/nz本书/gi大型/b分布式/gi网站/gi架构设计/nz与/cc实践/gi大型网站/gi技术/gi架构/gi：/w核心/n原理/gi与/cc案例/gi分析/gi大型网站/gi系统/gi与/ccjava/gi中间件/n实践/gi分布式/gijava/gi应用/gi：/w基础/gi与/cc实践貌/nz都/d是/vshi4/nz位/q阿里人/nz写/v的/ude1，/w一本一本/nz的/ude1看吧/nz，/w绝对/d会/v增强/v你/rr的/ude1内功/gi。/w下面/f是/vshi本人/rr的/ude1一个/mq简要/ad小结/n，/w供参考/l。/w分布式/gi架构/gi的/ude1演进/vn系统架构/gi演化/gi历程-初始/nz阶段/gi架构/gi初始/b阶段/gi /x的/ude1小型/b系统/gi /x应用程序/nz、/w数据库/gi、/w文件/gi等/udeng所有/b的/ude1资源/gi都/d在/p一台/nz服务器/gi上/f通俗/a称为/vlamp/nz特征/gi：/w应用程序/nz、/w数据库/gi、/w文件/gi等/udeng所有/b的/ude1资源/gi都/d在/p一台/nz服务器/gi上/f。/w描述/gi：/w通常/d服务器/gi操作系统/gi使用/gilinux/gi，/w应用程序/nz使用/giphp/gi开发/gi，/w然后/c部署/gi在/papache/gi上/f，/w数据库/gi使用/gimysql/gi，/w汇集/v各种/rz免费/vd开源/gi软件/gi以及/cc一/nz台/q廉价/a服务器/gi就/d可以/v开始/v系统/gi的/ude1发展/gi之路/r了/ule。/w系统架构/gi演化/gi历程-应用/nz服务/gi和/cc数据服务/n分离/vi好景不长/vl，/w发现/v随着/p系统/gi访问量/nz的/ude1再度/d增加/v，/wwebserver/gi机器/gi的/ude1压力/n在/p高峰期/n会/v上升/vi到/v比较/gi高/a，/w这个/rz时候/n开始/v考虑/v增加/v一台/nzwebserver/gi特征/gi：/w应用程序/nz、/w数据库/gi、/w文件/gi分别/d部署/gi在/p独立/a的/ude1资源/gi上/f。/w描述/gi：/w数据量/n增加/v，/w单/b台/q服务器/gi性能/gi及/cc存储空间/gi不足/an，/w需要/v将/d应用/gi和/cc数据/gi分离/vi，/w并发/gi处理/vn能力/gi和/cc数据/gi存储空间/gi得到/v了/ule很大/d改善/v。/w系统架构/gi演化/gi历程-使用/nz缓存/gi改善/v性能/gi特征/gi：/w数据库/gi中/f访问/gi较/d集中/v的/ude1一小/d部分/n数据存储/gi在/p缓存/gi服务器/gi中/f，/w减少/v数据库/gi的/ude1访问/gi次数/gi，/w降低/v数据库/gi的/ude1访问/gi压力/n。/w描述/gi：/w系统/gi访问/gi特点/n遵循/gi二八/nz定律/n，/w即/v80%/nz的/ude1业务/gi访问/gi集中/v在/p20%/nz的/ude1数据/gi上/f。/w缓存/gi分为/v本地/gi缓存/gi和/cc远程/gi分布式/gi缓存/gi，/w本地/gi缓存/gi访问速度/n更快/d但/c缓存数据/n量/n有限/a，/w同时/c存在/v与/cc应用程序/nz争/v用/p内存/gi的/ude1情况/n。/w系统架构/gi演化/gi历程-使用/nz应用服务器/gi集群/gi在/p做完/v分库/gi分表/n这些/rz工作/gi后/f，/w数据库/gi上/f的/ude1压力/n已经/d降到/v比较/gi低/a了/ule，/w又/d开始/v过/uguo着/uzhe每天/r看着/v访问量/nz暴增/nz的/ude1幸福生活/nz了/ule，/w突然/ad有一天/d，/w发现/v系统/gi的/ude1访问/gi又/d开始/v有/vyou变慢/vi的/ude1趋势/gi了/ule，/w这个/rz时候/n首先/d查看/gi数据库/gi，/w压力/n一切正常/i，/w之后/f查看/giwebserver/gi，/w发现/vapache/gi阻塞/vn了/ule很/d多/a的/ude1请求/gi，/w而/cc应用服务器/gi对/p每个/r请求/gi也/d是/vshi比较/gi快/a的/ude1，/w看来/v /x是/vshi请求/gi数/n太高/d导致/gi需要/v排队/gi等待/gi，/w响应速度/nz变慢/vi特征/gi：/w多/a台/q服务器/gi通过/p负载均衡/gi同时/c向/p外部/f提供/v服务/gi，/w解决/v单台/nz服务器/gi处理/vn能力/gi和/cc存储空间/gi上限/n的/ude1问题/gi。/w描述/gi：/w使用/gi集群/gi是/vshi系统/gi解决/v高并发/gi、/w海量数据/gi问题/gi的/ude1常用/a手段/n。/w通过/p向/p集群/gi中/f追加/v资源/gi，/w提升/gi系统/gi的/ude1并发/gi处理/vn能力/gi，/w使得/vi服务器/gi的/ude1负载/gi压力/n不再/d成为/v整个/b系统/gi的/ude1瓶颈/gi。/w系统架构/gi演化/gi历程-数据库/nz读写/gi分离/vi享受/v了/ule一段时间/nz的/ude1系统/gi访问量/nz高速/b增长/gi的/ude1幸福/a后/f，/w发现/v系统/gi又/d开始/v变慢/vi了/ule，/w这次/r又是/c什么/ry状况/n呢/y，/w经过/p查找/gi，/w发现/v数据库/gi写入/gi、/w更新/gi的/ude1这些/rz操作/gi的/ude1部分/n数据库/gi连接/gi的/ude1资源/gi竞争/vn非常/d激烈/a，/w导致/gi了/ule系统/gi变慢/vi特征/gi：/w多/a台/q服务器/gi通过/p负载均衡/gi同时/c向/p外部/f提供/v服务/gi，/w解决/v单台/nz服务器/gi处理/vn能力/gi和/cc存储空间/gi上限/n的/ude1问题/gi。/w描述/gi：/w使用/gi集群/gi是/vshi系统/gi解决/v高并发/gi、/w海量数据/gi问题/gi的/ude1常用/a手段/n。/w通过/p向/p集群/gi中/f追加/v资源/gi，/w使得/vi服务器/gi的/ude1负载/gi压力/n不在/v成为/v整个/b系统/gi的/ude1瓶颈/gi。/w系统架构/gi演化/gi历程-反向/nz代理/gi和/cccdn/gi加速/gi特征/gi：/w采用/vcdn/gi和/cc反向代理/gi加快/v系统/gi的/ude1 /x访问速度/n。/w描述/gi：/w为了/p应付/v复杂/a的/ude1网络/gi环境/n和/cc不同/a地区/n用户/gi的/ude1访问/gi，/w通过/pcdn/gi和/cc反向代理/gi加快/v用户/gi访问/gi的/ude1速度/n，/w同时/c减轻/v后端/f服务器/gi的/ude1负载/gi压力/n。/wcdn/gi与/cc反向代理/gi的/ude1基本原理/nz都/d是/vshi缓存/gi。/w系统架构/gi演化/gi历程-分布式/nz文件系统/gi和/cc分布式数据库/gi随着/p系统/gi的/ude1不断/d运行/gi，/w数据量/n开始/v大幅度/d增长/gi，/w这个/rz时候/n发现/v分库/gi后/f查询/gi仍然/d会/v有些/rz慢/a，/w于是/cc按照/p分库/gi的/ude1思想/gi开始/v做/v分表/n的/ude1工作/gi特征/gi：/w数据库/gi采用/v分布式数据库/gi，/w文件系统/gi采用/v分布式文件系统/nz。/w描述/gi：/w任何/rz强大/a的/ude1单一/gi服务器/gi都/d满足/v不了/v大型/b系统/gi持续增长/v的/ude1业务/gi需求/gi，/w数据库/gi读写/gi分离/vi随着/p业务/gi的/ude1发展/gi最终/d也/d将/d无法/v满足/v需求/gi，/w需要/v使用/gi分布式数据库/gi及/cc分布式文件系统/nz来/vf支撑/v。/w分布式数据库/gi是/vshi系统/gi数据库/gi拆分/gi的/ude1最后/f方法/gi，/w只有/c在/p单表/nz数据/gi规模/gi非常/d庞大/a的/ude1时候/n才/d使用/gi，/w更/d常用/a的/ude1数据库/gi拆分/gi手段/n是/vshi业务/gi分库/gi，/w将/d不同/a的/ude1业务/gi数据库/gi部署/gi在/p不同/a的/ude1物理/n服务器/gi上/f。/w系统架构/gi演化/gi历程-使用/nznosql/gi和/cc搜索引擎/gi特征/gi：/w系统/gi引入/vnosql数据库/gi及/cc搜索引擎/gi。/w描述/gi：/w随着/p业务/gi越来越/d复杂/a，/w对/p数据存储/gi和/cc检索/gi的/ude1需求/gi也/d越来越/d复杂/a，/w系统/gi需要/v采用/v一/nz些/q非关系型数据库/gi如/vnosql/gi和/cc分数据库/nz查询/gi技术/gi如/v搜索引擎/gi。/w应用服务器/gi通过/p统一/vn数据/gi访问/gi模块/gi访问/gi各种/rz数据/gi，/w减轻/v应用程序/nz管理/gi诸多/m数据源/gi的/ude1麻烦/an。/w系统架构/gi演化/gi历程-业务/nz拆分/gi特征/gi：/w系统/gi上/f按照/p业务/gi进行/vn拆分/gi改造/vn，/w应用服务器/gi按照/p业务/gi区分/v进行/vn分别/d部署/gi。/w描述/gi：/w为了/p应对/v日益/d复杂/a的/ude1业务/gi场景/gi，/w通常/d使用/gi分而治之/nz的/ude1手段/n将/d整个/b系统/gi业务/gi分成/vi不同/a的/ude1产品线/nz，/w应用/gi之间/f通过/p超链接/gi建立/gi关系/gi，/w也/d可以/v通过/p消息队列/gi进行/vn数据/gi分发/v，/w当然/d更多/ad的/ude1还是/c通过/p访问/gi同一个/b数据存储/gi系统/gi来/vf构成/v一个/mq关联/vn的/ude1完整/a系统/gi。/w纵向/n拆分/gi：/w将/d一个/mq大/a应用/gi拆分/gi为/p多/a个/q小/a应用/gi，/w如果/c新/a业务/gi较为/d独立/a，/w那么/c就/d直接/ad将/d其/rz设计/gi部署/gi为/p一个/mq独立/a的/ude1web应用/gi系统/gi纵向/n拆分/gi相对/d较为简单/z，/w通过/p梳理/v业务/gi，/w将/d较少/ad相关/vn的/ude1业务/gi剥离/vi即可/v。/w横向/n拆分/gi：/w将/d复用/gi的/ude1业务/gi拆分/gi出来/vf，/w独立/a部署/gi为/p分布式服务/n，/w新增/v业务/gi只/d需要/v调用/gi这些/rz分布式服务/n横向/n拆分/gi需要/v识别/gi可/v复用/gi的/ude1业务/gi，/w设计/gi服务/gi接口/gi，/w规范/gi服务/gi依赖/v关系/gi。/w系统架构/gi演化/gi历程-分布式/nz服务/gi特征/gi：/w公共/b的/ude1应用/gi模块/gi被/pbei提取/v出来/vf，/w部署/gi在/p分布式/gi服务器/gi上供/v应用服务器/gi调用/gi。/w描述/gi：/w随着/p业务/gi越/d拆/v越/d小/a，/w应用系统/gi整体/n复杂程度/n呈/v指数级/nz上升/vi，/w由于/p所有/b应用/gi要/v和/cc所有/b数据库系统/gi连接/gi，/w最终/d导致/gi数据库/gi连接/gi资源/gi不足/an，/w拒绝服务/l。/wq/nz：/w分布式服务/n应用/gi会/v面临/v哪些/ry问题/gi？/wa/nz：/w(/nz1/nz)/nz /x当/p服务/gi越来越/d多/a时/qt，/w服务/giurl/gi配置管理/gi变得/vi非常/d困难/an，/wf/nz5/nz硬件/gi负载/gi均衡器/gi的/ude1单点/n压力/n也/d越来越/d大/a。/w(/nz2/nz)/nz /x当/p进一步/d发展/gi，/w服务/gi间/f依赖/v关系/gi变得/vi错踪/nz复杂/a，/w甚至/d分不清/l哪个/ry应用/gi要/v在/p哪个/ry应用/gi之前/f启动/gi，/w架构师/gi都/d不能/v完整/a的/ude1描述/gi应用/gi的/ude1架构/gi关系/gi。/w(/nz3/nz)/nz /x接着/c，/w服务/gi的/ude1调用量/nz越来越/d大/a，/w服务/gi的/ude1容量/gi问题/gi就/d暴露/v出来/vf，/w这个/rz服务/gi需要/v多少/ry机器/gi支撑/v？/w什么/ry时候/n该/rz加/v机器/gi？/w(/nz4/nz)/nz /x服务/gi多/a了/ule，/w沟通/gi成本/n也/d开始/v上升/vi，/w调/v某个/rz服务/gi失败/vi该/rz找谁/nz？/w服务/gi的/ude1参数/gi都/d有/vyou什么/ry约定/v？/w /x(/nz5/nz)/nz /x一个/mq服务/gi有/vyou多/a个/q业务/gi消费者/n，/w如何/ryv确保/v服务质量/gi？/w(/nz6/nz)/nz /x随着/p服务/gi的/ude1不停/v升级/vi，/w总/b有些/rz意想不到/vl的/ude1事/n发生/v，/w比如/vcache/gi写错/nz了/ule导致/gi内存/gi溢出/gi，/w故障/gi不可避免/vl，/w每次/r核心/n服务/gi一/nz挂/v，/w影响/gi一大片/nz，/w人心/n慌慌/nz，/w如何/ryv控制/vn故障/gi的/ude1影响面/n？/w服务/gi是否/v可以/v功能/gi降级/vi？/w或者/c资源/gi劣化/nz？/wjava/gi分布式应用/gi技术/gi基础/gi分布式服务/n下/f的/ude1关键技术/nz：/w消息队列/gi架构/gi消息/n对/p列/v通过/p消息/n对象/gi分解/gi系统/gi耦合性/nz，/w不同/a子系统/gi处理/vn同一个/b消息/n分布式服务/n下/f的/ude1关键技术/nz：/w消息队列/gi原理/gi分布式服务/n下/f的/ude1关键技术/nz：/w服务/gi框架/gi架构/gi服务/gi框架/gi通过/p接口/gi分解/gi系统/gi耦合性/nz，/w不同/a子系统/gi通过/p相同/a的/ude1接口/gi描述/gi进行/vn服务/gi启用/gi服务/gi框架/gi是/vshi一个/mq点对点/nz模型/gi服务/gi框架/gi面向/v同构/gm系统/gi适合/v：/w移动应用/gi、/w互联网/gi应用/gi、/w外部/f系统/gi分布式服务/n下/f的/ude1关键技术/nz：/w服务/gi框架/gi原理/gi分布式服务/n下/f的/ude1关键技术/nz：/w服务/gi总线/n架构/gi服务/gi总/b线/n同/p服务/gi框架/gi一样/uyy，/w均/d是/vshi通过/p接口/gi分解/gi系统/gi耦合性/nz，/w不同/a子系统/gi通过/p相同/a的/ude1接口/gi描述/gi进行/vn服务/gi启用/gi服务/gi总线/n是/vshi一个/mq总/b线/n式/k的/ude1模型/gi服务/gi总线/n面向/v同构/gm、/w异构/gi系统/gi适合/v：/w内部/f系统/gi分布式服务/n下/f的/ude1关键技术/nz：/w服务/gi总线/n原理/gi分布式/gi架构/gi下/f系统/gi间/f交互/gi的/ude15/nz种/q通信/gi模式/girequest/nz//nzresponse/nz模式/gi（/w同步/gi模式/gi）/w：/w客户端/gi发起/v请求/gi一直/d阻塞/vn到/v服务端/nz返回/v请求/gi为止/u。/wcallback/nz（/w异步/gi模式/gi）/w：/w客户端/gi发送/gi一个/mqrpc/nz请求/gi给/p服务器/gi，/w服务端/nz处理/vn后/f再/d发送/gi一个/mq消息/n给/p消息/n发送/gi端/v提供/v的/ude1callback/nz端点/gi，/w此类情况/l非常/d合适/a以下/f场景/gi：/wa/nz组件/gi发送/girpc/nz请求/gi给/pb/nz，/wb/nz处理/vn完成/v后/f，/w需要/v通知/gia/nz组件/gi做/v后续/vn处理/vn。/wfuture/nz模式/gi：/w客户端/gi发送/gi完/vi请求/gi后/f，/w继续做/nz自己/rr的/ude1事情/n，/w返回/v一个/mq包含/v消息/n结果/n的/ude1future/nz对象/gi。/w客户端/gi需要/v使用/gi返回/v结果/n时/qt，/w使用/gifuture/nz对象/gi的/ude1./nzget/gi(/nz)/nz,/nz如果/c此时/r没有/v结果/n返回/v的话/udh，/w会/v一直/d阻塞/vn到/v有/vyou结果/n返回/v为止/u。/woneway/nz模式/gi：/w客户端/gi调用/gi完/vi继续执行/n，/w不管/c接收端/n是否/v成功/a。/wreliable/nz模式/gi：/w为/p保证/v通信/gi可靠/a，/w将/d借助于/v消息/n中心/gi来/vf实现/gi消息/n的/ude1可靠/a送达/v，/w请求/gi将/d做/v持久化/nz存储/gi，/w在/p接收/gi方/q在线/vn时/qt做/v送达/v，/w并/cc由/p消息/n中心/gi保证/v异常/gi重试/gi。/w五种/nz通信/gi模式/gi的/ude1实现/gi方式-同步/nz点对点/nz服务/gi模式/gi五种/nz通信/gi模式/gi的/ude1实现/gi方式-异步/nz点对点/nz消息/n模式/gi1/nz五种/nz通信/gi模式/gi的/ude1实现/gi方式-异步/nz点对点/nz消息/n模式/gi2/nz五种/nz通信/gi模式/gi的/ude1实现/gi方式-异步/nz广播/gi消息/n模式/gi分布式/gi架构/gi下/f的/ude1服务/gi治理/vn服务/gi治理/vn是/vshi服务/gi框架/gi//nz服务/gi总线/n的/ude1核心/n功能/gi。/w所谓/v服务/gi治理/vn，/w是/vshi指/v服务/gi的/ude1提供/v方/q和/cc消费/vn方/q达成/v一致/a的/ude1约定/v，/w保证/v服务/gi的/ude1高质量/nz。/w服务/gi治理/vn功能/gi可以/v解决/v将/d某些/rz特定/b流量/gi引入/v某/rz一批/nz机器/gi，/w以及/cc限制/vn某些/rz非法/b消费者/n的/ude1恶意/n访问/gi，/w并/cc在/p提供者/n处理量/n达到/v一定/b程度/n是/vshi，/w拒绝接受/l新的/a访问/gi。/w基于/p服务/gi框架/gidubbo/nz的/ude1服务/gi治理-服务/nz管理/gi道/qv你/rr的/ude1系统/gi，/w对外/vn提供/v了/ule多少/ry服务/gi，/w可以/v对/p服务/gi进行/vn升级/vi、/w降级/vi、/w停用/v、/w权重/nz调整/vn等/udeng操作/gi可以/v知道/v你/rr提供/v的/ude1服务/gi，/w谁/ry在/p使用/gi，/w因/p业务/gi需求/gi，/w可以/v对/p该/rz消费者/n实施/gi屏蔽/v、/w停用/v等/udeng操作/gi基于/p服务/gi框架/gidubbo/nz的/ude1服务/gi治理-服务/nz监控/gi可以/v统计/gi服务/gi的/ude1每秒/d请求/gi数/n、/w平均/a响应/v时间/gi、/w调/v用量/n、/w峰/ng时间/gi等/udeng，/w作为/p服务/gi集群/gi规划/gi、/w性能/gi调优/gi的/ude1参考/gi指标/gi。/w基于/p服务/gi框架/gidubbo/nz的/ude1服务/gi治理-服务/nz路由/gi基于/p服务/gi框架/gidubbo/nz的/ude1服务/gi治理-服务/nz保护/gi基于/p服务/gi总线/nosb/nz的/ude1服务/gi治理-功能/nz介绍/gi基于/p服务/gi总线/nosb/nz的/ude1服务/gi治理/vnq/nz：/wdubbo/nz到底/d是/vshi神马/nz？/wa/nz：/w淘宝/n开源/gi的/ude1高性能/gi和/cc透明化/n的/ude1rpc/nz远程/gi调用/gi服务/gi框架/gisoa/gi服务/gi治理/vn方案/giq/nz：/wdubbo/nz原理/gi是/vshi？/wa/nz：/w-/nz结束-/nz