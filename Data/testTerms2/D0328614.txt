#关于软件/l测试/gi的/ude1个人/n思考/gi
最近/t拜读/v了/ule一本/nz软件测试/gi入门级/l书籍/gi《/w大话/n软件测试/gi》/w，/w感觉/gi受益/vi良多/z。/w作为/p一个/mq还/d没有/v入门/gi的/ude1新手/gi来说/uls，/w这/rzv本书/gi可以/v迅速/ad帮助/v了解/v软件测试/gi领域/gi的/ude1概况/n、/w思想/gi、/w技术/gi、/w管理/gi等/udeng一些/m因素/gi，/w使得/vi新手/gi能够/v迅速/ad的/ude1了解/v软件测试/gi这个/rz行业/gi。/w软件测试/gi，/w这个/rz行业/gi的/ude1诞生/gi就是/v为了/p尽可能/d保障/vn客户/n在/p使用/gi软件/gi时/qt所/usuo蒙受/v的/ude1损失/n。/w总所周知/nz，/w任何/rz软件/gi都/d不/d可能/v没有/v缺陷/gi，/w不能/v做到/v十分/d的/ude1完美/a，/w有/vyou一/nz些小/a的/ude1缺陷/gi实际上/d是/vshi不/d影响/gi软件/gi的/ude1正常/a运行/gi，/w然而/c一/nz些/q大/a的/ude1缺陷/gi却/d能/v使/v软件/gi无法/v运行/gi。/w所以/c软件测试/gi的/ude1存在/v就是/v为了/p找出/v其中/rz的/ude1bug/gi，/w使得/vi软件/gi能够/v正常/a运行/gi。/w软件测试/gi的/ude1中心/gi目的/gi是/vshi为了/p满足/v客户/n的/ude1显性/b需求/gi和/cc隐形/b需求/gi。/w那么/c什么/ry叫做/v显性/b需求/gi呢/y？/w显性/b需求/gi是/vshi指/v客户/n由于/p需要/v达到/v某/rz项目/gi的/ude1所/usuo需求/gi的/ude1手段/n或/c方法/gi。/w但是/c在/p很/d多/a时候/n，/w客户/n也/d不/d知道/v自己/rr到底/d是/vshi需要/v什么/ry，/w那么/c作为/p软件/gi研发/gi人员/gi，/w必须/d要/v了解/v客户/n需求/gi的/ude1本质/n是/vshi什么/ry，/w从而/c挖掘出/n更多/ad的/ude1需求/gi，/w这/rzv就是/v隐形/b需求/gi。/w充分/ad理解/gi了/ule客户/n的/ude1需求/gi，/w才能/n理解/gi对于/p软件/gi来说/uls什么/ry是/vshibug/gi，/w什么/ry不是/cbug/gi。/w当然/d在/p软件测试/gi时/qt，/w有/vyou很/d多/a不是/c针对/gi需求/gi方面/n的/ude1软件/gi错误/gi，/w这/rzv就是/v软件开发/nz人员/gi的/ude1问题/gi了/ule，/w这/rzv也/d是/vshi测试人员/n必须/d具备/v的/ude1能力/gi―/w―/w找出/v开发人员/n的/ude1错误/gi。/w既然/c已经/d充分/ad理解/gi了/ule客户/n的/ude1需求/gi之后/f，/w那么久/nz需要/v制作/gi相应/vi的/ude1文档/gi来/vf确保/v软件/gi在/p开发/gi过程/gi是/vshi处于/v一个/mq可控/nz的/ude1范围/n。/w为什么/ryv这么/rz说/v呢/y？/w首先/d如果/c没有/v相应/vi的/ude1文档/gi，/w每个/r人/n的/ude1理解/gi时/qt不同/a的/ude1，/w那么/c就/d无法/v统一/vn软件/gi的/ude1需求/gi。/w还有/v没有/v相应/vi的/ude1文档/gi，/w也/d就/d无法/v制定/gi具体/a的/ude1指标/gi定义/gi软件/gi的/ude1缺陷/gi。/w而/cc我们/rr测试人员/n也/d可/v从/p文档/gi中/f获得/v了/ule对/p软件/gi的/ude1全局/n的/ude1了解/v和/cc认知/vn。/w了解/v客户/n需求/gi和/cc制定/gi文档/gi大部分/n情况下/nz都/d是/vshipm/nz去/vf做/v的/ude1。/w软件/gi的/ude1前期工作/nz均/d已/d做好/v了/ule，/w开发人员/n开始/v进入/v每个/r模块/gi的/ude1开发/gi，/w测试人员/n开始/v了解/v软件/gi需要/v用/p的/ude1技术/gi、/w平台/gi、/w环境/n等/udeng，/w并且/c开始/v单元测试/gi（/w也/d可以/v是/vshi开发人员/n自己/rr进行/vn单元测试/gi）/w。/w当/p单元测试/gi完成/v之后/f，/w就要/d进行/vn所谓/v的/ude1feature/nz，/w即/v模块/gi功能/gi完成/v，/w但是/c可能/v存在/v许多缺陷/nz，/w比如/v存在/v代码/gi质量/gi不/d高/a，/w接口/gi对应/vi参数/gi不/d对/p、/w边界/n出现/v问题/gi等/udeng。/w测试人员/n就/d需要/v去找/v出/vf其中/rz的/ude1缺陷/gi。/w当/pfeature/nz测试/gi完成/v之后/f，/w就要/d开始/v集成测试/gi。/w把/pba其中/rz的/ude1几个/nz模块/gi聚合/gi在/p一起/s，/w进行/vn集成测试/gi，/w已/d发现/v其中/rz存在的问题/gi。/w测试人员/n应该/v要/v清楚/a自己/rr所/usuo测试/gi的/ude1方向/gi，/w这样/rzv才能/n准确/a的/ude1测出/vbug/gi。/w好/a了/ule，/w先/d说/v这么/rz多/a自己/rr的/ude1个人/n理解/gi吧/y。/w后续/vn再说/c吧/y。/w