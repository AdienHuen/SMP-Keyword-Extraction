#辛星/nz浅谈/giRedis/gi中的/v虚拟内存/gi
    /x和/cc大多/d数/nnosql/gi一样/uyy，/wredis/gi也/d是/vshi使用/gi的/ude1kv/nz的/ude1数据存储/gi模型/gi，/w为了/p提高/v读写/gi效率/gi，/wredis/gi也/d是/vshi将/dkv/nz保存/gi在/p内存/gi中/f，/w但是/c这样/rzv做/v会/v带来/v一些/m问题/gi。/w   /x如果/c /x内存/gi足够/v大/a，/w那么/c把/pba所有/b的/ude1数据/gi都/d加载/gi到/v内存/gi中/f固然/c是/vshi最好/d的/ude1选择/gi，/w那么/c查询/gi操作/gi都/d直接/ad操作/gi内存/gi，/w自然/n是/vshi很快/d。/w但是/c实际/n情况/n中/f却/d更多/ad的/ude1是/vshi只有/c部分/n数据/gi才能/n加载/gi到/v内存/gi中/f，/w那么/c这个/rz时候/n就/d提出/v来/vf一个/mq虚拟内存/gi的/ude1概念/gi。/w   redis/nz中的/v虚拟内存/gi和/cclinux/gi中的/v虚拟内存/gi不是/c一回事/nz，/w但是/c其/rz思想/gi是/vshi一致/a的/ude1，/w就是/v把/pba暂时/d不/d常用/a的/ude1数据/gi从/p内存交换/gi到/v磁盘/gi中/f，/w从而/c可以/v把/pba宝贵/a的/ude1内存/gi腾出来/l用于/v其他/rzv需要/v访问/gi的/ude1数据/gi，/w尤其/d是/vshi像/vredis/gi这样/rzv的/ude1内存数据库/gi，/w内存/gi的/ude1数量/n无意/v会/v成为/v一个/mq瓶颈/gi。/w虽然/c我们/rr可以/v把/pba数据分割/nz到/v多/a个/q服务器/gi上/f，/w但是/c虚拟内存/gi依然/d是/vshi一个/mq相当/d有效/gi的/ude1解决办法/n。/w   /x使用/gi虚拟内存/gi还有/v另外/c一个/mq原因/n，/w那/rzv就是/v在/p我们/rr的/ude1数据库/gi中/f，/w被/pbei访问/gi的/ude1数据/gi总是/d占全部/nz数据/gi的/ude1一小/d部分/n，/w而/cc大部分/n的/ude1数据/gi都/d是/vshi很少/ad被/pbei访问/gi的/ude1，/w就/d网站/gi用户/gi来说/uls，/w活跃/a用户/gi总是/d占据/v少/a部分/n。/w   /x但是/credis/gi没有/v使用/gilinux/gi提供/v的/ude1虚拟内存/gi机制/gi，/w它/rr是/vshi实现/gi了/ule自己/rr的/ude1虚拟内存/gi机制/gi，/w主要/b原因/n有/vyou两/nz点/gi：/w   /x(/nz1/nz)/nzlinux/gi虚拟内存/gi的/ude1粒度/gi过/uguo大/a，/w在/plinux/gi中/f使用/gi4/nzkb/nz的/ude1页面/gi，/w这/rzv对于/predis/gi来说/uls太大/d了/ule，/w二/nzredis/gi中的/v绝大/nz多数/a对象/gi都/d远远/d小于/v这个/rz数/n。/w   /x(/nz2/nz)/nzredis/gi可以/v在/p把/pba数据交换/nz到/v磁盘/gi上/f的/ude1时候/n进行/vn适当/a的/ude1操作/gi，/w比如/v压缩/gi，/w通常/d保存/gi到/v磁盘/gi上/f的/ude1对象/gi可以/v去除/v指针/gi和/cc对象/gi元数据/gi信息/gi，/w一般/ad压缩/gi后/f的/ude1对象/gi可以/v比/p内存/gi中的/v对象/gi小/a10/nz倍/q。/w这样/rzv可以/v节省/v很/d多/aio/gi操作/gi。/w    /x当然/d，/w并/cc不是/c所有/b场景/gi都/d适合/v虚拟内存/gi。/w这里/rzs需要/v注意/v的/ude1就是/vredis/gi中的/vkey/gi是/vshi不会/v被/pbei交换/gi的/ude1，/w如果/c每个/rkey/gi所/usuo关联/vn的/ude1value/nz都/d很小/a，/w那么/c这种/r场景/gi就/d不/d太/d适合于/v使用/gi虚拟内存/gi了/ule。/w如果/ckey/gi比较/gi小/a，/w但是/c对应/vi的/ude1value/nz比较/gi大/a，/w那么/c这种/r场景/gi是/vshi最/d适合/v使用/gi虚拟内存/gi的/ude1场景/gi。/w   /x下面/f是/vshi一/nz些/q常见/a的/ude1配置/gi项/q：/w    /x(/nz1/nz)/nzvm/nz-/nzenabled  yes /nz表示/v在/p服务器/gi启动时/l开启/gi虚拟内存/gi的/ude1功能/gi。/w    /x(/nz2/nz)/nzvm/nz-/nzmax/nz-/nzmemory   /nz它/rr是/vshiredis/gi使用/gi的/ude1最大/gm内存/gi上限/n，/w它/rr以/p字节/gi为/p单位/n    /x(/nz3/nz)/nzvm/nz-/nzpages       /nz表示/v最多/ad使用/gi多少/ry个/q页面/gi    /x(/nz4/nz)/nzvm/nz-/nzpage/nz-/nzsize    /nz表示/v每个/r页面/gi的/ude1大小/n，/w以/p字节/gi为/p单位/n    /x(/nz5/nz)/nzvm/nz-/nzmax/nz-/nzthreads   /nz它/rr是/vshi用于/v执行/vvalue/nz对象/gi换入/nz换/v出/vf的/ude1工作/gi线程/gi数量/n   /x接下来/vl就是/vredis/gi的/ude1几个/nz规定/n：/w   /x(/nz1/nz)/nzredis/gi为了/p保证/vkey/gi的/ude1查找/gi速度/n，/w只/d会/v将/dvalue/nz交换/gi到/vswap/nz文件/gi中/f。/w   /x(/nz2/nz)/nzredis/gi在/p进行/vn数据交换/nz的/ude1时候/n，/w也/d是/vshi使用/gi页面/gi来/vf交换/gi的/ude1，/w而且/credis/gi规定/n一个/mq页面/gi只能/v保存/gi一个/mq对象/gi，/w但是/c一个/mq对象/gi可以/v保存/gi到/v多/a个/q页面/gi中/f。/w   /x(/nz3/nz)/nzredis/gi使用/gi的/ude1内存/gi没有/v超过/vvm/nz-/nzmax/nz_/nzmemory/gi之前/f是/vshi不会/v交换/gi任何/rz的/ude1value/nz的/ude1，/w当/p超过/v最大/gm内存/gi的/ude1限制/vn之后/f，/wredis/gi会/v选择/gi过期/gi的/ude1对象/gi，/w如果/c两/nz个/q对象/gi过期/gi时间/gi一样/uyy，/w那么/c它/rr会/v优先/vd交换/gi比较/gi大/a的/ude1对象/gi。/w   /x(/nz4/nz)/nz如果/cvm/nz-/nzpage/nz-/nzsize/nz设置/gi的/ude1太小/d，/w会/v造成/v交换文件/l出现/v碎片/n，/w太大/d又/d会/v浪费/gi空间/n。/w   /x(/nz5/nz)/nz对于/p交换文件/l的/ude1每个/r页面/gi，/wredis/gi都会/n在/p内存/gi中/f对应/vi一个/mqbit/nz来/vf记录/gi页面/gi的/ude1空闲/gi状态/gi。/w   /x(/nz6/nz)/nz而/ccvm/nz-/nzmax/nz-/nzthreads/nz用来/v表示/v用作/v交换/gi任务/gi的/ude1线程/gi数/n，/w如果/c大于/v0/nz的话/udh，/w则/d推荐/gi为/pcpu/gi的/ude1核/n的/ude1数量/n，/w如果/c是/vshi0/nz则/d交换/gi过程/gi在/p主线/n程/n中/f执行/v  /x(/nz7/nz)/nz对/predis/gi而言/uls，/w如果/c操作/gi交换文件/l是/vshi以/p同步/gi的/ude1方式/n进行/vn的/ude1，/w那么/c当/p某/rz一/nz客户端/gi正在/d访问/gi交换文件/l的/ude1数据/gi时/qt，/w如果/c其他/rzv客户端/gi也/d试图/v去/vf访问/gi交换文件/l中的/v数据/gi，/w那么/c后面/f的/ude1这个/rz客户端/gi的/ude1请求/gi会/v被/pbei挂起/v，/w直到/v之前/f的/ude1操作/gi结束/v为止/u。/w如果/c在/p比较忙/l的/ude1时候/n读取/gi较大/d的/ude1时/qt，/w这种/r阻塞/vn带来/v的/ude1后果/gi会/v更/d严重/a。/w       /x