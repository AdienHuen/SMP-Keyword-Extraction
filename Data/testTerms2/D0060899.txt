#大型网站/gi构架/n
一/nz，/w大型网站/gi的/ude1构架/n演化/gi随着/p访问量/nz(/nz并发/gi量/n)/nz，/w数据/gi存储量/nz的/ude1增大/v而/cc不断/d添加/gi服务器/gi的/ude1过程/gi。/w1/nz，/w初始/b阶段/gi：/w数据库/gi，/w应用程序/nz，/w文件/gi部署/gi在/p同一/b服务器/gi。/wlamp/nz(/nzlinuxapachemysqlphp/nz)/nz./nz2/nz,/nz应用服务/n与/cc数据服务/n分离/vi：/w应用服务器/gi处理/vn业务逻辑/gi，/w需要/vcpu/gi；/w数据库服务器/gi需要/v磁盘/gi检索/gi和/cc数据/gi缓存/gi；/w文件/gi服务器/gi存储用户/n上传/v文件/gi。/w3/nz，/w使用/gi缓存/gi：/w将/d热点/gi数据/gi放到/v内存/gi中/f，/w提升/gi访问速度/n。/w分为/v本地/gi缓存/gi和/cc远程/gi分布式/gi缓存/gi。/w4/nz，/w将/d单一/gi服务器/gi改为/v应用服务器/gi集群/gi，/w并行计算/gimapreduce/gi。/w5/nz，/w数据库/gi读写/gi分离/vi。/w将/d数据库/gi部署/gi在/p两/nz台/q服务器/gi，/w主/ag数据库/gi负责/v写/v操作/gi，/w写完/v之后/f立即/d备份/gi到/v从/p数据库/gi，/w从/p数据库/gi负责/v读/v操作/gi。/w6/nz，/w反向代理/gi和/cccdn/gi加速/gi网络/gi，/w两/nz种/q缓存/gi方式/n。/w7/nz，/w使用/gi分布式文件系统/nz和/cc分布式数据库系统/nz。/w这里/rzs包含/v了/ule数据库/gi的/ude1垂直分割/nz（/w不同/a表/n）/w和/cc水平/n分割/gi（/w相同/a表/n）/w。/w详见/nz数据库调优/gi8/nz，/w使用/ginosql/gi和/cc搜索引擎/gi9/nz，/w应用/gi的/ude1业务/gi种类/n拆分/gi，/w将/d不同/a业务/gi拆分/gi为/p多/a个/q系统/gi10/nz，/w应用/gi与/cc可/v复用/gi的/ude1服务/gi拆分/gi。/w详见/nz7.2/nz二/nz，/w大型网站/gi的/ude1构架/n模式/gi1/nz，/w分层/v：/w应用层/gi（/w业务逻辑/gi处理/vn，/w特点/n：/w无/v状态/gi）/w，/w服务/gi层/gi（/w复用/gi的/ude1代码/gi，/w无/v状态/gi）/w，/w数据/gi层/gi（/w数据/gi访问/gi）/w。/w应用层/gi和/cc服务/gi层类/nz，/w可/v细分/gi为/pmvc/gi。/w应用层/gi专注/vi于/p与/cc浏览器/gi打交道/vi，/w服务/gi层/gi与/cc数据库/gi连接/gi。/w网站/gi前端/gi是/vshi指/v应用/gi层/gi之前/f的/ude1部分/n，/w包括/vdns/nz服务/gi，/wcdn/gi服务/gi，/w反向代理/gi等/udeng；/w网站/gi后端/f是/vshi被/pbei应用层/gi严重/a依赖/v的/ude1服务/gi，/w包括/v缓存/gi和/cc数据库/gi，/w他们/rr是/vshi有/vyou状态/gi的/ude1。/w网站/gi前台/n和/cc后台/gi是/vshi分别为/v客户/n和/cc管理员/gi访问/gi的/ude1界面/gi，/w都/d是/vshihtml/gi写/v的/ude1。/w2/nz，/w分割/gi：/w将/d不同/a功能/gi的/ude1模块/gi分割/gi。/w包括/v应用/gi和/cc数据库/gi（/w水平/n垂直/gi）/w。/w3/nz，/w分布式/gi部署/gi：/w将/d分层/v和/cc分割/gi的/ude1模块/gi部署/gi在/p不同/a服务器/gi或者/c分布式/gi并行计算/gi。/w4/nz，/w集群/gi：/w将/d多/a台/q服务器/gi部署/gi相同/a的/ude1应用/gi，/w防止/gi服务器/gi故障/gi。/w需要/v做/v负载均衡/gi处理/vn，/w使/vhttp/gi请求/gi均衡/a（/w集群/gi中/f所有/b节点/gi所存/v内容/gi相中/v，/w所以/c请求/gi可以/v交给/v任何/rz一个/mq节点/gi）/w。/w5/nz，/w缓存/gi：/w本质/n是/vshi内存/gi哈希表/nz1/nz）/wcdn/gi：/w离/v用户/gi最近/t的/ude1isp/nz服务器/gi提供/v缓存/gi；/w2/nz）/w反向代理/gi：/w传统/n的/ude1代理服务器/gi是/vshi在/p用户端/nz局域网/gi中的/v代理服务器/gi，/w反向代理/gi存放在/v网站/gi的/ude1机房/gi中/f，/w任何/rz请求/gi先/d访问/gi代理/gi，/w如果/c代理/gi没有/v，/w代理/gi去/vf访问/gi服务器/gi。/w3/nz）/w本地/gi缓存/gi：/w应用服务器/gi本地/gi内存/gi缓存/gi的/ude1热点/gi数据/gi；/w4/nz）/w分布式/gi缓存/gi：/w专门/d用作/v缓存/gi的/ude1分布式/gi集群/gi，/w应用服务器/gi通过/p网络通信/gi访问/gi。/wmemcached/gi互不/d通信/gi的/ude1缓存/gi集群/gi。/w缓存/gi的/ude1前提条件/nz：/w1/nz）/w数据/gi访问/gi热点/gi不/d均衡/a；/w2/nz）/w数据/gi不会/v很快/d过期/gi。/w像/v维基百科/nz这种/r读数据/n远远/d大于/v写/v数据/gi的/ude1网站/gi，/w缓存/gi就/d尤其/d重要/a。/w6/nz，/w异步/gi：/w通过/p消息队列/gi，/w用户/gi向/p服务器/gi发出/v的/ude1请求/gi装入/v消息队列/gi中/f，/w服务器/gi的/ude1处理/vn线程/gi从/p消息队列/gi中/f取出/v请求/gi不/d处理/vn返回/v。/w比如/v在/p提交/gi订单/gi的/ude1过程/gi，/w订单/gi提交/gi后/f网页/gi上/f提示/gi待/vi审核/gi，/w其实/d就是/v订单/gi请求/gi在/p消息队列/gi中/f等待/gi的/ude1过程/gi。/w三，/nz大型网站/gi的/ude1要素/gi1/nz，/w性能/gi2/nz，/w可用性/gi：/w系统/gi出现/v几/d台/q服务器/gi宕机/nz，/w系统/gi整体/n是否/v可用/v。/w3/nz，/w伸缩性/gi：/w集群/gi的/ude1构建/gi与/cc增删/v服务器/gi，/w使/v服务器/gi数量/n与/cc处理/vn能力/gi呈/v线性/gi。/w4/nz，/w扩展性/n：/w扩展/gi新功能/nz，/w并且/c不/d需要/v对/p现有/v系统/gi和/cc结构/gi修改/gi。/w5/nz，/w安全性/gi：/w四，/nz系统/gi性能优化/gi1/nz，/w性能指标/nz：/w响应/v时间/gi（/w用户/gi发出请求/n收到/v相应/vi的/ude1时间/gi）/w，/w并发/gi数/n（/w系统/gi能够/v同时/c处理/vn的/ude1请求/gi数/n，/w系统/gi负载/gi特性/gi）/w，/w吞吐量/gi（/w单位/n时间/gi内/f处理/vn的/ude1请求/gi数/n，/w系统/gi整体/n处理/vn能力/gi）/w。/w系统资源/gi就/d像/v一个/mq高速公路/n：/w吞吐量/gi是/vshi每天/r通过/p的/ude1车/n数目/gi，/w并发/gi数/n是/vshi正在/d公路/n上/f行驶/vi的/ude1车/n数/n，/w响应/v时间/gi时/qt车速/n。/w分布式/gi的/ude1解决方案/gi解决/v了/ule高并发/gi环境/n下/f的/ude1访问/gi延迟/v，/w但/c由于/p自身/rr节点/gi通信/gi延迟/v，/w架构/gi复杂/a等/udeng问题/gi提高/v了/ule低/a并发/gi的/ude1延迟/v。/w另外/c，/w要/v想/v性能/gi提升/gi，/w服务器/gi数量/n需要/v增多/v，/w要/v想/v延迟/v减小/v，/w数据/gi一致性/gi要/v下降/vi。/w这/rzv就是/v性能优化/gi的/ude1利与弊/n。/w2/nz，/wweb前端/gi优化/gi：/w1/nz）/w浏览器/gi优化/gi：/w减少/vhttp/gi请求/gi（/w合并/gihtml/gi，/wjs/gi，/wcss/nz）/w；/w使用/gi浏览器/gi缓存/gi；/w压缩/gi文本/gi；/w减少/vcookie/gi传输/gi；/w2/nz）/w使用/gicdn/gi和/cc反向代理/gi；/w3/nz，/w应用服务器/gi优化/gi1/nz）/w缓存/gi2/nz）/w异步/gi3/nz）/w集群/gi4/nz，/w代码优化/gi1/nz）/w并发/gi优化/gi：/w比如/vservlet/nz不/d适用/vi成员/nnt变量/gi，/w尽量/d使用/gi局部/n变量/gi。/w2/nz）/w资源/gi复用/gi：/w每个/rweb/gi请求/gi服务器/gi都/d需要/v用/p独立/a线程/gi处理/vn，/w可/v使用/gi数据库连接池/gi和/cc线程池/gi。/w3/nz）/w算法/gi优化/gi4/nz）/w垃圾/n回收/vn，/w减少/vfull gc/nz。/w5/nz、/w存储/gi性能优化/gi1/nz）/w机械/n硬盘/gi（/w快速/d顺序/gi读写/gi，/w慢速/nz随机/b读写/gi）/w，/w固态/n硬盘/gi（/w和/cc访问/gi内存/gi速度/n差不多/al）/w2/nz）/wb/nz树/gi，/wlsm/nz树/gi  /x....../w.../w./nz./nz详见/nz数据库/gi。/w3/nz）/wraid/gi，/whdfs/gi五，/nz可用性/gi优化/gi1/nz，/w应用/gi层/gi1/nz）/w失效/vi转移/v应用服务器/gi无/v状态/gi，/w不/d像/v存储/gi服务器/gi。/w当/p负载均衡/gi服务器/gi通过/p心跳/vi监测/vn发现/v有/vyou台/q应用服务器/gi宕机/nz时/qt，/w就/d会/v把/pba它/rr从/p服务器/gi列表/vi中/f删除/gi，/w将/d请求/gi转移/v到/v其他/rzv节点/gi。/w2/nz）/wsession/gi管理/gi（/w需要/vsession/gi的/ude1应用/gi记录/gi了/ule用户/gi状态/gi）/w：/wsession/gi复制/gi（/w冗余/n太大/d，/w传输/gi缓慢/a，/w不用/d）/w，/wsession/gi绑定/gi（/w将/d用户/giip/gi与/cc服务器/gi绑定/gi，/w但/c该/rz服务器/gi当即/d就/d完蛋/vi了/ule，/w不用/d）/w，/wcookie/gi记录/gisession/gi（/w需要/vsession/gi时/qt，/w查找/gicookie/gi中的/vsessionid/nz并发/gi送给/v服务器/gi获取/gisession/gi，/w常用/a）/w，/wsession/gi服务器/gi（/w将/d有/vyou状态/gi与/cc无/v状态/gi分离/vi）/w2/nz，/w服务/gi层/gi（/w同/p应用层/gi）/w分级管理/l（/w等级/n不同/a的/ude1服务/gi放在/v等级/n不同/a的/ude1硬件/gi）/w，/w超时/v设置/gi，/w异步/gi调用/gi，/w拒绝服务/l，/w关闭/gi功能/gi。/w3/nz，/w数据/gi层/gi1/nz）/wcap/gi原理/gi：/w数据/gi容忍性/n（/w系统/gi部分/n出/vf问题/gi但/c总体/n可用/v）/w，/w数据/gi可/v访问/gi性/ng（/w随时/d访问/gi数据/gi，/w无论/c成功失败/v总会/nis收到/v响应/v）/w，/w数据/gi一致性/gi（/w各个/rz副本/n在/p每个/r时刻/n数据/gi一致/a）/w。/w为了/p保证/v高/a可用/v，/w网站/gi常常/d牺牲/v一致性/gi，/w就是/v保证/v最终/d结果/n一致/a，/w但/c不/d保证数据/n变化/gi后/f所有/b节点/gi立刻/d一致/a，/w如/vnosql/gi。/w详见/nzhadoop/gi的/ude1nosql/gi。/w2/nz）/w数倍/n备份/gi：/w冷备/nz份/q（/w每隔/d一段时间/nz进行/vn备份/gi，/w成本低/n，/w但/c一致性/gi差/a）/w。/w热/a备份/gi：/w每次/r写入/gi数据/gi就/d立刻/d备份/gi，/w分为/v同步/gi和/cc异步/gi。/w异步/gi方式/n进行/vn读写/gi分离/vi。/w数据/gi热/a备份/gi可以/v考虑/v中间/f做/v一/nz张/q增量/gi日志表/nz，/w用于/v记录/gi在/p备份/gi过程/gi中/f数据/gi的/ude1改变/v，/w备份/gi完成/v后/f再/d把/pba增量/gi日志/gi的/ude1内容/gi复制/gi过去/vf。/w /x3/nz）/w失效/vi转移/v：/w失效/vi确认/v（/w心跳/vi检测/gi，/w应用程序/nz访问/gi失败/vi报告/gi）/w，/w访问/gi转移/v，/w数据恢复/gi（/w将/d数据/gi的/ude1副本/n数目/gi恢复/gi到/v之前/f水平/n）/w4/nz，/w网站/gi发布/gi：/w网站/gi的/ude1升级/vi和/cc发布/gi是/vshi一次人/nz为/p的/ude1宕机/nz，/w频率/n较高/ad，/w因此/c软件/gi发布/gi是/vshi非常/d重要/a的/ude1过程/gi。/w它/rr犹如/v给/p正在/d飞行/vn的/ude1飞机/n换/v引擎/n，/w既/c不能/v让/v飞机/n剧烈/a晃动/v，/w也/d不能/v降落/vi，/w更/d不能/v坠毁/v。/w另外/c，/w测试/gi不是/c万能/b的/ude1，/w经过/p严测试/nz的/ude1系统/gi也/d会/v出现/v问题/gi。/w5/nz，/w网站/gi故障/gi监测/vn1/nz）/w数据采集/gi：/w日志/gi采集/v（/w服务器/gi和/cc客户端/gi日志/gi）/w，/w服务器/gi性能/gi监测/vn（/wcpu/gi，/w内存/gi，/wio/gi性能/gi，/w缓存/gi命中率/n，/w访问/gi延时/v）/w2/nz）/w故障/gi处理/vn手段/n：/w系统/gi报警/vn（/w设定/v阈/nz）/w，/w失效/vi转移/v，/w自动/d降级/vi（/w关闭/gi某些/rz非核心/b功能/gi）/w。/w六/nz，/w伸缩性/gi优化/gi分为/v功能/gi伸缩/vn和/cc集群/gi伸缩/vn。/w,/nz1/nz，/w应用服务器/gi集群/gi的/ude1伸缩性/gi负载均衡/gi服务器/gi1/nz）/whttp/gi重定向/gi实现/gi（/w不/d常用/a）/w2/nz）/wdns/nz域名解析/gi实现/gi（/w常用/a作第/nz一级/b负载均衡/gi）/w，/w在/pdns/nz服务器/gi一个/mq域名/gi下/f注册/gi多/a个/qip/gi3/nz）/w反向代理/gi实现/gi，/w这样/rzv反向代理/gi有/vyou缓存/gi和/cc负载均衡/gi功能/gi4/nz）/wip/gi实现/gi，/w用/p网关/gi作/v负载均衡/gi，/w并/cc执行/vnat/nz。/w5/nz）/w数据链/n路/n实现/gi（/w最/d常用/a）/w，/w使/v负载均衡/gi服务器/gi与/ccweb服务器/gi的/ude1ip/gi相同/a，/w但/c每/rz台/qmac/gi不同/a，/w负载均衡/gi服务器/gi只/d需要/v修改/gimac/gi进行/vn直接/ad路由/gi。/w由于/p数据包/gi中/f源/ng和/cc目的/giip/gi没有/v变/v，/w这样/rzv返回/v响应/v时/qt，/wweb服务器/gi就/d可/v直接/ad找到/v用户/gi，/w不用/d再/d经过/p负载均衡/gi，/w减小/v了/ule负载均衡/gi的/ude1压力/n。/w前/f两/nz种/q方式/n用户/gi与/cc服务器/gi直连/nz，/w后/f三种/nz都/d通过/p中间/f代理/gi。/w6/nz）/w负载均衡/gi算法/gi（/w运行/gi在/p负载均衡/gi服务器/gi中的/v算法/gi）/w轮询/nz，/w加权/vn轮询/nz（/w按/p服务器/gi硬件/gi性能/gi加权/vn）/w，/w随机/b，/w最小/a连接/gi（/w统计/gi每/rz台/q服务器/gi当前/t的/ude1连接数/nz，/w选择/gi最小/a的/ude1）/w，/w原/b地址/gi散列/nz（/w对/p源/ngip/gi哈希/nrf，/w这样/rzv同一/b台/q客户机/nz总/b被/pbei分到/v同一/b台/q服务器/gi）/w2/nz，/w缓存/gi集群/gi的/ude1伸缩性/gi缓存/gi集群/gi中/f，/w每/rz台/q服务器/gi缓存/gi的/ude1内容/gi都/d不/d一样/uyy，/w所以/c没法用/l负载均衡/gi的/ude1方式/n。/w但/c缓存/gi内容/gi的/ude1丢失/v不/d影响/gi业务/gi正常/a服务/gi，/w只是/d增大/v了/ule数据库/gi的/ude1访问/gi压力/n。/w余数/nhash/gi算法/gi：/w可以/v解决/v访问/gi问题/gi，/w但/c服务器/gi数量/n的/ude1改变/v会/v使/v已经/d缓存/gi的/ude1大部分/n内容/gi失效/vi。/w一致性/gi哈希/nrf：/w详见/nz集合/gi框架/gi。/w节点/gi扩容/v只/d会/v使/v很小/a一/nz部分/n内容/gi失效/vi。/w虚拟节点/gi（/w一台/nz物理机/nz对应/vi多/a个/qhash/gi）/w保证/v负载均衡/gi。/w3/nz，/w数据存储/gi集群/gi的/ude1伸缩性/gi1/nz）/w关系数据库/gi通过/p关系数据库/gi访问/gi代理/gi,/nz可以/v解决/v不同/a数据/gi分库/gi的/ude1问题/gi，/w但/c不能/v使用/gi跨库/nzjoin/nz和/cc事物/n2/nz）/w非关系型数据库/gi详见/nzhadoop/gi。/w七/nz，/w扩展性/n优化/gi主要/b目标/gi是/vshi降低/v耦合性/nz。/w1/nz，/w分布式/gi消息中间件/nzjms/nz：/w就是/v将/d消息队列/gi部署/gi在/p单独/d的/ude1服务器/gi，/w应用服务器/gi通过/p远程/gi调用/gi或者/csocket/gi通信/gi进行/vn访问/gi。/w降低/v了/ule生产者/n和/cc消费者/n之间/f的/ude1耦合性/nz。/w如果/c消息队列/gi内存/gi满/a了/ule，/w就/d将/d消息/n暂存/nz于/p硬盘/gi。/w为/p防止/gi消息队列/gi宕机/nz，/w生产者/n在/p消息/n被/pbei处理/vn之前/f暂存/nz消息/n，/w如果/c消息/n在/p未处理/v之前/f服务器/gi宕机/nz，/w那/rzv发送/gi发/v会/v选择/gi其他/rzv队列/gi。/w比较/gi著名/a的/ude1有/vyouapache/gi的/ude1activemq/nz，/w简单/a的/ude1有/vyoumysql/gi数据库/gi可以/v当作/v消息队列/gi。/w消息队列/gi模型/gi：/wqueue/nz模型/gi：/w所有/b消费者/n共同/d消费/vn队列/gi中/f消息/n；/wtopic/nz模型/gi：/w所有/b消费者/n会/v独立/a收到/v所有/b消息/n。/w多/a个/q集群/gi间/f用/ptopic/nz，/w集群/gi内部/f用/pqueue/nz。/w2/nz，/w分布式服务/n构架/n（/wsoa/gi）/w1/nz）/w服务/gi：/w多/a个/q应用/gi模块/gi都/d需要/v使用/gi（/w复用/gi）/w的/ude1应用/gi称为/v服务/gi，/w比如/v用户/gi管理/gi模块/gi。/w服务/gi可以/v给/p网站/gi内部/f的/ude1应用服务器/gi使用/gi，/w也/d可以/v给/p第三方/nz的/ude1开发者/gi使用/gi。/w为了/p降低/v服务/gi模块/gi与/cc其他/rzv模块/gi的/ude1耦合性/nz，/w通常/d在用/b暴露/v接口/gi的/ude1形式/gi提供/v服务/gi。/w因此/c被服务者/n只要/c遵循/gi该/rz接口/gi，/w无论是/c用/p什么/ry语言/gi，/w都/d可以/v进行/vn应用开发/gi。/w2/nz）/w简单/a实例/gi：/w比如/v应用服务器/gi需要/v一个/mqadd/nz(/nza/nz,/nzb/nz)/nz的/ude1结果/n。/w如果/c在用/b用/p服务器/gi中/f设计/gi该/rz程序/gi，/w那/rzv其他/rzv应用/gi需要/v此/rzs函数/gi时/qt还/d需要/v从/p新/a设计/gi相同/a的/ude1代码/gi。/w于是/cc我们/rr可以/v把/pbaadd/nz(/nza/nz,/nzb/nz)/nz的/ude1代码/gi放在/v服务/gi服务器/gi中/f。/w当/p应用/gi需要/v此/rzs代码/gi时/qt，/w通过/psocket/gi向/p服务/gi服务器/gi传递/v需要/v服务/gi的/ude1接口/gi名/q和/cc方法/gi和/cc参数/gia/nz，/wb/nz。/w服务器/gi接收/gi到/v传递/v的/ude1信息/gi后/f，/w通过/p接口/gi名/qnew/nz出/vf实例/gi对象/gi，/w并/cc将/d参数/gi传入/gi计算/gi结果/n，/w最后/f将/d结果/n返回/v给/p应用服务器/gi。/w在/p实际/n项目/gi中/f，/w是/vshi在/p应用程序/nz（/w需要/v服务/gi的/ude1程序/gi）/w中/f含有/v一个/mq服务/gi接口/gi的/ude1引用/gi，/w这个/rz引用/gi实际/n是/vshi通过/p远程/gi调用/gi方式/n生成/v的/ude1动态代理/gi，/w通过/p该/rz代理/gi完成/v服务/gi方法/gi的/ude1调用/gi。/w3/nz）/w服务/gi的/ude1接口/giweb serverce/nz是/vshisoa/gi构架/n的/ude1一个/mq具体/a实现/gi。/w详见/nz网络编程/gi的/ude1web serverce/nz./nz4/nz）/w服务/gi层/gi负载均衡/gi3/nz，/w可扩展/nz的/ude1数据结构/gi（/w列存储/gi的/ude1列族/nz）/w详见/nzhadoop/gi中的/vnosql/gi