#接口测试/gi实践/gi与/cc总结/gi
1./nz /x测试/gi遇到/v的/ude1困惑/an与/cc挑战/gi随着/p飞信/gi活跃/a用户/gi、/w同时在线/l数量/n的/ude1不断/d增加/v,/nz互联网/gi的/ude1快速/d发展/gi,/nz以及/cc微信/gi等/udeng新一代/nzim/nz产品/gi的/ude1上线/n，/w客观/a上/f对/p飞信/gi的/ude1发展/gi带来/v了/ule巨大/a的/ude1挑战/gi。/w作为/p飞信/gi的/ude1开发/gi运营/gi支撑/v商/vg，/w必须/d产品/gi运营/gi模式/gi和/cc开发流程/gi进行/vn变革/gi才能/n使/v飞信/gi产品/gi更好/d的/ude1发展/gi。/w而/cc这些/rz变化/gi必然/d对/p原有/v的/ude1测试流程/gi和/cc体系/gi带/v了/ule很大/d的/ude1挑战/gi。/w互联网/gi转型/gi：/w互联网/gi时代/gi的/ude1到来/gi，/w最/d直接/ad的/ude1变化/gi就是/v快/a，/w产品/gi需要/v快速/d迭代/gi，/w快速/d发布/gi版本/n，/w原来/d需要/v半年/nz时间/gi发布/gi一个/mq客户端/gi，/w而/cc现在/t需要/v2/nz个/q月/n甚至/d一个月/nz发布/gi一个/mq客户端/gi。/w如何/ryv在/p最/d短/a的/ude1时间/gi提高/v更高/d质量/gi的/ude1产品/gi是/vshi摆在/v我们/rr面对/v的/ude1一个/mq首要/b问题/gi。/w多/a架构/gi共存/vi：/w为了/p适应/v互联网/gi产品/gi的/ude1快速/d发展/gi以及/cc更好/d的/ude1满足/v客户/n需求/gi，/w需要/v对/p原有/v的/ude1架构/gi进行/vn升级/vi，/w而/cc在/p升级/vi的/ude1过程/gi中/f存在/v多/a系统架构/gi并存/vi，/w在/p测试过程/gi中/f既要/b满足/v系/v架构/gi的/ude1稳定/an正常/a运行/gi，/w又/d要/v保证/v对/p老/a的/ude1系统架构/gi的/ude1兼容性/gi，/w这些/rz无论是/c在/p工作难度/l还是/c工作量/n上都/ns对/p测试/gi工作/gi提出/v了/ule一个/mq很大/d的/ude1挑战/gi。/w多种/m开发模式/gi共存/vi：/w为了/p适应/v互联网/gi的/ude1开发/gi节奏/n和/cc保持/v原有/v系统/gi的/ude1稳定/an，/w在/p开发/gi过程/gi中/f敏捷开发/gi模式/gi与/cc传统开发/gi模式/gi交替/d共存/vi，/w测试/gi怎么样/ryv实现/gi在/p传统模式/nz中的/v“稳”/nz和/cc敏捷/gi模式/gi中的/v“快”/nz，/w对/p测试/gi来说/uls这/rzv是/vshi一个/mq巨大/a的/ude1挑战/gi。/w分省/n运营/gi、/w灰度/gi发布/gi在/p互联网/gi产品/gi中/f常常/d使用/gi灰度/gi发布/gi这/rzv一/nz策略/gi，/w灰度/gi发布/gi能够/v及早/d获得/v用户/gi的/ude1意见反馈/nz，/w完善/v产品/gi功能/gi，/w提升/gi产品质量/nz /x让/v用户/gi参与/gi产品测试/gi，/w加强/v与/cc用户/gi互动/gi降低/v产品升级/n所/usuo影响/gi的/ude1用户/gi范围/n。/w /x另外/c，/w随着/p移动互联网/gi公司/nis的/ude1成立/vi，/w对/p飞信/gi的/ude1运营/gi模式/gi进行/vn了/ule改革/vn，/w要求/n支持/v飞信/gi分省/n运营/gi模式/gi。/w灰度/gi发布/gi和/cc分省/n运营/gi的/ude1变化/gi对/p测试/gi来说/uls，/w工作量/n成/v指数/n增加/v。/w如何/ryv在/p测试/gi成本/n可控/nz的/ude1条件/n下/f进行/vn测试/gi是/vshi我们/rr每个/r人/n必须/d考虑/v的/ude1一个/mq课题/n。/w另外/c随着/p移动互联网/gi的/ude1快速/d发展/gi，/w飞信/gi需要/v支持/v的/ude1客户端/gi越来越/d来/vf越多/ad，/w用户/gi场景/gi越来越/d复杂/a，/w对/p测试/gi的/ude1难度/n和/cc工作量/n剧增/vi。/w2./nz /x各种/rz接口/gi方案/gi分析/gi及/cc实施/gi如何/ryv解决/v上面/f提到/v的/ude1几个/nz问题/gi？/w要/v解决/v这些/rz问题/gi按照/p常规/n的/ude1测试/gi模式/gi，/w肯定/v不能/v满足/v；/w经过/p分析/gi（/w见/v下图/n）/w我们/rr认为/v在/p客户端/gi的/ude1皮下层/nz进行/vn测试/gi。/w也/d就是/v接口测试/gi，/w可以/v很好/ad的/ude1解决/v上面/f的/ude1问题/gi。/w经过/p对/p业务/gi和/cc接口/gi的/ude1详细/gi梳理/v，/w发现/v在/p所有/b的/ude1系统/gi中/f，/w其/rz接口测试/gi无非/d就是/v需要/v对/p以下/f集中/v种/q接口/gi进行/vn测试/gi：/w客户端/gi模拟/gi接口测试/gi随着/p无线/gi互联网/gi的/ude1飞速发展/nz，/w越来越/d的/ude1手机/gi厂商/gi加入/v，/w越来越/d多/a基于/p开源/gi手机操作系统/nz开发/gi的/ude1系统/gi的/ude1增加/v，/w以及/cc多/a种/q网络/gi的/ude1接入/vn，/w采用/v传统/n在/pui/gi进行/vn测试/gi的/ude1方法/gi成本/n越来越/d高/a，/w实施/gi分层/v测试/gi，/w进行/vn模拟/gi客户端/gi测试/gi势在必行/vl，/w对于/p一般/ad的/ude1系统/gi来说/uls，/w各种/rz客户端/gi连接/gi服务器端/gi的/ude1接口/gi都/d是/vshi相同/a的/ude1，/w或者/c根据/p版本/n不同/a会/v有/vyou略微/d差异/n。/w那么/c在/p接口测试/gi时/qt，/w就/d可以/v把/pbaui/gi要/v测试/gi的/ude1几/d十种/nz版本/n分类/gi抽象/gi出/vf一个/mq或者/c几个/nz版本/n接口测试/gi，/w而/cc客户端/gi的/ude1测试/gi仅仅/d需要/v在/pui/gi上/f进行/vn核心/n功能/gi验证/v和/cc适配/nz测试/gi，/w从而/c大大提高/i测试/gi效率/gi。/w如/v在/p飞信/gi测试过程/gi中/f大概/d会/v有/vyou15/nz个/q以上/f客户端/gi需要/v测试/gi，/w在/p测试过程/gi中/f又/d会/v根据/p情况/n选择/gi1/nz-/nz3/nz个/q版本/n的/ude1客户端/gi进行/vn测试/gi，/w那么/c在/p一个/mq大/a的/ude1版本/n测试/gi中/f累计/vd测试/gi客户端/gi达到/v30/nz个/q以上/f，/w其/rz工作量/n可想而知/vl；/w如果/c进行/vn接口测试/gi，/w通过/p对/p各个/rz客户端/gi和/cc不同/a版本/n分析/gi，/w其/rz接口/gi后台/gi通信协议/gi只有/c三种/nz（/w如下/vi图/gi所示/nz）/w，/w那么/c在/p测试过程/gi中/f只/d需要/v模拟三/nz个/q客户端/gi，/w即可/v完成/v对/p所有/b客户端/gi模拟/gi测试/gi，/w大大/d节省/v了/ule测试/gi时间/gi。/w另外/c测试/gi前移/v也/d使得/vi在/p开发/gi过程/gi中/f尽早/d尽快/d的/ude1发现/v问题/gi成为/v可能/v，/w从而/c加快/v版本/n迭代/gi速度/n。/w多/a系统集成/gi项目/gi接口测试/gi在/p互联网/gi时代/gi，/w任何/rz一个/mq系统/gi都/d不能/v孤立/a存在/v，/w需要/v和/cc其它/rz系统/gi进行/vn交互/gi。/w而/cc在/p大部分/n情况下/nz，/w /x这种/r多/a系统/gi之间/f的/ude1集群/gi测试/gi，/w很难/d等到/v所有/b项目/gi都/d配置/gi部署/gi完成/v才/d进行/vn测试/gi，/w那么/c就/d需要/v模拟/gi被/pbei测系统/n与/cc其他/rzv系统/gi的/ude1交互/gi（/w如下/vi图/gi所示/nz）/w。/w在/p模拟/gi测试/gi前/f，/w现/tg需要/v整理/gi分析/gi其/rz被/pbei测系统/n前置条件/gi和/cc被/pbei测系统/n发送/gi的/ude1请求/gi信息/gi；/w在/p模拟系统/n接收/gi到/v请求/gi信息/gi后/f，/w按照/p预先/d约定/v的/ude1信息/gi下发/v通知/gi给/p被/pbei测系统/n，/w被/pbei测系统/n接收/gi到/v下发/v通知/gi后/f，/w继续执行/n被/pbei测系统/n，/w完成/v一次/nz测试/gi模拟/gi。/w通过/p多/a系统/gi集群/gi的/ude1模拟/gi测试/gi，/w提高/v系统/gi的/ude1测试/gi覆盖率/n。/w通用/gi接口/gi（/w比如/vweb services/nz等/udeng）/w测试/gi和/cc自定义/nz对象/gi式/k接口测试/gi通用/gi接口/gi（/w比如/vweb services/nz等/udeng）/w测试/gi和/cc自定义/nz对象/gi式/k接口测试/gi（/w如/vsdk/nz接口/gi等/udeng）/w这/rzv两/nz种/q接口测试/gi在/p本质/n上/f没有/v多/a大/a的/ude1区别/gi，/w但/c其/rz在/p测试/gi实现/gi和/cc组织/gi上会/j有/vyou一定/b的/ude1差异/n，/w在/p此/rzs不/d详细/gi叙述/v。/w对于/p这/rzv两/nz种/q测试/gi，/w测试人员/n需/v按照/p协议/gi规范/gi设置/gi需要/v的/ude1测试/gi输入输出/gi参数/gi，/w然后/c按照/p约定/v的/ude1请求/gi式/k发送/gi请求/gi，/w然后/c在/p比对/d测试/gi结果/n。/w对于/p这类/r测试/gi，/w如果/c在/p接口/gi比较/gi少/a的/ude1情况/n向/p，/w建议/gi使用/gi测试代码/n直接/ad测试/gi；/w而/cc对于/p接口/gi较多/d，/w使用/gi较为/d频繁/a，/w根据/p情况/n可以/v开发/gi测试工具/nz或者/c自动化/gi工具/gi；/w对于/p使用/gi自动化测试/gi来说/uls，/w其/rz难点/gi是/vshi如何/ryv组织/gi设置/gi接口/gi的/ude1前置条件/gi，/w所以/c说/v对于/p这类/r测试/gi建议/gi最好/d使用/gi测试工具/nz而/cc不是/c自动化测试/gi。/w强/a交互/gi类/gi系统/gi接口测试/gi3./nz /x接口/gi收获/gi与/cc经验/gi通过/p对接口/n测试/gi使用/gi自动化/gi后/f，/w对/pserver/gi的/ude1测试/gi带来/v很/d多/a收获/gi。/w1./nz自动化测试/gi使得/vi测试/gi覆盖率/n提高/v10%/nz，/w通过/p自动化测试/gi实现/gi了/ule一/nz些/q原来/d不能/v测试/gi的/ude1用例/nz：/w比如/v心跳/vi，/w强制/vd短信/n、/w短信/n回复/v、/w消息/n稳定率/n（/w7/nz*/nz24/nz）/w测试/gi、/w电量/n、/w内存/gi等/udeng长时间/nz测试/gi。/w2./nz测试/gi效率/gi提升/gi50%/nz：/w自动化测试/gi覆盖/gi核心/n用例/nz和/cc单功能/b用/p例/n实现/gi100%/nz覆盖/gi，/w重要/a功能/gi70%/nz以上/f覆盖/gi，/w总体/n覆盖/gi达/v53%/nz；/w在/p测试/gi执行/v中/f，/wbvt/nz用例/nz、/w灰度/gi测试/gi以及/cc版本/n任务/gi测试/gi（/w版本/n任务/gi实现/gi手工/gi测试/gi与/cc自动化测试/gi统一/vn管理/gi，/w协调/gi工作/gi）/w；/w通过/p测试/gi实践/gi得出/v整体/n测试/gi效率/gi提升/gi50%/nz以上/f（/w说明/v：/w测试/gi脚本/gi在/p开发/gi单/b模块/gi时/qt一次/nz完成/v，/w对于/p协议/gi测试/gi不/d需要/v维护/gi成本/n。/w3./nz通过/p自动/d脚本/gi整理/gi，/w自动化测试/gi脚本/gi描述/gi的/ude1业务逻辑/gi分析/gi，/w其/rz业务/gi描述/gi已/d成为/v公司/nis最新/a最全/a的/ude1业务/gi资产/n库/n。/w通过/p对/p业务逻辑/gi分析/gi，/w优化/gi逻辑/n，/w大大/d提升/gi了/ule软件质量/gi，/w比如/v会话/v通过/p业务/gi分析/gi优化/gi消息/n成功率/n从/p99.9%/nz提升/gi到/v99.987%/nz在/p接口/gi测试过程/gi中/f，/w怎么/ryv像/v测试人员/n证明/v其/rz测试/gi结果/n是/vshi可信/a的/ude1，/w怎样才能/nz保证/v实施/gi自动化/gi过程/gi中/f不/d增加/v测试人员/n的/ude1工作量/n和/cc不/d改变/v测试人员/n原有/v工作/gi模式/gi。/w这些/rz都/d是/vshi考验/vn自动化测试/gi是否/v能够/v成功/a的/ude1最主要/nz因素/gi。/w在/p自动化/gi测试过程/gi中/f，/w如果/c保证/v测试/gi结果/n正确性/gi，/w在/p测试/gi实践中/nz有/vyou几/d条/q我/rr认为/v比较/gi好/a的/ude1经验/gi。/w1./nz测试/gi脚本/gi评审/gi：/w在/p编写/gi自动化测试/gi脚本/gi后/f，/w每个/r测试/gi脚本/gi必须/d通过/p评审/gi。/w测试/gi脚本/gi评审/gi虽然/c不能/v保证/v测试/gi脚本/gi完全正确/nz，/w但/c至少/d可以/v查出/v一/nz些/q比较/gi明显/a的/ude1业务逻辑/gi，/w同时/c也/d是/vshi使/v其/rz参与/gi评审/gi测试人员/n在/p内心/n不会/v对/p测试/gi脚本/gi的/ude1质量/gi感到/v恐慌/an和/cc不/d信任/vn。/w在/p评审/gi过程/gi中/f有/vyou几/d点/gi要/v注意/v：/w1./nz尽可能/d的/ude1让/v评审/gi业务/gi相关/vn的/ude1测试人员/n参与/gi；/w2./nz每次/r评审/gi时间/gi不/d超过/v1/nz个/q小时/n，/w时间/gi过程/gi容易/ad流于形式/vl；/w3/nz谁/ry提出/v问题/gi，/w谁/ry负责/v审查/vn。/w2./nz定时/d任务/gi检查/gi：/w通过/p评审/gi的/ude1信令/gi场景/gi加入/v定时/d任务/gi，/w连续/gi运行/gi监测/vn其/rz正确性/gi。/w在/p其/rz定时/d任务/gi执行/v过程/gi中/f，/w一般/ad会/v连续/gi执行/v一个月/nz，/w每天/r会/v安排/v固定/a人员/gi对/p测试/gi结果/n进行/vn分析/gi验证/v（/w一般/ad会/v安排/v参与/gi评审/gi的/ude1业务人员/nz，/w分析/gi时间/gi一般/ad不/d超过/v30/nz分钟/qt）/w。/w对于/p在/p连续/gi一周/nz以上/f且/c通过率/n高于/v93%/nz的/ude1任务/gi，/w安排/v进行/vn与/cc版本/n同步/gi测试/gi验证/v其/rz正确性/gi。/w3./nz与/cc测试/gi版本/n同步/gi：/w在/p版本/n测试/gi任务/gi同时/c，/w进行/vn自动化测试/gi，/w检查/gi其/rz脚本/gi的/ude1正确性/gi。/w4./nz测试/gi交付/v：/w通过/p评审/gi，/w最近两/nz周定时/nz任务/gi连跑/nz中/f通过率/n超过/v95%/nz，/wim/nz基础/gi功能/gi和/cc测试/gi模块/gi,/nz在/p版本/n任务/gi中/f测试/gi验证/v过/uguo两/nz次/qv以上/f在/p自动化/gi测试过程/gi中/f，/w /x尽可能/d不/d改变/v原有/v测试流程/gi，/w比如/v我们/rr在/p飞信/gi业务/gi测试过程/gi中/f，/w自动化测试/gi时/qt结合/v原有/v流程/gi（/w如下/vi图/gi）/w1/nz)/nz自动化/gi测试用例/gi和/cc手工/gi测试用例/gi实现/gi一/nz管理/gi，/w在/p编写/gi用/p例/n过程/gi中/f，/w直接/ad从/p测试工具/nz中/f导入/gi用/p例/n到/v自动化/gi平台/gi，/w同时/c在/p测试/gi管理工具/nz中/f标示出/n改用/v例/n已/d自动化/gi实现/gi。/w2/nz)/nz在/p有/vyou版本/n任务/gi分/qt过来/vf后/f，/w在/p测试/gi平台/gi建立/gi测试/gi任务/gi，/w同时/c自动/d在/p自动化/gi平台/gi生成/v一个/mq测试计划/gi。/w3/nz)/nz测试人员/n只/d需要/v测试/gi自动化/gi没有/v实现/gi的/ude1测试用例/gi，/w自动化测试/gi执行/v自动化/gi实现/gi的/ude1用例/nz，/w在/p执行/v完成/v后/f把/pba测试/gi结果/n自动/d导入到/v测试/gi平台/gi。/w4/nz)/nz测试人员/n根据/p测试/gi结果/n编写/gi测试报告/gi在/p自动化/gi测试过程/gi中/f要/v结合/v业务/gi进行/vn一/nz些/q定制/n化/v的/ude1测试/gi，/w比如/v在/p飞信/gi测试项目/n中/f，/w根据/p其/rz特点/n建立/gi了/ule数据池/nz及/cc灰度/gi测试/gi策略/gi和/cc二次连跑/nz机制/gi账号/gi池/ng及/cc灰度/gi测试/gi：/w：/w通过/p统一/vn账号/gi管理/gi，/w实现/gi对/p不同/a账号/gi的/ude1管理/gi（/w不同/a环境/n的/ude1账户/n、/w不同/asite/nz的/ude1账户/n管理/gi）/w，/w通过/p执行/v策略/gi，/w分/qt账户/n实现/gi功能/gi之间/f灰度/gi测试/gi二次连跑/nz：/w针对/gi协议/gi测试/gi的/ude1不确定/nz情况/n，/w设置/gi了/ule连跑/nz模式/gi，/w可以/v设置/gi不同/a的/ude1连跑/nz模式/gi（/w连跑/nz、/w二次连跑/nz、/w直到/v通过/p等/udeng）/w如有/c问题/gi请/v发邮件/n至/pwonew/nz1228/nz@/nz163./nzcom/nz接口测试/gi群/ng：/w接口测试/gi分享/gi群/ng /x群/ng号/q：/w126225381/nz