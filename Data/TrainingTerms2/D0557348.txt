#个人博客设计/gi之/uzhi博文归档/gi（/warchive/nz）/w
经历/gi一个月/nz，/w终于/d敲/v完/vi自己/rr个人/n博客/gi网站/gi的/ude1代码/gi了/ule，/w收获/gi挺/d大/a。/w这/rzv篇/q博文/nz讲讲/v在/p博文归档/gi设计/gi方面/n的/ude1收获/gi。/w在/p进行/vn表/n设计/gi的/ude1时候/n，/w自己/rr将/d博文/nz的/ude1添加/gi时间/gi设计/gi为/p时间/gi戳/v存储/gi，/w这样的话/l在/p存储/gi的/ude1时候/n，/w写入/gi速度/n会/v快/a一/nz些/q。/w在/p首页/gi进行/vn归档/vn的/ude1时候/n就/d需要/v用/p到/vmysql/gi中的/vfrom/nz_/nzunixtime/nz(/nzunix/gi_/nztimestamp/nz,/nzformat/nz)/nz函数/gi，/w通过/p这个/rz函数/gi对/p数据库/gi中的/v记录/gi进行/vn分组/gi，/w然后/c计数/vi，/w就/d可以/v得到/v在/p某段/nz时间/gi内/f所/usuo发表/v的/ude1的/ude1博文/nz总数/n。/wsql语句/gi如下/vi：/w使用/gismarty/nz模板/gi引擎/n在/p首页/gi显示/gi的/ude1结果/n如下/vi：/w /x在/p点/gi这个/rz链接/gi的/ude1时候/n，/w只要/c把/pba这个/rz时间段/gi通过/pget/gi方式/n传过去/v，/w然后/c在/psql语句/gi中/f同样/d用/pfrom/nz_/nzunixtime/nz转换/gi时间/gi戳/v就/d行/ng。/w /x做到/v这里/rzs，/w这个/rz文章/gi归档/vn功能/gi算是/v做完/v了/ule，/w不过/c这种/r处理/vn模式/gi应该/v效率/gi比较/gi低/a，/w如果/c博文/nz比较/gi多/a的话/udh，/w会/v很慢/d，/w同时/c读出来/v的/ude1部分/n数据/gi基本上/d不会/v改变/v，/w如果/c重复/gi去/vf读/v比较/gi浪费/gi服务器资源/nz。/w这时候/rzt可以/v用/ptp/gi框架/gi中的/vs/nz函数/gi进行/vn数据/gi的/ude1缓存/gi，/w如果/c真的/d访问量/nz那么/c多/a的话/udh，/w可以/v考虑/v使用/gi一/nz下/f高大/a上/f的/ude1memcache/gi和/ccredis/gi。/w /x另外/c，/w在/p数据库设计/gi字段/gi的/ude1时候/n，/w也/d可以/v为/p实现/gi这个/rz归档/vn功能/gi独立/a设计/gi一个/mq字段/gi，/w这个/rz字段/gi就/d存储/gi博文/nz发表/v的/ude1月份/n字符串/gi，/w这样/rzv在/p读取/gi的/ude1时候/n就/d不用/d这个/rzfrom/nz_/nzunixtime/nz（/w）/w函数/gi了/ule。/w以/p空间/n换/v时间/gi，/w虽然/c这/rzv有点/d违反/v数据表/gi设计/gi的/ude1“三/nz范式”/nz要求/n。/w /x