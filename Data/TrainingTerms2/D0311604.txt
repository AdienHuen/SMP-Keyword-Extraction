#机房/gi重构---为什么/nz要/v把/pba卡表/nz和/cc学生/gi表/n分开/vi
  /x这次/r的/ude1机房/gi收费/gi数据库/gi在/p重建/v的/ude1时候/n时候/n将/d之前/f的/ude1studetn/nz_/nzinfo/nz分为/v了/ulecard/nz_/nzinfo/nz和/ccstudent/nz_/nzinfo/nz，/w浅显/a的/ude1知道/v是/vshi为了/p给/p学生/gi和/cc卡/n之间/f解耦/gi合/v，/w但是/c究竟/d应该/v在/p窗体/gi和/cc代码/gi上/f如何/ryv设计/gi才能/n把/pba种/q思想/gi体现/v出来/vf，/w直到/v我/rr开始/v敲“/nz注册/gi学生/gi信息/gi”/w的/ude1时候/n才/d有/vyou了/ule自己/rr的/ude1见解/n。/w（/w欢迎/v和/cc大家/rr一起/s交流思想/n。/w）/w  /x首先/d，/w如图所示/i：/w   /x这个/rz页面/gi和/cc之前/f旧版本/ns系统/gi那个/rz页面/gi一样/uyy，/w在/p编写/gi代码/gi的/ude1时候/n，/w会/v发现/v当/p单击/v“存/nz盘”/nz时/qt，/w对/p两/nz个/q表/n student/nz_/nzinfo /nz和/cc card/nz_/nzinfo/nz中/f添加/gi记录/gi的/ude1时候/n“/w学生/gi”/w和/cc“卡”/nz还是/c被/pbei“/w捆绑/gi”/w在/p一起/s的/ude1，/w即/v添加/gi一个/mq新的/a卡/n不管/c是否/v能够/v对应/vi多/a个/q学/v神/n，/w或者/c是否/v已/d存在/v学生/gi信息/gi，/w都/d是/vshi需要/v重新/d再写/v一次/nz学生/gi的/ude1相关/vn信息/gi的/ude1（/w类/gi于/p“/w系/v别/d”/w、/w“/w班级/n”/w…/w…/w）/w，/w于是/cc回头/vi看/v自己/rr的/ude1数据库/gi关系/gi图/gi如下/vi：/w  /x我/rr想/v如果/c界面/gi不/d改变/v的话/udh，/w它/rr更/d应该/v对应/vi的/ude1是/vshi之前/f学生/gi和/cc卡不分为/nz两/nz张/q表/n的/ude1情况/n，/w而/cc我/rr这次/r的/ude1设计/gi理念/gi应该/v是/vshi：/w先/d添加/gi“/w学生/gi信息/gi”/w，/w然后/c添加/gi“卡/nz信息/gi”/w，/w在/p添加/gi卡/n信息/gi的/ude1时候/n通过/p选择/gi或者/c输入/v“学/nz号/q”/w来/vf实现/gi卡/n表/n和/cc学生/gi表/n之间/f的/ude1对应/vi（/wcard/nz_/nzinfo/nz中/fstudentno/nz为/p外键/gi，/w建立/gi两/nz张/q表/n的/ude1联系/gi）/w，/w这样/rzv就/d实现/gi了/ule“卡/nz表”/nz和/cc“/w学生/gi表”/nz的/ude1解耦/gi和/cc，/w就/d像/v上面/f数据库/gi关系/gi图/gi中/f，/w在/p添加/gi卡/n的/ude1时候/n是/vshi通过/pforeign key/nz来/vf实现/gi二者/rzv的/ude1关联/vn。/w  /x先/d看看/v相应/vi界面/gi：/w  /x注册/gi学生/gi信息/gi：/w  /x注册/gi卡/n信息/gi：/w /x下面/f具体分析/nz为什么/ryv把/pba注册/gi分为/v“/w注册/gi学生/gi信息/gi”/w和/cc“/w注册/gi卡/n信息/gi”/w /x（/w1/nz）/w为了/p更好/d的/ude1在/p界面/gi和/cc代码/gi中/f体现/v了/ule数据库/gi中/f“/w卡/n表”/nz和/cc“/w学生/gi表”/nz的/ude1分离/vi。/w  /x开始/v没有/v将/d其/rz分为/v两/nz个/q界面/gi的/ude1时候/n敲/v注册/gi学生/gi信息/gi的/ude1代码/gi很/d费劲/a，/w可以/v说/v关系/gi比较/gi乱/d，/w对应/vi的/ude1主外/b键理/nz不/d清/tg，/w感觉/gi数据库/gi虽然/c设置成/n了/ule两/nz张/q表/n，/w但是/c写起/v代码/gi来/vf还/d没有/v之前/f一条代码/nz方便/a，/w甚至/d考虑/v的/ude1东西/n要/v更多/ad，/w两张表/nz的/ude1耦合/vn更/d强/a了/ule。/w /x（/w2/nz）/w避免/v了/ule之前/f“/w卡/n”/w和/cc“/w学生/gi”/w捆绑/gi在/p一起/s进行/vn注册/gi的/ude1现象/n，/w如果/c一人/nz对应/vi多/a卡/n，/w在/p添加/gi卡/n的/ude1时候/n就/d通过/p选择/gi学号/nz来/vf绑定/gi学生/gi信息/gi，/w而/cc不是/c再次/d重复/gi的/ude1输入/v。/w /x（/w3/nz）/w当/p退/v卡/n的/ude1时候/n，/w在/p已经/d结账/gi的/ude1情况下/nz，/w将/d卡表/nz中/f信息/gi备份/gi到/v“/wcancelcard/nz”表/nz之后/f删除/gi“/wcard/nz_/nzinfo/nz”表/nz中/f对应/vid/nz的/ude1卡/n信息/gi，/w同时/c保留/v学生/gi表/n中/f相应/vi学生/gi信息/gi，/w再次/d添加/gi卡/n或者/c激活/gi这/rzv张/q卡/n的/ude1时候/n直接/ad输入/v之前/f的/ude1学号/nz就/d实现/gi再次/d绑定/gi而/cc不是/c重新/d输入/v学生/gi整体/n的/ude1信息/gi。/w（/w即/v学生/gi信息/gi是/vshi死/v的/ude1，/w通过/p注册/gi、/w退/v卡/n来/vf与/cc其/rz建立联系/n）/w  /x综上所述/c，/w注册/gi信息/gi的/ude1时候/n分为/v两/nz个/q窗体/gi来/vf注册/gi，/w注册/gi卡/n信息/gi对应/vi卡表/nz，/w注册/gi学生/gi对应/vi学生/gi表/n，/w二者/rzv通过/pcard/nz_/nzinfo/nz表/n中/fforeign key/nz搭建/v桥梁/n，/w这样/rzv设计/gi很/d像/v“桥/nz接/v模式/gi”/w中的/v设计/gi思想/gi，/w让/v卡/n和/cc学生/gi之间/f更加/d灵活/a而/cc不是/c被绑/v在/p一起/s。/w  /x下/f一篇/nz博客/gi将/d对/p“/w注册/gi、/w充/v、/w退/v卡/n”/w的/ude1思路/gi进行/vn梳理/v和/cc优化/gi，/w这样/rzv设计/gi的/ude1思想/gi在/p其中/rz的/ude1体现/v会/v让/v我/rr的/ude1代码/gi逻辑/n更/d清晰/a和/cc简单/a。/w that is all/nz./nz