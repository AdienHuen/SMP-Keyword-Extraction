#最大/gm子数组/gi问题/gi
这/rzv是/vshi一个/mq经典/gi算法/gi设计/gi题目/gi，/w虽然/c很早/d就/d见过/v这个/rz问题/gi，/w理解/gi过/uguo原理/gi，/w但/c一直/d没有/v实际/n实现/gi过/uguo，/w一个/mq算法/gi在/p实际/n实现/gi的/ude1过程/gi中/f总是/d会/v遇到/v一/nz些/q没有/v实现/gi的/ude1时候/n想不到/vl的/ude1问题/gi。/w在/p这里/rzs，/w通过/p三种/nz不同/a的/ude1方式/n的/ude1实现/gi，/w来/vf体会/gi算法/gi设计/gi的/ude1思想/gi和/cc降低/v程序运行/n实际/n的/ude1巧妙/a之处/r。/w题目/gi回顾/v输入/v：/w一个/mqn/nz个/q元素/gi的/ude1数组/gi，/w数组/gi元素/gi有/vyou正数/v和/cc负数/n输出/gi：/w一个/mq或/c多/a个/q连续/gi元素/gi组成/gi的/ude1子数组/gi，/w这个/rz子数组/gi的/ude1元素/gi之/uzhi和/cc是/vshi原数/nz组/n所有/b子数组/gi中/f最大/gm的/ude1。/w变换/gi：/w假设/gi有一个/nzn/nz天/qt的/ude1股票/n数据/gi，/w从/p这个/rz股票/n数据/gi数组/gi中/f找出/v一段/nz连续/gi时期/n，/w使得/vi这段/r时期/n的/ude1第一天/nz到/v最后/f一/nz天内/s股/q票价/n变化/gi的/ude1净/a上升/vi最大/gm。/w可以/v将/d每天/r的/ude1价/n与/cc前/f一/nz天/qt做/v差/a，/w然后/c就/d变换/gi为了/p上述/b最大/gm子数组/gi问题/gi。/w下面/f分别/d使用/gi三种/nz方法/gi实现/gi，/w每种/r方法/gi都/d比/p前/f一种/nz方法/gi更/d高效/b。/w直接/ad求解/gi根据/p问题/gi的/ude1描述/gi，/w很容易/nz可以/v求解/gi：/w通过/p两/nz层/gi循环/gi，/w对/p每个/r可能/v的/ude1连续/gi子数组/gi的/ude1和/cc进行/vn比较/gi，/w找出/v最大/gm的/ude1即可/v。/w这里/rzs返回/v为/p一个/mqvector/nz，/w第一个/gi元素/gi为/p子数组/gi的/ude1起始/gi下标/gi，/w第二个/nz元素/gi为/p子数组/gi的/ude1结尾/n下标/gi，/w第三/nz个/q元素/gi为/p子数组/gi的/ude1元素/gi和/cc。/w上述/b实现/gi过程/gi中/f虽然/c使用/gi了/ule第三层/nz循环/gi，/w但是/c第三层/nz循环/gi仅仅/d是/vshi为了/p求子/nz数组/gi元素/gi和/cc，/w与/cc前/f两/nz个/q循环/gi计数器/gi是/vshi依赖/v的/ude1，/w这个/rz在/p实现/gi过程/gi中/f很容易/nz造成/v误导/v，/w上述/b算法/gi的/ude1实际/n运行时间/gi为/po/nz(/nzn/nz^/nz2/nz)/nz。/w分治法/gi使用/gi二分/gi方法/gi，/w最大/gm子数组/gi在/p左/f半数/n组/n；/w在/p右/f半数/n组/n；/w跨越/v中/f点/gi的/ude1数组/gi。/w这/rzv中/f分治/gi方法/gi与/cc平面/gi上/f的/ude1最近点/nz对/p的/ude1分治/gi求解/gi方法/gi类/gi，/w最后/f的/ude1子问题/gi分解/gi到/v单个/b元素/gi组成/gi的/ude1数组/gi，/w可以/v直接/ad求解/gi。/w因此/c，/w关键问题/n就是/v求解/gi跨越/v中/f点/gi元素/gi的/ude1最大/gm子数组/gi即可/v。/w具体/a实现/gi如下/vi：/w实现/gi中/f遇到/v的/ude1问题/gi主要/b是/vshi对于/p右边/f界/n的/ude1取舍/vn。/w按照/p通常/d的/ude1习惯/n，/w右边/f界/n一般/ad取开/v区间/gi，/w左边界/nz去/vf闭区间/gm。/w但是/c，/w对于/p分治/gi的/ude1递归/gi算法/gi中/f，/w使用/gi两边/f都/d为/p闭区间/gm比较/gi好/a，/w在/p归并排序/gi、/w快速排序/gi算法/gi中都/ns类/gi。/w上述/b实现/gi中/f特意/d使用/gi了/ule右侧/f开区间/gm的/ude1方式/n，/w主要/b边界点/gm在/pcrosssubarray/nz函数/gi中的/v“/wfor /nz(/nzint i /nz=/nz m  /nz1/nz;/nz i  r/nz;/nz i/nz)/nz”/w，/w以及/ccmaxsubarray/nz中的/v“/wif /nz(/nzleft /nz=/nz=/nz right /nz-/nz /x1/nz)/nz”/w和/cc“/wcrossres /nz=/nz crosssubarray/nz(/nza/nz,/nz left/nz,/nz mid/nz-/nz1/nz,/nz right/nz)/nz;/nz”/w，/w以及/cc递归/gi调用/gi时/qt都/d传入/gimid/nz，/w第一个/gi表示/vmid/nz为/p开区间/gm不/d包括/vmid/nz，/w第二个/nz表示/v为/p闭区间/gm。/wright/nz都/d为/p开区间/gm，/w调用/gi方式/n为/p：/w动态规划/gi最大/gm子数组/gi是/vshi可以/v分解/gi求解/gi的/ude1，/w而且/c最优解/gi包含/v了/ule子问题/gi的/ude1解/v，/w因此/c存在/v最优/ad子结构/n。/w这个/rz方法/gi在/p编程/gi珠玑/nz一/nz书/gi中/f有/vyou提到/v，/w具体/a可以/v使用/gi如下/vi的/ude1最/d优子/nz结构/gi表达式/gi：/w具体/a实现/gi的/ude1过程/gi中/f遇到/v了/ule新的/a问题/gi就是/v如何/ryv动态/gi移动/vn子数组/gi的/ude1左右/f边界/n，/w具体/a实现/gi如下/vi：/w实现/gi要点/n就是/v分别/d保存/gi临时/gi的/ude1左右/f边界点/gm和/cc临时/gi的/ude1“/w最大/gm和/cc”/w，/w每一次/d迭代/gi与/cc实际/n的/ude1最大/gm和/cc比较/gi，/w如果/c增大/v了/ule就/d更新/gi实际/n的/ude1边界点/gm和/cc最大/gm和/cc。/w通过/p上述三/nz个/q方法/gi的/ude1实现/gi，/w不仅/c在/p实际/n实现/gi过程/gi中/f解决/v了/ule遇到/v的/ude1问题/gi，/w同时/c对/p算法/gi设计/gi的/ude1巧妙/a之处/r不禁/d感叹/v~/nz_/nz~/nz