#Ajax/nz与/cc传统/nWeb/nz开发/gi的/ude1异同/gi
传统web开发/gi模式/gi传统/n的/ude1web应用/gi交互/gi由/p用户/gi触发/gi一个/mqhttp/gi请求/gi到/v服务器/gi,/nz服务器/gi接收/gi并/cc对/p其/rz进行/vn处理/vn后/f再/d返回/v一个/mq新的/ahtml/gi页/q到/v客户端/gi。/w每当/p服务器/gi处理/vn客户端/gi提交/gi的/ude1请求/gi时/qt,/nz客户/n都/d只能/v空闲/gi等待/gi,/nz哪怕/c只是/d一次/nz很小/a的/ude1交互/gi、/w只需/v从/p服务器端/gi得到/v很/d简单/a的/ude1一个/mq数据/gi,/nz都会/n返回/v整个/b的/ude1html/gi页/q,/nz所以/c用户/gi每次/r都/d要/v浪费时间/nz和/cc带宽/n去/vf重新/d读取/gi整个/b页面/gi，/w这个/rz做法/n不但/c浪费/gi了/ule许多带宽/nz，/w由于/p每次/r应用/gi的/ude1交互/gi都/d需要/v向/p服务器发送/n请求/gi，/w响应/v时间/gi就/d依赖于/v服务器/gi的/ude1响应/v时间/gi，/w这/rzv也/d就/d导致/gi了/ule用户界面/gi的/ude1响应/v比/p本地/gi应用/gi慢/a得/ude3多/a。/w工作/gi原理图/gi数据/gi交互/gi流程图/gi用户/gi体验/v页面/gi操作/gi―/w提交/gi命令/gi―/w等待/gi服务器/gi响应/v―/w刷新/v页面/gi。/w响应/v慢/a，/w需要/v等待/gi；/w在/p多/a个/q页面/gi中/f进行/vn操作/gi。/wajax/gi开发模式/gi /x不同于/c传统开发/gi，/wajax/gi应用/gi采用/v的/ude1是/vshi异步/gi交互方式/l，/w不/d需要/v等待/gi服务器/gi响应/v，/w另外/cajax/gi应用/gi可以/v仅/d向/p服务器发送/n并/cc取回/v必需/vi的/ude1数据/gi，/w它/rr使用/gisoap/nz或/c其它/rz一/nz些/q基于/pxml/nz的/ude1webservice/nz接口/gi，/w并/cc在/p客户端/gi采用/vjavascript/gi处理/vn来自/v服务器/gi的/ude1响应/v。/w因为/c在/p服务器/gi和/cc浏览器/gi之间/f交换/gi的/ude1数据/gi大量/m减少/v，/w因此/c响应/v非常/d快/a。/w同时/c很/d多/a的/ude1处理/vn工作/gi可以/v在/p发出请求/n的/ude1客户端/gi机器/gi上/f完成/v，/w所以/cweb服务器/gi的/ude1处理/vn时间/gi也/d减少/v了/ule。/w工作/gi原理图/gi数据/gi交互/gi流程图/gi用户/gi体验/v页面/gi操作/gi―/w提交/gi命令/gi―/w继续/v页面/gi操作/gi―/w在/p原/b界面/gi上/f局部/n刷新/v。/w响应/v快/a不用/d等待/gi；/w在/p一个/mq页面/gi进行/vn操作/gi。/wajax/gi优缺点/gi通过/p上述/bajax/gi和/cc传统web开发/gi的/ude1对比/gi，/w接下来/vl总结/gi一/nz下/fajax/gi的/ude1优缺点/gi。/wajax/gi特点/n /x◎/nz使用/gixhtmlcss/nz来/vf标准化/vn呈现/v /x◎/nz使用/gixml/nz和/ccxslt/nz进行/vn数据交换/nz及/cc相关/vn操作/gi /x◎/nz使用/gixmlhttprequest/nz对象/gi与/ccweb/gi服务器进行/n异步/gi数据/gi通信/gi /x◎/nz使用/gijavascript/gi操作/gidom/gi进行/vn动态显示/n及/cc交互/gi /x◎/nz使用/gijavascript/gi绑定/gi和/cc处理/vn所有/b数据/giajax/gi优点/gi /x◎/nz局部/n刷新/v页面/gi,/nz减少/v用户/gi心理/gi和/cc实际/n的/ude1等待时间/gi,/nz带来/v更好/d的/ude1用户/gi体验/v /x◎/nz减轻/v服务器/gi的/ude1负担/n,/nz按/p需/v取/v数据/gi,/nz最大/gm程度/n的/ude1减少/v冗余/n请求/gi /x◎/nz基于/pxml/nz标准化/vn,/nz并/cc被/pbei广泛/a支持/v,/nz不/d需/v安装/gi插件/gi等/udeng /x◎/nz进一步/d促进/v页面/gi和/cc数据/gi的/ude1分离/vi /x◎/nz可以/v在/p页面/gi内/f与/cc服务器/gi通信/gi，/w使得/vi构建/gi智能化/gi的/ude1客户端/gi控件/gi成为/v可能/v。/w例如/v：/w数据表/gi，/w树/gi型/k控件/gi等/udeng各种/rz复杂/a的/ude1控件/gi。/wajax/gi缺点/gi /x◎/nzajax/gi依赖/v浏览器/gi的/ude1javascript/gi和/ccxml/nz，/w在/p编写/gi的/ude1时候/n要/v考虑/v对/p浏览器/gi的/ude1兼容性/gi。/w由于/pjavascript/gi和/ccdebug/gi的/ude1兼容性/gi，/w在/p编写程序/n的/ude1时候/n需要/v先/d进行/vn逻辑/n判断/gi，/w对/p不同/a浏览器/gi进行/vn不同/a处理/vn。/w◎/nzajax/gi只是/d局部/n刷新/v,/nz它/rr可能/v破坏/v浏览器/gi后退/vi按钮/n的/ude1正常/a行为/n浏览器/gi仅/d能/v记下/v历史记录/nz中的/v静态/gi页面/gi，/w在/p动态/gi更新/gi页面/gi的/ude1情况下/nz，/w用户/gi无法/v回到/v前/f一个/mq页面/gi状态/gi。/w一个/mq被/pbei完整/a读入/gi的/ude1页面/gi与/cc一个/mq已经/d被/pbei动态/gi修改/gi过/uguo的/ude1页面/gi之间/f的/ude1差别/n非常/d微妙/a；/w用户/gi通常/d都/d希望/v单击/v后退/vi按钮/n，/w就/d能够/v取消/v他们/rr的/ude1前/f一次/nz操作/gi，/w但是/c在/pajax/gi应用程序/nz中/f，/w却/d无法/v这样/rzv做/v。/w /x◎/nz一/nz些/q手持/v设备/gi（/w如/v手机/gi、/wpda/nz等/udeng）/w现在/t还/d不能/v很好/ad的/ude1支持/vajax/gi◎/nz对/p搜索引擎/gi支持/v较弱/d。/w如果/c使用不当/l，/wajax/gi会/v增大/v网络/gi数据/gi的/ude1流量/gi，/w从而/c降低/v整个/b系统/gi的/ude1性能/gi。/w◎/nz破坏/v程序/gi的/ude1异常处理/gi机制/gi。/w ajax/nz./nzdll/nz，/wajaxpro/nz./nzdll/nz等/udeng这些/rzajax/gi框架/gi是/vshi会/v破坏/v程序/gi的/ude1异常/gi机制/gi的/ude1。/w◎/nzajax/gi的/ude1安全性/gi低/aajax/gi技术/gi给/p用户/gi带来/v很好/ad的/ude1用户/gi体验/v的/ude1同时/c也/d对/pit/gi企业/gi带来/v了/ule新的/a安全/gi威胁/gi，/wajax/gi技术/gi就/d如同/v对/p企业/gi数据/gi建立/gi了/ule一个/mq直接/ad通道/n。/w这/rzv使得/vi开发者/gi在/p不经意/a间/f会/v暴露/v比/p以前/f更多/ad的/ude1数据/gi和/cc服务器/gi逻辑/n。/wajax/gi的/ude1逻辑/n可以/v对/p客户端/gi的/ude1安全/gi扫描/gi技术/gi隐藏/v起来/vf，/w允许/v黑客/gi从/p远端/nz服务器/gi上/f建立/gi新的/a攻击/gi。/w还有/vajax/gi也/d难以避免/nz一/nz些/q已知/nz的/ude1安全/gi弱点/n，/w诸如/v跨/v站点/gi脚步/n攻击/gi、/wsql注入/gi攻击/gi和/cc基于/pcredentials/nz的/ude1安全漏洞/nz等等/udeng。/wajax/gi极大/a地/ude2改善/v了/uleweb应用/gi的/ude1可用性/gi和/cc用户/gi的/ude1交互/gi体验/v，/w并/cc得到/v了/ule用户/gi和/cc市场/gi的/ude1广泛/a认可/vn。/w我们/rr可以/v说/v，/wajax/gi就是/v用户/gi和/cc市场/gi的/ude1选择/gi。/w看到/v几张/n非常/d棒/ng的/ude1表/n总结/gi，/w直接/ad粘贴/v过来/vf分享/gi一下/m。/w*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz*/nz