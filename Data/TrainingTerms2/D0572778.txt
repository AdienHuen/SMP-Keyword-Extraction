#常用算法/gi
递归/gi与/cc分治/gi策略?将/nz求出/v的/ude1小规模/d的/ude1问题/gi的/ude1解/v合并/gi为/p一个/mq更大/d规模/gi的/ude1问题/gi的/ude1解/v，/w自底/nz向上/vi逐步/d求出/v原来/d问题/gi的/ude1解/v。/w回溯法/gi：/w为了/p避免/v生成/v那些/rz不/d可能/v产生/v最佳解/l的/ude1问题/gi状态/gi，/w要/v不断/d地/ude2利用/v限界/n函数/gi(/nzbounding function/nz)/nz来/vf处死/v那些/rz实际上/d不/d可能/v产生/v所需/nz解/v的/ude1活/v结点/gm，/w以/p减少/v问题/gi的/ude1计算/gi量/n。/w具有/v限界/n函数/gi的/ude1深度/gi优先/vd生成/v法/n称为/v回溯法/gi动态规划/gi算法/gi与/cc分治法/gi类/gi，/w其/rz基本/a思想/gi也/d是/vshi将/d待/vi求解/gi问题/gi分解成/n若/c干个子/nz问题/gi。/w如果/c能够/v保存/gi已/d解决/v的/ude1子问题/gi的/ude1答案/gi，/w而/cc在/p需要/v时/qt再/d找出/v已/d求得/v的/ude1答案/gi，/w就/d可以/v避免/v大量/m重复/gi计算/gi，/w从而/c得到/v多项式/gi时间/gi算法/gi。/w贪心算法/gi总是/d作出/v在/p当前/t看来/v最好/d的/ude1选择/gi。/w也/d就是说/c贪心算法/gi并不/d从/p整体/n最优/ad考虑/v，/w它/rr所/usuo作出/v的/ude1选择/gi只是/d在/p某种意义/nz上/f的/ude1局部/n最优/ad选择/gi。/w求解目标/gi：/w回溯法/gi的/ude1求解目标/gi是/vshi找出/v解/v空间/n树/gi中/f满足/v约束条件/gi的/ude1所有/b解/v，/w而/cc分支/n限界法/nz的/ude1求解目标/gi则/d是/vshi找出/v满足/v约束条件/gi的/ude1一个解/nz，/w或/c是/vshi在/p满足/v约束条件/gi的/ude1解/v中/f找出/v在/p某种意义/nz下/f的/ude1最优解/gi。/w搜索方式/gi的/ude1不同/a：/w回溯法/gi以/p深度/gi优先/vd的/ude1方式/n搜索/gi解/v空间/n树/gi，/w而/cc分支限界/gi法则/gi以/p广度优先/gi或以/c最小/a耗费/v优先/vd的/ude1方式/n搜索/gi解/v空间/n树/gi。/w /x