#Nginx/gi和/cclvs/gi在/p负载均衡/gi方面/n的/ude1对比/gi
lvs/gi和/cc都/d可以/v用作/v多/a机/ng负载/gi的/ude1方案/gi，/w它们/rr各/rz有/vyou优缺/nz，/w在/p生产/gi环境/n中/f需要/v好好/d分析/gi实际/n情况/n并/cc加以/vx利用/v。/w /x首先/d提醒/v，/w做/v技术/gi切/v不可人云亦云/nz，/w我/rr云/gi即/v你/rr云/gi；/w同时/c也/d不可/v太/d趋向/v保守/a，/w过于/d相信/v旧有/b方式/n而/cc等/udeng别人/rr来/vf帮/v你/rr做/v垫/v被/pbei测试/gi。/w把/pba所有/b即时/d听说/v到/v的/ude1好/a东西/n加以/vx钻研/v，/w从而/c提高/v自己/rr对/p技术/gi的/ude1认知/vn和/cc水平/n，/w乃是/v一个/mq好习惯/nz。/w下面/f来/vf分析/gi一/nz下/f两者/rzv：/w一/nz、/wlvs/gi的/ude1优势/gi：/w1/nz、/w抗/v负载/gi能力/gi强/a，/w因为/clvs/gi工作方式/gi的/ude1逻辑/n是/vshi非常/d之/uzhi简单/a，/w而且/c工作/gi在/p网络/gi4/nz层/gi仅/d做/v请求/gi分发/v之用/r，/w没有/v流量/gi，/w所以/c在/p效率/gi上/f基本/a不/d需要/v太/d过/uguo考虑/v。/w在/p我/rr手里/s的/ude1lvs/gi，/w仅仅/d出过/v一次/nz问题/gi：/w在/p并发/gi最高/a的/ude1一小/d段/q时间/gi内/f均衡器/gi出现/v丢包/nz现象/n，/w据分析/nz为/p网络/gi问题/gi，/w即/v网卡/gi或/clinux/gi2.4/nz内核/gi的/ude1承载能力/nz已/d到/v上限/n，/w内存/gi和/cccpu/gi方面/n基本/a无/v消耗/gi。/w2/nz、/w配置/gi性/ng低/a，/w这/rzv通常/d是/vshi一大/n劣势/n，/w但/c同时/c也/d是/vshi一大/n优势/gi，/w因为/c没有/v太多/ad可/v配置/gi的/ude1选项/gi，/w所以/c除了/p增减/vn服务器/gi，/w并不需要/l经常/d去/vf触碰/v它/rr，/w大大减少/i了/ule人/n为/p出错/gi的/ude1几率/n。/w3/nz、/w工作/gi稳定/an，/w因为/c其/rz本身/rz抗/v负载/gi能力/gi很强/d，/w所以/c稳定性/n高/a也/d是/vshi顺理成章/vl，/w另外/c各种/rzlvs/gi都/d有/vyou完整/a的/ude1双机/n热备/nz方案/gi，/w所以/c一点/m不用/d担心/v均衡器/gi本身/rz会/v出/vf什么/ry问题/gi，/w节点/gi出现/v故障/gi的话/udh，/wlvs/gi会/v自动/d判别/v，/w所以/c系统/gi整体/n是/vshi非常/d稳定/an的/ude1。/w4/nz、/w无/v流量/gi，/w上面/f已经/d有所/v提及/v了/ule。/wlvs/gi仅仅/d分发/v请求/gi，/w而/cc流量/gi并不/d从/p它/rr本身/rz出去/vf，/w所以/c可以/v利用/v它/rr这/rzv点/gi来/vf做/v一/nz些/q线路/n分流/gi之用/r。/w没有/v流量/gi同时/c也/d保住/v了/ule均衡器/gi的/ude1io/gi性能/gi不会/v受到/v大/a流量/gi的/ude1影响/gi。/w5/nz、/w基本上/d能/v支持/v所有/b应用/gi，/w因为/clvs/gi工作/gi在/p4/nz层/gi，/w所以/c它/rr可以/v对/p几乎/d所有/b应用/gi做/v负载均衡/gi，/w包括/vhttp/gi、/w数据库/gi、/w聊天室/nz等等/udeng。/w另/rz：/wlvs/gi也/d不是/c完全/ad能/v判别/v节点/gi故障/gi的/ude1，/w譬如/v在/pwlc/nz分配/gi方式/n下/f，/w集群/gi里/f有/vyou一个/mq节点/gi没有/v配置/givip/nz，/w会/v使/v整个/b集群/gi不能/v使用/gi，/w这时/rzt使用/giwrr/nz分配/gi方式/n则/d会/v丢掉/v一台机/nz。/w目前/t这个/rz问题/gi还/d在/p进一步/d测试/gi中/f。/w所以/c，/w用/plvs/gi也/d得/ude3多多/d当心/v为/p妙。二/nz、/wnginx/gi和/cclvs/gi作/v对比/gi的/ude1结果/n1/nz、/wnginx/gi工作/gi在/p网络/gi的/ude17/nz层/gi，/w所以/c它/rr可以/v针对/gihttp/gi应用/gi本身/rz来/vf做/v分流/gi策略/gi，/w比如/v针对/gi域名/gi、/w目录/gi结构/gi等/udeng，/w相比之下/vllvs/gi并不/d具备/v这样/rzv的/ude1功能/gi，/w所以/cnginx/gi单凭/d这/rzv点/gi可/v利用/v的/ude1场合/n就/d远/a多于/vlvs/gi了/ule；/w但/cnginx/gi有/vyou用/p的/ude1这些/rz功能/gi使/v其/rz可/v调整/vn度/qv要/v高于/vlvs/gi，/w所以/c经常/d要/v去/vf触碰/v触碰/v，/w由/plvs/gi的/ude1第/mq2/nz条/q优点/gi看/v，/w触碰/v多/a了/ule，/w人/n为/p出/vf问题/gi的/ude1几率/n也/d就/d会/v大/a。/w2/nz、/wnginx/gi对/p网络/gi的/ude1依赖/v较小/d，/w理论上/nz只要/cping/gi得/ude3通/v，/w网页/gi访问/gi正常/a，/wnginx/gi就/d能/v连得/v通/v，/wnginx/gi同时/c还/d能/v区分/v内外/f网/n，/w如果/c是/vshi同时/c拥有/v内外/f网/n的/ude1节点/gi，/w就/d相当于/v单机/n拥有/v了/ule备份/gi线路/n；/wlvs/gi就/d比较/gi依赖于/v网络/gi环境/n，/w目前/t来看/u服务器/gi在/p同一/b网段/gi内/f并且/clvs/gi使用/gidirect/nz方式/n分流/gi，/w效果/gi较/d能/v得到/v保证/v。/w另外/c注意/v，/wlvs/gi需要/v向/p托管/vn商/vg至少/d申请/v多一个/nzip/gi来/vf做/vvisual ip/nz，/w貌/ng是/vshi不能/v用/p本身/rz的/ude1ip/gi来/vf做/vvip/nz的/ude1。/w要/v做好/vlvs/gi管理员/gi，/w确实/ad得/ude3跟进/v学习/gi很/d多/a有关/vn网络通信/gi方面/n的/ude1知识/gi，/w就/d不再/d是/vshi一个/mqhttp/gi那么/c简单/a了/ule。/w3/nz、/wnginx/gi安装/gi和/cc配置/gi比较简单/l，/w测试/gi起来/vf也/d很/d方便/a，/w因为/c它/rr基本/a能/v把/pba错误/gi用/p日志/gi打印/v出来/vf。/wlvs/gi的/ude1安装/gi和/cc配置/gi、/w测试/gi就要/d花/n比较/gi长/a的/ude1时间/gi了/ule，/w因为/c同上/vi所述/nz，/wlvs/gi对/p网络/gi依赖/v比较/gi大/a，/w很/d多/a时候/n不能/v配置/gi成功/a都/d是因为/c网络/gi问题/gi而/cc不是/c配置/gi问题/gi，/w出/vf了/ule问题/gi要/v解决/v也/d相应/vi的/ude1会/v麻烦/an得/ude3多/a。/w4/nz、/wnginx/gi也/d同样/d能/v承受/v很高/d负载/gi且/c稳定/an，/w但/c负载/gi度/qv和/cc稳定/an度差/nzlvs/gi还有/v几个/nz等级/n：/wnginx/gi处理/vn所有/b流量/gi所以/c受限于/l机器/giio/gi和/cc配置/gi；/w本身/rz的/ude1bug/gi也/d还是/c难以避免/nz的/ude1；/wnginx/gi没有/v现成/b的/ude1双机/n热备/nz方案/gi，/w所以/c跑/v在/p单机/n上/f还是/c风险/gi较大/d，/w单/b机上/s的/ude1事情/n全都/d很难说/vl。/w5/nz、/wnginx/gi可以/v检测/gi到/v服务器/gi内部/f的/ude1故障/gi，/w比如/v根据/p服务器/gi处理/vn网页/gi返回/v的/ude1状态/gi码/v、/w超时/v等等/udeng，/w并且/c会/v把/pba返回/v错误/gi的/ude1请求/gi重新/d提交/gi到/v另一个/nz节点/gi。/w目前/tlvs/gi中/fldirectd/nz也/d能/v支持/v针对/gi服务器/gi内部/f的/ude1情况/n来/vf监控/gi，/w但/clvs/gi的/ude1原理/gi使/v其/rz不能/v重发/gi请求/gi。/w重发/gi请求/gi这/rzv点/gi，/w譬如/v用户/gi正在/d上传/v一个/mq文件/gi，/w而/cc处理/vn该/rz上传/v的/ude1节点/gi刚好/d在/p上传/v过程/gi中/f出现/v故障/gi，/wnginx/gi会/v把/pba上/f传切/nz到/v另一台/nz服务器/gi重新处理/n，/w而/cclvs/gi就/d直接/ad断掉/nz了/ule，/w如果/c是/vshi上传/v一个/mq很大/d的/ude1文件/gi或者/c很/d重要/a的/ude1文件/gi的话/udh，/w用户/gi可能会/nz因此/c而/cc恼火/a。/w6/nz、/wnginx/gi对/p请求/gi的/ude1异步/gi处理/vn可以/v帮助/v节点/gi服务器/gi减轻/v负载/gi，/w假如/c使用/giapache/gi直接/ad对外/vn服务/gi，/w那么/c出现/v很/d多/a的/ude1窄/a带/v链接/gi时/qtapache/gi服务器/gi将/d会/v占用/v大量/m内存/gi而/cc不能/v释放/gi，/w使用/gi多一个/nznginx/gi做/vapache/gi代理/gi的话/udh，/w这些/rz窄/a带/v链接/gi会/v被/pbeinginx/gi挡住/v，/wapache/gi上/f就/d不会/v堆积/v过多/d的/ude1请求/gi，/w这样/rzv就/d减少/v了/ule相当多/nz的/ude1内存/gi占用/v。/w这/rzv点/gi使用/gisquid/gi也/d有/vyou相同/a的/ude1作用/gi，/w即使/csquid/gi本身/rz配置/gi为/p不/d缓存/gi，/w对/papache/gi还是/c有/vyou很大/d帮助/v的/ude1。/wlvs/gi没有/v这些/rz功能/gi，/w也/d就/d无法/v能/v比较/gi。/w7/nz、/wnginx/gi能/v支持/vhttp/gi和/ccemail/nz（/wemail/nz的/ude1功能/gi估计/gi比较/gi少/a人/n用/p）/w，/wlvs/gi所/usuo支持/v的/ude1应用/gi在/p这/rzv点/gi上会/j比/pnginx/gi更多/ad。/w在/p使用/gi上/f，/w一般/ad最/d前端/gi所/usuo采取/v的/ude1策略/gi应/v是/vshilvs/gi，/w也/d就是/vdns/nz的/ude1指向/v应为/vlvs/gi均衡器/gi，/wlvs/gi的/ude1优点/gi令/v它/rr非常适合/i做/v这个/rz任务/gi。/w重要/a的/ude1ip/gi地址/gi，/w最好/d交由/vlvs/gi托管/vn，/w比如/v数据库/gi的/ude1ip/gi、/wwebservice/nz服务器/gi的/ude1ip/gi等等/udeng，/w这些/rzip/gi地址/gi随着/p时间推移/nz，/w使用/gi面会/n越来越/d大/a，/w如果/c更换/vip/gi则/d故障/gi会/v接踵而至/vl。/w所以/c将/d这些/rz重要/aip/gi交给/vlvs/gi托管/vn是/vshi最为/d稳妥/a的/ude1，/w这样/rzv做/v的/ude1唯一/b缺点/gi是/vshi需要/v的/ude1vip/nz数量/n会/v比较/gi多/a。/wnginx/gi可/v作为/plvs/gi节点/gi机器/gi使用/gi，/w一/nz是/vshi可以/v利用/vnginx/gi的/ude1功能/gi，/w二是/nz可以/v利用/vnginx/gi的/ude1性能/gi。/w当然/d这一层面/nz也/d可以/v直接/ad使用/gisquid/gi，/wsquid/gi的/ude1功能/gi方面/n就/d比/pnginx/gi弱/a不/d少/a了/ule，/w性能/gi上/f也/d有所/v逊色/a于/pnginx/gi。/wnginx/gi也/d可/v作为/p中层/f代理/gi使用/gi，/w这/rzv一/nz层面/nnginx/gi基本上/d无/v对手/n，/w唯一/b可以/v撼动/vnginx/gi的/ude1就/d只有/clighttpd/nz了/ule，/w不过/clighttpd/nz目前/t还/d没有/v能/v做到/vnginx/gi完全/ad的/ude1功能/gi，/w配置/gi也/d不/d那么/c清晰/a易/ad读/v。/w另外/c，/w中层/f代理/gi的/ude1ip/gi也/d是/vshi重要/a的/ude1，/w所以/c中层/f代理/gi也/d拥有/v一个/mqvip/nz和/cclvs/gi是/vshi最/d完美/a的/ude1方案/gi了/ule。/wnginx/gi也/d可/v作为/p网页/gi静态/gi服务器/gi，/w不过/c超出/v了/ule本文/r讨论/gi的/ude1范畴/n，/w简单/a提/v一/nz下/f。/w具体/a的/ude1应用/gi还/d得/ude3具体分析/nz，/w如果/c是/vshi比较/gi小/a的/ude1网站/gi（/w日/bpv/nz1000/nz万/nz）/w，/w用/pnginx/gi就/d完全/ad可以/v了/ule，/w如果/c机器/gi也/d不/d少/a，/w可以/v用/pdns/nz轮询/nz，/wlvs/gi所/usuo耗费/v的/ude1机器/gi还是/c比较/gi多/a的/ude1；/w大型网站/gi或者/c重要/a的/ude1服务/gi，/w机器/gi不/d发愁/v的/ude1时候/n，/w要/v多多/d考虑/v利用/vlvs/gi。/w