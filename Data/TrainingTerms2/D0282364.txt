#Git/gi在/piOS/gi开发/gi中的/v使用/gi
  /x原文/n出自/v：/w请/v阅读/gi原文/n！/w！/w！/w  git/nz在/pios/gi开发/gi中的/v使用/gi在/p开发/gi中/f，/w很/d多/a公司/nis对/p项目/gi的/ude1版本控制/gi管理/gi都/d使用/gi了/ule，/w当然/d也/d有/vyou部分/n公司/nis使用/gi的/ude1是/vshi。/w当年/t我/rr最初/d接触/v的/ude1是/vshi，/w觉得/v使用/gi起来/vf挺/d方便/a的/ude1，/w但是/c每次/r切/v分支/n都/d需要/v下载/gi一份/nz新的/a代码/gi起来/vf，/w这/rzv实在/d太麻烦/nz了/ule，/w而且/c公司/nis的/ude1网络/gi下载/gi一个/mq项目/gi的/ude1所有/b资源/gi起来/vf也/d有数/a百/nz，/w这/rzv还用/v工作/gi么/y？/w当年/t，/w第一次/nz听说/v的/ude1时候/n，/w就/d听说/v是/vshi使用/gi来/vf管理/gi的/ude1，/w可是/c那时/rzt的/ude1我/rr感觉/gi好/a复杂/a，/w不/d知道/v如何/ryv入手/vi。/w如今/t，/w对/p的/ude1使用/gi可以/v说/v是/vshi很/d熟练/a了/ule，/w不管/c是/vshi使用/gi命令/gi操作/gi还是/c直接/ad使用/gi界面/gi工具/gi操作/gi。/w就让/v我/rr带着/vn还/d不会/v使用/gi的/ude1同志/n，/w跨过/v那些/rz我/rr曾经/d走过/gi的/ude1坑/n…/w创建/gi新仓库/ns如果/c我们/rr在/p本/rz机上/s想要/v创建/gi一个/mq新的/a仓库/gi，/w可以/v直接/ad使用/gi下面/f的/ude1命令/gi：/w还有/v一种/nz命令/gi可以/v创建/gi仓库/gi：/w我/rr相信/v大家/rr一定会/nz疑问/n，/w这/rzv两者/rzv有/vyou什么/ry区别/gi呢/y？/w从/p字面上/n看/v，/w就是/v赤裸裸/z的/ude1意思/n，/w也/d就是说/c生成/v用于/v记录/gi版本/n库/n历史记录/nz的/ude1目录/gi下面/f的/ude1文件/gi而/cc不会/v包含/v实际/n项目/gi源/ng文件/gi的/ude1拷贝/gi。/w进入/v版本/n目录/gi,/nz会/v发现/v只有/c目录/gi下/f的/ude1文件/gi。/w这个/rz版本/n库/n里面/f的/ude1文件/gi都/d是/vshi目录/gi下面/f的/ude1文件/gi,/nz把/pba原本/d在/p目录/gi里面/f的/ude1文件/gi放在/v版本/n库/n的/ude1根/n目录/gi下面/f;/nz换句话说/c,/nz不/d使用/gi选项/gi时/qt,/nz会/v生成/v目录/gi以/p及其/cc下/f的/ude1版本/n历史记录/nz文件/gi,/nz这些/rz版本/n历史记录/nz文件/gi就/d存放在/v目录/gi下/f;/nz而/cc使用/gi选项/gi时/qt,/nz不再/d生成/v./nzgit/gi目录/gi,/nz而是/c只/d生成/v./nzgit/gi目录/gi下面/f的/ude1版本/n历史记录/nz文件/gi,/nz这些/rz版本/n历史记录/nz文件/gi也/d不再/d存放在/v目录/gi下面/f,/nz而是/c直接/ad存放在/v版本/n库/n的/ude1根/n目录/gi下面/f。/w这么/rz多/a说明/v是不是/v头晕/vi了/ule？/w我们/rr来来/v测试/gi一下/m：/w这里/rzs在/p桌面/gi创建/gi一个/mq目录/gi叫/vi，/w进入/v到/v目录/gi下/f，/w然后/c执行/v来/vf初始化/v一个/mq仓库/gi。/w然后/c，/w就/d会/v生成/v一个/mq目录/gi，/w然后/c查看/gi当前目录/gi是否/v有/vyou文件/gi？/w第一个/gi命令/gi是不是/v什么/ry也/d没有/v？/w是/vshi的/ude1，/w默认/v目录/gi是/vshi隐藏/v的/ude1。/w我们/rr进入/v到/v目录/gi下/f，/w查看/gi：/w下面/f简单/a说明/v一/nz下/f这/rzv几/d个/q东东/ns分别/d干嘛/nz用/p：/w是/vshi个头/n指针/gi，/w在/p处理/vn版本/n切换/vn时/qt，/w就是/v这个/rz指针/gi前移/v、/w后移/vn等/udeng，/w因此/c只/d会/v生成/v快照/gi而已/y，/w不会/v重新/d下载/gi完整/a的/ude1一份/nz代码/gi，/w所以/c切换/vn只/d需要/v几/d秒钟/qt就/d可以/v在/p不同/a的/ude1分支/n上/f开发/gi了/ule。/w是不是/v很/d方便/a？/w是/vshi配置文件/gi，/w想要/v看看/v内部/f有/vyou什么/ry东西/n，/w可以/v直接/ad查看/gi。/w叫/vi钩子/n，/w主要/b是/vshi用于/v控制/vn、/w等/udeng操作/gi动作/gi，/w若/c需要/v深入/ad了解/v，/w可/v百度/ntc，/w这个/rz东西/n也/d是/vshi有/vyou很深/d的/ude1学问/n的/ude1。/w是/vshi存储/gi所有/b的/ude1对象/gi，/w关于/p这个/rz也/d可以/v百度/ntc阅读/gi相关文章/ns，/w内容/gi也/d很/d多/a。/w自然/n是/vshi分支/n的/ude1意思/n，/w用于/v管理/gi分支/n，/w里面/f会/v有所有/nz的/ude1分支/n。/w自然/n是/vshi描述/gi信息/gi这个/rz目录/gi就/d不/d清楚/a具体/a是/vshi干嘛/nz用/p了/ule这个/rz目录/gi有/vyou和/cc，/w前者/rzv不/d清楚/a其/rz用意/n，/w后者/rzv就是/v标签/gi，/w比如/v我们/rr支持/v的/ude1开源库/nz中/f升级/vi就/d需要/v设置/gi，/w对应/vi版本/n。/w用/p初始化/v的/ude1版本/n库/n，/w用户/gi可/v在/p该/rz目录/gi下/f执行/v所有/b操作/gi，/w但/c别的/rzv用户/gi在/p将/d上来/vf的/ude1时候/n容易/ad出现/v冲突/gi。/w因此/c，/w实际/n中会/j将/d远程/gi服务器端/gi创建/gi一个/mq仓库/gi时/qt，/w才/d会/v使用/gi，/w而/cc我们/rr个别/a用户/gi在/p创建/gi仓库/gi时/qt，/w不/d使用/gi。/w  /x|/nz此处/s省略/v…/w请/v阅读/gi原文/n