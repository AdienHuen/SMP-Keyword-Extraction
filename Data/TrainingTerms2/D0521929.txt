#设计模式/nz系列/n―/w―/w装饰模式/gi
    /x装饰模式/gi学/v完好/a久/a了/ule，/w一直/d都/d没有/v写/v东西/n。/w感觉/gi自己/rr对/p装饰模式/gi的/ude1理解/gi不/d太/d深刻/a。/w    /x拖/v了/ule几天后/nz，/w我/rr突然/ad发现/v―/w―/w再不/d写/v我/rr就要/d把/pba装饰模式/gi忘光/v了/ule，/w于是/cc就/d写/v一下/m吧/y。/w自己/rr的/ude1一/nz点点/v比较/gi浅显/a的/ude1见解/n，/w等/udeng以后/f研究/gi深刻/a后/f再往/d上/f补/v吧/y。/w    /x装饰模式/gi的/ude1概念/gi    /x装饰模式/gi，/w动态/gi的/ude1给/p一个/mq对象/gi添加/gi一/nz些/q额外/b的/ude1职责/gi，/w就/d增加/v功能/gi来说/uls，/w装饰模式/gi比/p生成/v子类/gm更为/d灵活/a。/w    /x类图/gi        /x作用/gi    /x通过/p这/rzv张/q图/gi，/w我们/rr可以/v看出/vcomponent/nz类/gi中/f，/wconcretecomponent/nz类/gi是/vshi我们/rr的/ude1具体/a的/ude1功能/gi实现/gi的/ude1对象/gi，/w比如说/vl我们/rr定义/gi一个/mq厨房/n，/w厨房/n的/ude1主要/b方法/gi就是/v，/w可以/v提供/v做饭/vi的/ude1地方/n，/w但是/c厨师/nnt会/v经常性/n的/ude1更换/v人员/gi。/w这时候/rzt，/w如果/c每/rz更换/v一次/nz人员/gi都/d重新/d写/v一个子/nz类/gi的话/udh，/w那么/c子类/gm就/d会/v爆炸性/n的/ude1增加/v。/w这时/rzt我们/rr就/d需要/v用/p到/v装饰模式/gi去/vf解决/v这个/rz问题/gi。/w    /x我们/rr把/pba类/gi的/ude1主体/n功能/gi写/v在/pconcretecomponent/nz类/gi里/f，/w然后/c让/vdecorator/gi类/gi去/vf调用/giconcretecomponent/nz类/gi里/f的/ude1对象/gi，/w然后/c通过/pconcretedecortora/nz类/gi与/ccconcretedecortorb/nz类/gi来/vf给/p这个/rz对象/gi动态/gi的/ude1添加/gi一/nz些/q灵活/a的/ude1组合/gi功能/gi。/w    /x这/rzv就是/v为什么/ryv我们/rr要/v使用/gi装饰模式/gi的/ude1原因/n之一/rz。/w    /x优缺点/gi    /x装饰模式/gi的/ude1优点/gi是/vshi将/d类/gi中的/v核心/n功能/gi和/cc装饰/gi功能区/nz分开/vi了/ule，/w减少/v了/ule类/gi的/ude1分/qt这样/rzv对/p代码/gi进行/vn维护/gi时/qt更加/d的/ude1方便/a和/cc简单/a。/w装饰模式/gi的/ude1不足之处/i就是/v使/v代码/gi的/ude1复杂程度/n增加/v了/ule。/w装饰模式/gi中/f虽然/c子类/gm少/a了/ule，/w但是/c小类/nz变/v多/a了/ule。/w这/rzv也/d是/vshi没有/v办法/gi的/ude1。/w    /x关于/p装饰模式/gi，/w还要/d在/p研究/gi，/w以后/f再补/v吧/y。/w