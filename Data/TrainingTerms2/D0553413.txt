#从/pCSV/nz文件/gi导入/giHive/nz出现/v中文乱码/gi问题/gi解决/v
关于/phive/gi中文乱码/gi问题/gi的/ude1解决办法/n，/w网上/s有/vyou很/d多/a帖子/n，/w然而/c很/d多/a都/d是/vshi基于/plinux/gi终端/gi显示字符/n的/ude1修改/gi，/w其实/d上/f对于/p一/nz些/q条件/n下/f的/ude1hive/gi中文乱码/gi问题/gi是/vshi无法/v解决/v的/ude1，/w如/v从/pcsv/gi文件/gi导入到/vhive/gi中/f出现/v的/ude1中文乱码/gi问题/gi。/w大家/rr都/d知道/v，/whive/gi原生/b的/ude1字符/gi编码/gi是/vshi采用/vutf-8/gi方式/n的/ude1，/w这/rzv是/vshi支持/v中文/gi的/ude1。/w然而/c在/p从/poracle/gi导出/gicsv/gi文件/gi，/w注入/gi到/vhive/gi表/n中的/v时候/n，/w就/d发现/v输入/v时/qt出现/v中文乱码/gi。/w按照/phive/gi中文乱码/gi的/ude1解决/v思路/gi(/nz基于/p系统/gi字符/gi编码/gi的/ude1修改/gi方式/n)/nz总是/d没有/v成功/a。/w后来/t考虑到/vhive/gi将/d数据/gi是/vshi存放在/vhdfs/gi上/f的/ude1，/w并以/c序列化/gi的/ude1方式/n存在/v，/w因此/c应该/v考虑/vhdfs/gi中文乱码/gi的/ude1问题/gi，/w这/rzv一/nz查/v，/w资料/gi还/d不/d少/a。/w也/d看到/v了/ule核心/n的/ude1问题所在/i：/whadoop/gi涉及/v输出/gi文本/gi的/ude1默认/v输出/gi编码/gi统一/vn用/p没有/vbom/nz的/ude1utf-8/gi的/ude1形式/gi，/w但是/c对于/p中文/gi的/ude1输出/giwindow/nz系统/gi默认/v的/ude1是/vshigbk/gi，/w有些/rz式/k文件/gi例如/vcsv/gi式/k的/ude1文件/gi用/pexcel/gi打开/gi输出/gi编码/gi为/p没有/vbom/nz的/ude1utf-8/gi文件/gi时/qt，/w输出/gi的/ude1结果/n为/p乱码/nz，/w只能/v由/pue/nz或者/c记事本/n打开/gi才能/n正常/a显示/gi。/w因此/c将/dhadoop/gi默认/v输出/gi编码/gi更改/gi为/pgbk/gi成为/v非常/d常见/a的/ude1需求/gi。/w考虑到/v这个/rz问题/gi，/w于是/cc想着/v在/phive/gi中/f序列化/gi的/ude1时候/n需要/v指定/v一/nz下/f字符/gi编码/gi，/w终于/d找到/v相关/vn的/ude1解决/v思路/gi，/w这/rzv是/vshihive issue/nz解决办法/n中/f找到/v的/ude1。/w。/w依照/p这个/rz文档/gi的/ude1说明/v，/w对/p指定/v的/ude1表/n进行/vn设置/gi，/w即/v设置/gi序列化/gi编码/gi为/pgbk/gi，/w以/pwindow/nz拷贝/gi导入/gi的/ude1数据编码/nz相匹配/nz。/w