#设计模式/nz―/w―/w抽象工厂/gi之/uzhi反射/gi“/w+/nz”/w
前言/gi /x在/p学习/gi设计模式/nz时/qt，/w我/rr接触/v到/v了/ule简单工厂模式/gi、/w工厂模式/gi和/cc抽象工厂模式/gi，/w敲/v完三/nz个/q模式/gi的/ude1小/a例子/gi，/w还是/c感觉/gi抽象工厂模式/gi比较/gi好/a。/w代码/gi与/cc代码/gi之间/f，/w类/gi与/cc类/gi，/w接口/gi与/cc接口/gi之间/f耦合/vn显然/ad降到/v了/ule至今/d的/ude1最低/a。/w大大提高/i了/ule复用性/nz和/cc后期/f软件/gi的/ude1维护/gi，/w方便/a了/ule用户/gi需求/gi的/ude1更改/gi。/w内容/gi /x抽象工厂/gi设计模式/nz中/f，/w最为/d典型/n的/ude1是/vshi反射/gi“”/nz思想/gi。/w下面/f举例子/nz说明/v：/w背景/n /x给/p一家/n企业/gi做/v的/ude1电子商务/gi网站/gi，/w使用/gisqlserver/gi作为/p数据库/gi的/ude1，/w应该/v说/v上线/n后/f除了/p开始/v有些/rz小/a问题/gi，/w基本/a都/d还/d可以/v，/w而/cc后/f，/w公司/nis接到/v了/ule另外/c一家/n公司/nis类/gi的/ude1需求/gi的/ude1项目/gi，/w但是/c这个/rz公司/nis采用/v比较/gi省钱/a的/ude1方式/n，/w租用/v了/ule一个/mq空间/n，/w只能/v用/paccess/nz，/w不能/v用/psql server/gi。/w目标/gi是/vshi将/d原来/d用/psql server/gi作为/p数据库/gi的/ude1代码/gi改为/v用/paccess/nz作为/p数据库/gi的/ude1代码/gi。/w实践/gi /x这样/rzv的/ude1要求/n就要/d看/v原来/d的/ude1代码/gi了/ule，/w如果/c原代码/nz之间/f耦合度/gp够低/a，/w那么/c转换/gi起来/vf不至于/d那么/c费劲/a。/w且/c看/v用/p抽象工厂模式/gi写/v的/ude1代码/gi：/w用户/gi接口/gi部分/n：/w用户表/nz和/cc系别/nz表/n部分/n：/w数据库/gi部分/n：/w客户端/gi代码/gi部分/n：/w /x上面/f的/ude1代码/gi，/w很好/ad的/ude1提高/v了/ule复用性/nz和/cc后期/f维护性/n，/w贯彻/v了/ule开/v―/w―/w闭/v原则/gi。/w但是/c如果/c下一个/nz公司/nis做/v网站/gi要用/voracle数据库/gi访问/gi，/w那/rzv该/rz怎么办/ryv？/w按着/p上面/f的/ude1代码/gi思路/gi只能/v改/vdataaccess/nz类/gi，/w在/p每个/r方法/gi的/ude1switch/nz中/f加/vcase/gi了/ule。/w反射/gi抽象工厂/gi的/ude1数据/gi访问/gi程序/gi /x这里/rzs如果/c用/p到/v一个/mq简单/a的/ude1.net/gi技术/gi就/d完美/a解决/v了/ule。/w式/k是/vshi：/w有/vyou了/ule反射/gi，/w我们/rr获得/v实例/gi可以/v用/p下面/f两种/nz写法/gi：/w修改/gi代码/gi部分/n：/w /x比/p以前/f，/w代码/gi是/vshi漂亮/a多/a了/ule，/w但是/c在/p更换/v数据库/gi访问/gi时/qt，/w还是/c需要/v去/vf改/v程序/gi（/w改/vdb/nz这个/rz字符串/gi的/ude1）/w重/a编译/gi，/w不/d完全符合/nz真正/d的/ude1开放/gi―/w―/w封闭/gi原则/gi。/w反射/gi配置文件/gi实现/gi数据库/gi访问/gi程序/gi可以/v解决/v更改/gidataaccess/nz问题/gi。/w反射/gi配置文件/gi实现/gi数据/gi访问/gi程序/gi /x我们/rr可以/v通过/p读/v文件/gi来/vf给/pdb/nz字符/gi串赋/nz，/w在/p配置文件/gi中/f写明/v是/vshisql server/gi还是/caccess/nz，/w这样/rzvdataaccess/nz类/gi也/d不用/d更改/gi了/ule。/w添加/gi一个/mqapp/gi./nzconfig/nz文件/gi：/w /x再/d添加/gi引用/gi system/nz./nzconfiguraiton/nz，/w并/cc在/p程序/gi开头/n增加/v using system/nz./nzconfiguration/nz;/nz，/w然后/c更改/gidataaccess/nz类/gi字段/gidb/nz的/ude1赋代码/nz。/w小结/n /x这样/rzv看来/v，/w其实/d在/p一些/m用/p到/v“/wswitch/nz~/nzcase/gi或者/cif/nz”/w的/ude1语句/gi，/w都/d可以/v考虑/v用/p反射技术/gi来/vf解除/v分支/n判断/gi带来/v的/ude1耦合/vn。/w三大/j工厂模式/gi，/w自/p认为/v，/w抽象工厂/gi最为/d重要/a，/w而且/c里面/f的/ude1反射/gi思想/gi用/p的/ude1很棒/a！/w感谢您/l的/ude1宝贵/a时间/gi~/nz~/nz~/nz