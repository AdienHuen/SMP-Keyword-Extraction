#SQLite/nz简介/gi
轻量级/gi:/wsqlite/gi和/ccc/nz//nzs/nz模式/gi的/ude1数据库/gi软件/gi不同/a，/w它/rr是/vshi进程/gi内/f的/ude1数据库/gi引擎/n，/w因此/c不存在/ns数据库/gi的/ude1客户端/gi和/cc服务器/gi。/w使用/gisqlite/gi一般/ad只/d需要/v带上/v它/rr的/ude1一个/mq动态库/nz，/w就/d可以/v享受/v它/rr的/ude1全部/m功能/gi。/w而且/c那个/rz动态库/nz的/ude1尺寸/gi也挺/nz小/a，/w以/p版本/n3.6.11/nz为/p例/n，/wwindows/gi下/f487/nzkb/nz、/wlinux/gi下/f347/nzkb/nz。/w单一/gi文件/gi:/w所谓/v的/ude1“/w单一/gi文件/gi”/w，/w就是/v数据库/gi中/f所有/b的/ude1信息/gi（/w比如/v表/n、/w视图/gi、/w触发器/gi、/w等/udeng）/w都/d包含/v在/p一个/mq文件/gi内/f。/w这个/rz文件/gi可以/vcopy/nz到/v其它/rz目录/gi或/c其它/rz机器/gi上/f，/w也/d照用不误/v。/w内存数据库/gi（/win/nz-/nzmemory database/nz）/w:/w这年头/l，/w内存/gi越来越/d便宜/a，/w很/d多/a普通/apc/nz都/d开始/v以/pgb/nz为/p单位/n来/vf衡量/v内存/gi（/w服务器/gi就/d更/d甭提/nz了/ule）/w。/w这时候/rzt，/wsqlite/gi的/ude1内存数据库/gi特性/gi就/d越发/d显得/v好/a用/p。/wsqlite/gi的/ude1api/gi不/d区分/v当前/t操作/gi的/ude1数据库/gi是/vshi在/p内存/gi还是/c在/p文件/gi（/w对于/p存储介质/nz是/vshi透明/a的/ude1）/w。/w所以/c如果/c你/rr觉得/v磁盘/gii/nz//nzo/nz有可能/nz成为/v瓶颈/gi的话/udh，/w可以/v考虑/v切换/vn为/p内存/gi方式/n。/w切换/vn的/ude1时候/n，/w操作/gisqlite/gi的/ude1代码/gi基本/a不用/d大/a改/v，/w只要/c在/p开始/v时/qt把/pba文件/giload/nz到/v内存/gi，/w结束/v时/qt把/pba内存/gi的/ude1数据库/gidump/nz回/v文件/gi就/dok/nz了/ule。/w在/p这种/r情况下/nz，/w前面/f提到/v的/ude1“/wonline backup api/nz”/w就/d派上用场/n了/ule，/w聪明/a的/ude1同学/n应该/v明白/v我/rr为啥/r这么/rz期待/vbackup/gi功能/gi了/ule吧/y？/w缺点/gi：/w1./nz /x并发访问/gi的/ude1锁/v机制/gisqlite/gi在/p并发/gi（/w包括/v多/a进程/gi和/cc多线程/gi）/w读写/gi方面/n的/ude1性能/gi不/d太/d理想/n。/w数据库/gi可能会/nz被/pbei写/v操作/gi独占/v，/w从而/c导致/gi其它/rz读写操作/n阻塞/vn或/c出错/gi；/w2./nz sql/nz标准/gi支持/v不/d全/a如不/c支持/v外键/gi约束/gi；/w看来/v还是/c优点/gi多于/v缺点/gi！/w呵呵/e！/w