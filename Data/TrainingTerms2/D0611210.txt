#简单/a排序--插入/nz排序/gi
插入排序/giinsertion sort/nz为/p基本/a排序算法/gi之一/rz其/rz工作原理/gi是/vshi将/d数组/gi的/ude1后端/f保留/v为/p无序/b序列区/nz，/w在/p前端/gi由/p前往/v后/f逐渐/d建立/gi有序/gi序列区/nz。/w每一次/d挑出/vf后半部/nz分/qt无序/b区域/n的/ude1第一个/gi元素/gi作为/p当前/t操作/gi元素/gi，/w然后/c从/p该/rz位置/gi往/p前/f逐个/d扫描/gi，/w找到/v正确/a的/ude1位置/gi进行/vn插入/gi，/w视为/v插入排序/gi。/w在/p从/p当前/t位置/gi向前/gi扫描/gi的/ude1过程/gi当中/f，/w如果/c还/d没有/v抵达/v正确/a的/ude1位置/gi，/w则/d需要/v有/vyou一个/mq元素/gi向/p后/f挪位/nz的/ude1操作/gi，/w这/rzv是/vshi插入排序/gi最/d明显/a的/ude1特征/gi。/w插入排序/gi的/ude1代码/gi：/w插入排序/gi的/ude1效率/gi：/w这个/rz算法/gi需要/v多少/ry次/qv比较/gi和/cc复制/gi呢/y？/w在/p第一/mq趟/qv排序/gi中/f，/w它/rr最多/ad比较/gi一次/nz，/w第二趟/nz排序/gi最多/ad比较/gi两/nz次/qv。。。/w。/w以此/d列推/nz。/w最后/f一/nz趟/qv比较/gin/nz-/nz1/nz次/qv。/w因此/c有/vyou：/w123...../nz(/nzn/nz-/nz1/nz)/nz=/nzn/nz*/nz(/nzn/nz-/nz1/nz)/nz//nz2/nz然而/c，/w因为/c在/p每/rz一/nz趟/qv排序/gi发现/v插入点/nz之前/f，/w平均/a只有/c全体/n数据项/gi的/ude1一般/ad进行/vn了/ule比较/gi，/w我们/rr除以/v2/nz得到/vn/nz*/nz(/nzn/nz-/nz1/nz)/nz//nz4./nz复制/gi的/ude1次数/gi大致/d等于/v比较/gi的/ude1次数/gi。/w然而/c，/w一次/nz复制/gi与/cc一次/nz交换/gi的/ude1时间/gi耗时/vi不同/a，/w所以/c相对于/nz随机/b数据/gi，/w这个/rz算法/gi比/p冒泡排序/gi快一倍/nz。/w然而/c，/w对于/p逆序/nz排序/gi的/ude1数据/gi，/w每次/r比较/gi和/cc移动/vn都会/n执行/v，/w所以/c插入排序/gi不比/p冒泡排序/gi快/a。/w