#设计模式/nz―/w―/w装饰者模式/gi
装饰者模式/gi：/w首先/d定义/gi抽象/gi的/ude1组件/gi类/gi，/w子类/gm继承/gi该类/r后/f持有/v抽象类/gi的/ude1引用/gi，/w在/p抽象类/gi的/ude1基础上/nz可以/v在/p调用/gi父类/nz方法/gi前后/f分别/d执行/v自己/rr的/ude1行为/n。/w从而/c实现/gi装饰/gi添加/gi新的/a功能/gi特性/gi。/w再次/d强调/v了/ule使用/gi组合/gi的/ude1好处/gi。/w强调/v对/p扩展/gi开放/gi，/w对/p修改/gi关闭/gi。/w在/pjava i/nz//nzo/nz中/f应用/gi了/ule装饰者模式/gi。/w装饰者模式/gi类图/gi：/w以下/f程序/gi来自/vhead first/nz设计模式/nz中的/v实例/gi代码/gi，/w模拟/gi了/ule不同/a种类/n的/ude1饮料/gi不同/a的/ude1售价/n计算/gi方法/gi。/w1./nz定义/gi饮料/gi接口/gi2./nz实现/gi三种/nz不同/a种类/n的/ude1饮料/gi3./nz定义/gi添加/gi了/ule调料/n的/ude1饮料/gi抽象类/gi4./nz实现/gi不同/a调料/n的/ude1饮料/gi5./nz终于/d大功告成/vl！/w跑/v一把/nz！/w可以/v看到/v不同/a种类/n的/ude1饮料/gi得出/v了/ule不同/a的/ude1价/n。/w