#缓存/gi映射/gi小/a笔记/gi
1./nz直接映射/gi注意/v每次/r要/v载入/v一个/mq块/q:/w因为/c标记/gi位/q和/cc索引位/nz(/nzt/nz和/ccs/nz)/nz相同/a的/ude1数据/gi对应/vi的/ude1必然/d是/vshi相同/a块/q(/nzs/nz相同/a啊/y）/w，/w /x同时/c标记/gi位/q会/v受到/v和/cc它/rr不同/a地址/gi数据/gi影响/gi，/w所以/c载入/v的/ude1时候/n必须/d载入/v一个块/nz，/w而/cc不能/v只/d载入/v一个字/nz或者/c字节/gi。/w例如/v一个五/nz位/q的/ude1地址/gi系统/gi /x有/vyou一个/mq高速缓存/gi是/vshi2/nz组/n，/w每组/r两/nz个/q字节/gi，/w同时/c这/rzv一系统/nz的/ude1一个/mq字/n占/v一个字/nz节/q。/w /x显然/ad10/nz /x00/nz /x110/nz /x00/nz /x0/nz的/ude1标记/gi位/q和/cc索引位/nz是/vshi完全相同/nz的/ude1，/w如果/c在/p第一次/nz载入/v10001/nz时候/n只/d载入/v了/ule它/rr自己/rr一个字/nz，/w那么/c访问/gi10000/nz时候/n就/d会/v出错/gi。/w /x因为/c这个/rz时候/n组/n0/nz的/ude1有/vyou效位/nz有效/gi，/w标记/gi位/q完全/ad对应/vi，/w数据/gi当然/d已经/d缓存/gi，/w所以/c会/v直接/ad去/vf读取/gi组/n0/nz偏移/gi0/nz的/ude1数/n。/w /x原因/n在于/v标记/gi位/q是/vshi和/cc组/n一一对应/gm的/ude1，/w而/cc不是/c和/cc每个/r块/q。/w2./nz组相联映射/gi这个/rz的/ude1本质/n就/d在于/v对外/vn只/d显示/gi了/ule /x1/nz//nze/nz的/ude1缓存量/nz。/w例如/v有/vyou每组/r有/vyou两/nz行/ng，/w /x有/vyou四个组/nz，/w /x每行/r有/vyou一个/mq4/nz字节/gi的/ude1块/q。/w实际上/d缓存/gi有/vyou /x4/nz /x*/nz /x2/nz /x*/nz /x4/nz /x=/nz /x32/nz个/q字节/gi的/ude1大小/n，/w但是/c外部/f看见/v的/ude1仅仅/d是/vshi一个/mq /x4/nz /x*/nz /x1/nz /x*/nz /x4/nz /x=/nz /x16/nz个/q字节/gi的/ude1缓存/gi。/w /x所以/c对外部/nis来说/uls，/w组/n相联/v的/ude1地址/gi式/k形式/gi和/cc直接映射/gi是/vshi完全相同/nz的/ude1，/w都/d是/vshi t  s  b/nz的/ude1形式/gi，/w它们/rr是/vshi看不见/v组/n的/ude1。/w /x对/p内部/f来说/uls，/w处理方式/n当然/d不同/a，/w这/rzv是/vshi硬件设计/gi要/v完成/v的/ude1事情/n。/w /x组/n相联/v的/ude1形式/gi下/f，/w /x对外/vn显示/gi的/ude1容量/gi变小/d了/ule，/w却/d有效/gi的/ude1避免/v了/ule抖动/v的/ude1问题/gi。/w举例/gi如下/vi。/w设有/v两/nz个/q4/nz字节/gi的/ude1int/nz型/k的/ude1变量/gi /x存放在/v100000/nz /x和/cc /x000000/nz中/f，/w恰好/d要/v频繁/a使用/gi它们/rr，/w可以/v对比/gi一/nz下/f两者/rzv的/ude1表现/v。/w在/p直接映射/gi下/f是/vshi地址/gi式/k解析/gi为/p（/w直接映射/gi每组/r只能/v有/vyou一行/n，/w所以/c上面/f的/ude1缓存/gi就/d对应/vi了/ule8/nz组/n，/w /x因而/cs/nz=/nz3/nz)/nzt  s   b/nz0/nz /x000/nz /x001/nz /x000/nz /x00/nz除了/p标记/gi位/q外/f，/w其他/rzv都/d相同/a，/w /x那么/c会/v发生/v反复/d载入/v与/cc取出/v，/w就是/v所谓/v的/ude1抖动/v。/w如果/c采取/v两路/nz组相联映射/gi，/w地址/gi式/k解析/gi为/pt  s  b/nz00/nz /x00/nz /x0010/nz /x00/nz /x00/nz如果/c0/nz地址/gi的/ude1放入/v了/ule第一行/nz，/w那么/c当/p载入/v下/f一个/mq数据/gi时候/n，/w /x会/v去/vf检查/gi每/rz一行/n，/w发现/v第二行/nz还/d没有/v数据/gi存入/v，/w /x直接/ad放入/v第二行/nz。/w /x这种/r情况下/nz就/d不/d需要/v替换/v问题/gi，/w /x不会/v发生/v抖动/v。/w代价/gi就是/v组/n相联/v需要/v对/p同一/b组/n的/ude1每行/r进行/vn遍历/gi，/w /x而/cc直接映射/gi则/d不/d需要/v。/w