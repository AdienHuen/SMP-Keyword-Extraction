#一致性/gi哈希算法/gi与/ccJava/gi实现/gi
一致性/gi哈希算法/gi是/vshi分布式系统/gi中/f常用/a的/ude1算法/gi。/w比如/v，/w一个/mq分布式/gi的/ude1存储系统/gi，/w要/v将/d数据存储/gi到/v具体/a的/ude1节点/gi上/f，/w如果/c采用/v普通/a的/ude1hash/gi方法/gi，/w将/d数据/gi映射/gi到/v具体/a的/ude1节点/gi上/f，/w如/vkey/gi%/nzn/nz，/wkey/gi是/vshi数据/gi的/ude1key/gi，/wn/nz是/vshi机器/gi节点/gi数/n，/w如果/c有/vyou一个/mq机器/gi加入/v或/c退出/gi这个/rz集群/gi，/w则/d所有/b的/ude1数据/gi映射/gi都/d无效/vi了/ule，/w如果/c是/vshi持久化/nz存储/gi则/d要/v做/v数据/gi迁移/gi，/w如果/c是/vshi分布式/gi缓存/gi，/w则/d其他/rzv缓存/gi就/d失效/vi了/ule。/w  /x因此/c，/w引入/v了/ule一致性/gi哈希算法/gi：/w把/pba数据/gi用/phash/gi函数/gi（/w如/vmd/nz5/nz）/w，/w映射/gi到/v一个/mq很大/d的/ude1空间/n里/f，/w如图所示/i。/w数据/gi的/ude1存储/gi时/qt，/w先/d得到/v一个/mqhash/gi，/w对应/vi到/v这个/rz环中/j的/ude1每个/r位置/gi，/w如/vk/nz1/nz对应/vi到/v了/ule图/gi中/f所示/nz的/ude1位置/gi，/w然后/c沿/p顺时针/nz找到/v一个/mq机器/gi节点/gib/nz，/w将/dk/nz1/nz存储/gi到/vb/nz这个/rz节点/gi中/f。/w如果/cb/nz节点/gi宕机/nz了/ule，/w则/db/nz上/f的/ude1数据/gi就/d会/v落到/vc/nz节点/gi上/f，/w如下/vi图/gi所示/nz：/w这样/rzv，/w只/d会/v影响/gic/nz节点/gi，/w对/p其他/rzv的/ude1节点/gia/nz，/wd/nz的/ude1数据/gi不会/v造成/v影响/gi。/w然而/c，/w这/rzv又/d会/v造成/v一个/mq“雪/nz崩”/nz的/ude1情况/n，/w即/vc/nz节点/gi由于/p承担/v了/uleb/nz节点/gi的/ude1数据/gi，/w所以/cc/nz节点/gi的/ude1负载/gi会/v变/v高/a，/wc/nz节点/gi很容易/nz也/d宕机/nz，/w这样/rzv依次/d下去/vf，/w这样/rzv造成/v整个/b集群/gi都/d挂/v了/ule。/w /x为此/bl，/w引入/v了/ule“/w虚拟节点/gi”/w的/ude1概念/gi：/w即/v把/pba想象/v在/p这个/rz环/n上有/v很/d多/a“/w虚拟节点/gi”/w，/w数据/gi的/ude1存储/gi是/vshi沿着/p环/n的/ude1顺时针/nz方向/gi找/v一个/mq虚拟节点/gi，/w每个/r虚拟节点/gi都会/n关联/vn到/v一个/mq真实/a节点/gi，/w如下/vi图/gi所/usuo使用/gi：/w图/gi中的/va/nz1/nz、/wa/nz2/nz、/wb/nz1/nz、/wb/nz2/nz、/wc1/gi、/wc/nz2/nz、/wd/nz1/nz、/wd/nz2/nz都/d是/vshi虚拟节点/gi，/w机器/gia/nz负载/gi存储/gia/nz1/nz、/wa/nz2/nz的/ude1数据/gi，/w机器/gib/nz负载/gi存储/gib/nz1/nz、/wb/nz2/nz的/ude1数据/gi，/w机器/gic/nz负载/gi存储/gic1/gi、/wc/nz2/nz的/ude1数据/gi。/w由于/p这些/rz虚拟节点/gi数量/n很/d多/a，/w均匀分布/gm，/w因此/c不会/v造成/v“雪/nz崩”/nz现象/n。/wjava实现/gi：/w转/v自/p：/w