#nodejs/gi之/uzhigeneric-pool/gi数据库连接池/gi(/nzmysql/gi)/nz
引言/gi做/v后端/f开发/gi免不了/v要/v和/cc一/nz些/q,/nz等等/udeng /x打交道/vi。/w起因/n /x（/w传统模式/nz，/w /x读取/gi数据库/gi）/w大家/rr都/d知道/v和/cc这些/rz使用/gi tcp/nz连接/gi /x的/ude1服务/gi传递数据/n的/ude1都/d必须/d要/v打开/gi /x一个/mq例如/v我们/rr打开/gi一个/mq数据库/gi并/cc执行/v一段/nz sql/nz,/nz /x通常/d都/d是/vshi(/nz打开/gi数据库/gi，/w并/cc取得/v持有/v连接/gi的/ude1句柄/gi)/nz(/nz执行/v sql /nz并/cc获取数据/l)/nz显式/nz的/ude1关闭/gi连接/gi这个/rz方式/n看上去/v乎/y没有/v什么/ry不/d对/p的/ude1。/w但是/c对于/p并发/gi量/n稍/d大一/j些/q的/ude1站点/gi来说/uls。/w一个/mq单元/n批次/n的/ude1操作/gi就/d需要/v打开/gi并/cc关闭/gi一次/nz连接/gi。。。/w这/rzv显然/ad是/vshi不能接受/v的/ude1。/w为/p这样/rzv做/v不能接受/v呢/y？/w建立/gi一个/mqtcp/gi连接/gi需要/v三次/nz握手/vi。/w而且/c还/d需要/v为/p对象/gi分配/gi系统资源/gi和/cc内存空间/nz。/w所以/c创建/gi一个/mqtcp/gi连接/gi可以/v说/v是/vshi昂贵/a的/ude1。/w回到/v刚才/t的/ude1话题/n。/w这样/rzv平凡/a的/ude1开启/gi关闭/gi连接/gi不仅/c对/p增加/v客户端/giio/gi的/ude1压力/n，/w最重要/nz的/ude1是/vshi大大/d增加/v了/ule tcp /nz服务器/gi的/ude1压力/n（/wmysql/gi，/w redis/nz）/w。/w那/rzv我们/rr再/d尝试/v另外/c一种/nz方式/n，/w那/rzv就是/v不/d关闭/gi连接/gi，/w一直/d使用/gi这个/rz连接/gi呢/y。/w答案/gi是/vshi：/w /x可以/v。/w这种/r方式/n /x被/pbei叫做/v。/w那/rzv这样的话/l，/w也/d有/vyou一个/mq问题/gi。/w因为/c一段时间/nz内/f一个/mq连接/gi只能/v做/v一件/nz事情/n。/w那么/c在/p并发/gi的/ude1情况下/nz这/rzv显然/ad会/v阻塞/vn整个/b系统/gi。/w那/rzv我们/rr能/v不能/v尝试/v创建/gi多/a个/q连接/gi，/w然后/c当/p调用/gi的/ude1时候/n，/w将/d没有/v被/pbei使用/gi的/ude1连接/gi拿出/v来/vf使用/gi，/w当/p使用/gi完毕/vi之后/f，/w将/d连接/gi放/v回去/v，/w以/p供/vi其他/rzv调用者/n使用/gi的/ude1方式/n的/ude1呢/y？/w连接/gi大管家/nz（/w连接池/nz）/w答案/gi是/vshi有的/rz：/w那/rzv就是/v我们/rr要说/c的/ude1。/w当然/d一个/mq健全/v的/ude1连接池/nz并不/d仅仅/d完成/v以上/f我/rr所说/c的/ude1功能/gi。/w连接/gi预热/vi /x（/w启动时/l自动/d打开/gin/nz个/q连接/gi以/p供/vi使用/gi）/w使用/gi /x例如/v均匀/a分发/v /x连接/gi请求/gi当/p池/ng中的/v连接/gi即将/d耗尽/v得/ude3时候/n动态/gi产生/v新的/a连接/gi当/p池/ng中的/v连接/gi一段时间/nz没有/v被/pbei调用/gi的/ude1时候/n，/w自动/d释放/gi连接/gi自动/d丢弃/v /x已经/d坏掉/nz的/ude1 /x连接/gi系统/gi关闭/gi的/ude1时/qt自动/d释放/gi所有/b连接/gi....../w./nz./nz以上/f都/d属于/v连接池/nz的/ude1功能/gi。/w可谓/v是/vshi我们/rrnode/nz./nzjs /nz中的/v /x连接池/nz说/v到/v这里/rzs好像/v还是/c没有/v说/v到/v要点/n。/w在/pnode/nz中/f我们/rr应该/v怎么/ryv呢/y？/w我们/rr可以/v使用/gi这个/rz模块/gi更多/ad相关/vn的/ude1配置/gi /x我/rr就/d不一一/nz展开讨论/n了/ule。/w大家/rr可以/v去/vf github /nz上/f查看/gi项目/gi的/ude1