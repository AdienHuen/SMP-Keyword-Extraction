#设计模式/nz学习之--单例/nz模式/gi
 /x今天/t复习/gi了/ule下单/n例/n模式/gi：/w /x单例模式/gi是/vshi众多/a设计模式/nz中/f最/d容易/ad理解/gi同时/c也/d是/vshi应用/gi最多/ad的/ude1设计模式/nz之一/rz了/ule，/w和/cc我们/rr的/ude1日常生活/nz中的/v例子/gi一样/uyy，/w有些/rz只有/c一个/mq才/d是/vshi最/d合理/a的/ude1。/w比如/v古代/t的/ude1皇帝/nnt，/w必须/d只有/c一个/mq；/w还有/v现代/ntc的/ude1人/n结婚/vi，/w一个/mq女人/n只有/c一个/mq老公/n，/w那么/c在/p我们/rr的/ude1java/gi程序/gi中/f，/w也/d是/vshi有/vyou这样/rzv的/ude1情况/n，/w我们/rr用/p单例模式/gi来/vf让/v某个/rz类/gi只能/v有/vyou一个/mq实例/gi，/w以/p避免浪费/n资源/gi和/cc发生/v程序/gi错误/gi的/ude1情况/n。/w在/p我们/rr的/ude1java/gi程序/gi中/f，/w我们/rr程序/gi的/ude1配置文件/gi的/ude1读取/gi，/w我们/rr的/ude1工具/gi类/gi，/w线程池/gi，/w缓存/gi，/w日志/gi对象/gi，/w还有/v我们/rr的/ude1servlet/nz等/udeng，/w比如/v配置文件/gi的/ude1读取/gi这个/rz类/gi，/w读取/gi配置文件/gi是/vshi很/d消耗/gi资源/gi的/ude1，/w如果/c使用/gi的/ude1时候/n每次/r都/d去/vf读取/gi，/w会/v很/d消耗/gi资源/gi，/w这个/rz时候/n我们/rr的/ude1单例模式/gi就/d起/vf作用/gi了/ule，/w它/rr能/v保证/v我们/rr的/ude1配置文件/gi只/d读取/gi一次/nz并/cc只/d创建/gi一个/mq实例/gi，/w这/rzv就是/v我们/rr的/ude1单例模式/gi的/ude1应用/gi。/w那么/c在/p我们/rr代码/gi中/f是/vshi如何/ryv实现/gi的/ude1呢/y？/w单例模式/gi中/f有/vyou两/nz种/q模式/gi，/w首先/d介绍/gi第一/mq种/q：/w饿汉/nz模式/gi：/w为什么/ryv叫/vi饿汉/nz模式/gi呢/y？/w（/w在/p程序/gi中/f解释/gi）/w是/vshi的/ude1，/w饿汉/nz模式/gi就是/v这样/rzv，/w在/p我们/rr的/ude1单例/gi中/f，/w我们/rr把/pba构造函数/gi私有化/vn，/w只/d允许/v外部/f用/p一个/mq方法/gi来/vf取得/v实例/gi。/w那么/c我们/rr的/ude1懒汉模式/gi呢/y？/w是/vshi的/ude1，/w两/nz种/q模式/gi一个/mq是/vshi线程安全/gi的/ude1，/w一个/mq是/vshi线程/gi不/d安全/gi的/ude1，/w所以/c在/p使用/gi单例模式/gi时/qt，/w一定/b要/v考虑到/v这里/rzs。/w下面/f是/vshi一个/mq测试/gi类/gi：/w来/vf测试/gi单例模式/gi时/qt产出/vn的/ude1同一个/b实例/gi：/w嗯/e，/w就是/v这样/rzv了/ule /x