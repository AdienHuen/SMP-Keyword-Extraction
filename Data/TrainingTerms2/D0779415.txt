#Singleton/gi（/w单/b实例/gi）/w设计模式/nz
singleton/gi（/w单/b实例/gi）/w设计模式/nz为什么/ryv要用/vsingleton/gi设计模式/nz？/w　/nz　/nzsingleton/gi设计模式/nz，/w确保/v了/ule一个/mq类/gi只有/c一个/mq实例化/gi的/ude1对象/gi，/w并且/c它/rr是/vshi全局/n可/v访问/gi的/ude1。/w在/p游戏/gi设计/gi中/f，/w你/rr常常/d需要/v一个/mq“/w管理者/nnt”/w对象/gi来/vf完成/v创建/gi、/w删除/gi和/cc管理/gi这些/rz对象/gi的/ude1工作/gi。/w具有/v这个/rz的/ude1一个/mq实例/gi是/vshi必要/a的/ude1，/w对/p它/rr可以/v进行/vn全局/n访问/gi是/vshi方便/a的/ude1，/w因为/c许多其他/nz对象/gi需要/v访问/gi它/rr。/wsingleton/gi设计模式/nz如何/ryv实现/gi？/w　/nz　/nz有/vyou许多/m实现/gisingleton/gi的/ude1方法/gi，/w我/rr没有/v比较/gi各种/rz方法/gi的/ude1优劣/n处/n，/w这里/rzs我们/rr就/d用/p《/w游戏/gi人工智能/gi编程/gi案例/gi精粹/an》/w中的/v方法/gi（/w因为/c比较/gi权威/n，/w哈哈/o）/w。/w这里/rzs用/p一个/mq静态/gi的/ude1方法/gi―/w―/winstance/gi，/w返回/v一个/mq指向/v这个/rz类/gi的/ude1一个/mq静态/gi实例/gi。/w实例/gi代码/gi：/w