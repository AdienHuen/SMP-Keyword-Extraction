#laxcus/gi的/ude1新功能/nz:/w支持/v表/n跨数据库/gi操作/gi
 /x关系数据库/gi的/ude1层次结构/gi，/w是/vshi账号/gi、/w数据库/gi、/w表/n，/w一个/mq账号/gi下/f可以/v有/vyou多/a个/q数据库/gi，/w每个/r数据库/gi有/vyou多/a个/q表/n，/w但是/c不同/a数据库/gi下/f的/ude1表/n是/vshi不/d能够/v互相/d操作/gi的/ude1。/w例如/v：/w“/wselect a/nz./nz*/nz,/nz b/nz./nz*/nz from titles a/nz,/nz orders b where a/nz./nztid/nz=/nzb/nz./nztid/nz”/w。/w当/ptitles /nz和/cc orders /nz分别/d属于/v两/nz个/q不同/a的/ude1数据库/gi时/qt，/w执行/v上述/b操作/gi将/d发生/v错误/gi。/w个人/n认为/v，/w这/rzv是/vshi一个/mq极/d不合理/nz的/ude1设计/gi。/w要/v知道/v，/w现在/t的/ude1数据/gi应用/gi中/f，/w很/d多/a属性/gi是/vshi跨数据库/gi存在/v的/ude1，/w或者说/c是/vshi被/pbei多/a个/q数据库/gi共用/b的/ude1。/w如果/c发生/v这样/rzv的/ude1情况/n，/w按照/psql/gi的/ude1规定/n，/w就/d需要/v为/p每/rz一个/mq数据库/gi建立/gi一个/mq同质/n的/ude1属性表/nz。/w这样/rzv做/v即/v重复/gi且/c麻烦/an，/w还/d增加/v存储空间/gi和/cc维护/gi负担/n。/w当/p面对/v大数据处理/gi时/qt尤其/d如此/rzv。/w /x针对/gi这个/rz现象/n，/w采用/v了/ule新的/a处理方案/gi，/w允许/v同/p账号/gi下/f的/ude1表/n，/w无论/c它们/rr属于/v哪/ry一个/mq数据库/gi，/w相互之间/bl都/d可以/v操作/gi。/w这/rzv就/d避免/v了/ule上述/b的/ude1问题/gi。/w