#主元素/gi（/wLintCode/nz）/w
题目/gi来源/gi：/wlintcode/gi原/b题/n地址/gi：/w题目/gi：/w给定/gi一个/mq整型/nz数组/gi，/w找出/v主元素/gi，/w它/rr在/p数组/gi中的/v出现/v次数/gi严/a大于/v数组/gi元素/gi个数/n的/ude1二分/gi之一/rz。/w您/rr在/p真实/a的/ude1面试/gi中/f是否/v遇到/v过/uguo这个/rz题/n？/wyes/nz样例/nz给出/v数组/gi[/nz1/nz,/nz1/nz,/nz1/nz,/nz1/nz,/nz2/nz,/nz2/nz,/nz2/nz]/nz，/w返回/v /x1/nz挑战/gi要求/n时间复杂度/gi为/po/nz(/nzn/nz)/nz，/w空间/n复杂度/gi为/po/nz(/nz1/nz)/nz难度/n级别/n：/w容易/ad思路/gi分析/gi：/w这/rzv道/qv题/n还是/c蛮/d经典/gi的/ude1，/w最/d容易/ad想到/v的/ude1应该/v就是/v去/vf数/n这/rzv里面/f的/ude1每一个/nz数/n都/d出现/v了/ule几次/nz，/w然后/c把/pba主元素/gi找出/v来/vf；/w那么/c，/w这个/rz过程/gi中/f，/w其实/d我们/rr计算/gi了/ule所有数/nz的/ude1出现/v次数/gi，/w而/cc实际上/d，/w我们/rr只要/c其中/rz主元素/gi的/ude1次数/gi就/d可以/v了/ule，/w也/d就是说/c，/w我们/rr做/v了/ule很/d多/a的/ude1无用功/n。/w根据/p的/ude1周博/nr提供/v的/ude1思路/gi（/w剑指/nzoffer/gi中/f也/d提到/v了/ule）/w，/w我们/rr可以/v把/pba这些/rz数/n看做/v两/nz种/q类型/gi，/w一种/nz主元素/gi，/w一种/nz非/b主元素/gi；/w如果/c每次/r我们/rr都/d从/p这/rzv两/nz种/q类型/gi中/f各/rz拿走/v一个数/nz，/w知道/v其中/rz一种/nz类型/gi的/ude1数/n拿光/nz，/w则/d最后/f，/w剩下/v的/ude1一种/nz类型/gi必定会/l是/vshi主元素/gi类型/gi。/w按照/p这种/r思路/gi就/d可以/v来/vf解/v此/rzs题/n，/w方便快捷/z。/w实现代码/gi：/w代码/gi说明/v：/w根据/p分析/gi中所/j说/v的/ude1，/w分成/vi两/nz堆/gi，/w但是/c实际/n实现/gi中/f，/w无法/v做到/v，/w所以/c我们/rr每/rz遍/qv历一个数/nz，/w要/v先/d判断/gi是否/v当前/t是否/v有/vyou候选/b的/ude1数/n，/w若/ccnt/nz不为零/nz则/dresult/nz中的/v数/n就是/v候选/b的/ude1，/w若/ccnt/nz为/p零/nz则/d无/v候选/b，/w此时/r的/ude1新/a数/n就/d变成/v新的/a候选/b数/n；/w如果/c有/vyou候选数/nz的话/udh，/w判断/gi候选/b数/n与/cc新/a数/n是否/v相同/a，/w如果/c不同/a的话/udh，/w则/dcnt/nz减/v1/nz，/w相当于/v分析/gi中的/v两/nz类/gi数/n同时/c拿走/v一个/mq，/w如果/c相同/a的话/udh，/w则/dcnt/nz加/v1/nz，/w相当于/v某/rz一堆/nz中/f多/a了/ule一个/mq数/n；/w