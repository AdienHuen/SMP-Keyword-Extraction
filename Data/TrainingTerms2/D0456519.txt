#定时/d任务/gi知多少/l（/w三/nz）/w―/w―/w任务调度/gi的/ude1集群/gi方案/gi
quartz/gi是/vshijava/gi领域/gi最/d著名/a的/ude1开原/ns任务调度/gi工具/gi。/wquartz/gi提供/v了/ule即为/c广泛/a的/ude1特性/gi，/w如/v前文/n讲/v的/ude1持久化/nz任务/gi、/w本文/r将要/d介绍/gi的/ude1集群/gi，/w以及/cc分布式/gi任务/gi等等/udeng。/wquartz/gi有/vyou完全/ad由/pjava/gi编写/gi，/w方面/n集成/vnspring/gi；/w伸缩性/gi、/w负载均衡/gi和/cc高/a可用/v的/ude1特点/n。/wquartz/gi集群/gi部署/giquartz/gi集群/gi中的/v每个/r节点/gi是/vshi一个/mq独立/a的/ude1quartz/gi应用/gi，/w它/rr又/d管理/gi着/uzhe其他/rzv的/ude1节点/gi。/w该/rz集群/gi需要/v分别/d对/p每个/r节点/gi分别/d启动/gi或/c停止/gi，/w不/d像/v应用服务器/gi的/ude1集群/gi，/w独立/a的/ude1quartz/gi节点/gi并不/d与/cc另一个/nz节点/gi或/c是/vshi管理/gi节点/gi通信/gi。/wquartz/gi应用/gi时/qt通过/p数据库表/gi来/vf感知/gi到/v另一个/nz应用/gi。/w只有/c使用/gi持久化/nz的/ude1jobstore/nz才能/n完成/vquartz/gi集群/gi。/wps/nz：/w应用服务器/gi的/ude1集群/gi是/vshi每/rz台/q服务器/gi上/f，/w都/d部署/gi相同/a的/ude1应用/gi，/w通过/p类/gi于/papache/gi这样/rzv的/ude1工具/gi，/w来/vf分摊/v应用服务器/gi的/ude1访问/gi压力/n；/w而/ccquartz/gi的/ude1集群/gi则/d不能/v使用/gi类/gi的/ude1方式/n实现/gi集群/gi。/w原理/gi：/w集群/gi通过/p故障/gi切换/vn和/cc负载平衡/nz的/ude1功能/gi，/w能/v给/p调度器/nz带来/v高可用性/n和/cc伸缩性/gi。/w目前/t集群/gi只能/v工作/gi在/pjdbc/gi-/nzjobstore/nz（/wjobstore tx /nz或者/cjobstorecmt/nz）/w方式/n下/f，/w从/p本质/n上/f来说/uls，/w是/vshi使/v集群/gi上/f的/ude1每一个/nz节点/gi通过/p共享/gi一个/mq数据库/gi来/vf工作/gi的/ude1。/w（/wquartz/gi启动/gi两/nz个/q维护/gi线程/gi，/w来/vf维护/gi数据库/gi状态/gi实现/gi集群/gi管理/gi，/w一个/mq是/vshi检测/gi节点/gi状态/gi的/ude1线程/gi，/w一个/mq是/vshi恢复/gi任务/gi线程/gi）/w。/w负载平衡/nz是/vshi自动/d完成/v的/ude1，/w集群/gi的/ude1每个/r节点/gi会/v尽快/d触发/gi任务/gi。/w当/p一个/mq触发器/gi的/ude1出发/vi时间/gi达到/v时/qt，/w第一个/gi节点/gi将/d会/v获得/v任务/gi（/w通过/p锁定/v）/w，/w称为/v执行/v任务/gi的/ude1节点/gi。/w故障/gi切换/vn的/ude1发生/v是/vshi在/p当一个/nz节点/gi正在/d执行/v一个/mq或/c多/a个/q任务/gi失败/vi的/ude1时候/n。/w当/p一个/mq节点/gi失败/vi了/ule，/w其他/rzv的/ude1节点/gi检测/gi到/v，/w并且/c标识/n在/p失败/vi节点/gi上/f正在/d进行/vn的/ude1数据库/gi中的/v任务/gi。/w任何/rz被/pbei标记/gi为/p可恢复/nz的/ude1任务/gi都/d是/vshi被/pbei其他/rzv的/ude1节点/gi重新/d执行/v。/w没有/v标记/gi可恢复/nz的/ude1任务/gi只/d会/v被/pbei释放出来/v，/w将/d会/v在/p下次/t相关/vn触发器/gi触发/gi时/qt执行/v。/w未完待续/nz。。。/w