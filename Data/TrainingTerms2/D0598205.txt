#iOS /nz设计模式/nz
1./nz外观设计/nz模式/gi这个/rz外观设计/nz模式/gi提供/v了/ule一个/mq单独/d的/ude1接口/gi给/p复杂/a的/ude1子系统/gi。/w而/cc不是/c暴露/v用户/gi的/ude1一/nz组/n类/gi和/ccapi/gi，/w你/rr仅仅/d暴露/v一个/mq简单/a的/ude1同一/b的/ude1api/gi2./nz装饰模式/gi（/wdecorator/gi）/w装饰模式/gi（/wdecorator/gi）/w，/w动态/gi地/ude2为/p一个/mq对象/gi添加/gi额外/b的/ude1职责/gi，/w是/vshi继承/gi的/ude1替代/v方案/gi，/w属于/v结构型模式/gi。/w通过/p装饰模式/gi扩展/gi对象/gi的/ude1功能/gi比/p继承子/nz类/gi方式/n更/d灵活/a，/w使用/gi继承子/nz类/gi的/ude1方式/n，/w是/vshi在/p编译/gi时/qt静态/gi决定/v的/ude1，/w即/v编译/gi时/qt绑定/gi，/w而且/c所有/b的/ude1子类/gm都会/n继承/gi相同/a的/ude1行为/n。/w然而/c，/w如果/c使用/gi组合/gi的/ude1方式/n扩展/gi对象/gi的/ude1行为/n，/w就/d可以/v在/p运行/gi时/qt动态/gi地/ude2进行/vn扩展/gi，/w将来/t如果/c需要/v也/d可以/v动态/gi的/ude1撤销/v，/w而/cc不会/v影响/gi原类/nz的/ude1行为/n。/w3./nz原型模式/gi用来/v快/a拷贝/gi这个/rz类/gi4./nz观察者模式/gi用来/v检测/gi一个/mq类/gi的/ude1某个/rz字段/gi的/ude1变化/gi5./nz策略模式/gi用来/v简化/gi if else/nz6./nz适配器模式/gi主要/b是/vshi用/p到/v了/ule协议/gi7./nz工厂模式/gi工厂/gi:/w1./nz制造/gi商品/gi2./nz将/d制造/gi工艺/n进行/vn了/ule封装/gi客户/n:/w1./nz不/d参与/gi手机/gi制造/gi流程/gi2./nz客户/n是/vshi需要/v使用/gi固定/a产品/gi(/nz客户/n提出/v需求/gi)/nz8./nz桥接模式/gi通过/p对/p某/rz一个/mq类/gi的/ude1操作/gi,/nz来/vf对/p另一个/nz进行/vn操作/gi(/nz以为/v前/f一个/mq类/gi /x持有/v了/ule另一/nz给/p类/gi,/nz在/p前/f一个/mq类/gi的/ude1某个/rz方法/gi里/f直接/ad调用/gi持有/v的/ude1另一个/nz类/gi的/ude1某个/rz方法/gi)/nz;/nz