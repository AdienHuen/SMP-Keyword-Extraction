#随机问题/gi之--洗牌/nz算法/gi
洗牌算法/gi是/vshi我们/rr常见/a的/ude1随机问题/gi，/w在/p玩游戏/n、/w随机/b排序/gi时/qt经常/d会/v碰到/v。/w它/rr可以/v抽象/gi成/v这样/rzv：/w得到/v一个/mqm/nz以内/f的/ude1所有/b自然数/n的/ude1随机/b顺序/gi数组/gi。/w在/p百度/ntc搜“/nz洗牌/vn算法”/nz，/w第一个/gi结果/n是/vshi《/w百度/ntc文库-洗牌/nz算法/gi》/w：/w扫/v了/ule一下/m里面/f的/ude1内容/gi，/w很/d多/a内容/gi都/d容易/ad误导/v别人/rr走上/v歧途/n，/w包括/v最后/f用/p链表/gi代替/v数组/gi，/w也/d只是/d一个/mq有限/a的/ude1优化/gi（/w链表/gi也/d引入/v了/ule读取/gi效率/gi的/ude1损失/n）/w。/w该文/r里/f的/ude1第一种/nz方法/gi，/w可以/v简单/a描述/gi成/v：/w随机/b抽牌/v，/w放在/v另一组/nz；/w再次/d抽取/v，/w抽到/nz空牌/nz则/d重复/gi抽/v。/w“/w抽到/nz空牌/nz则/d重复/gi抽”/nz这/rzv会/v导致/gi后面/f抽到/nz空牌/nz的/ude1机会/gi越来越/d大/a，/w显然/ad是/vshi不合理/nz的/ude1。/w可以/v优化/gi一步/nz成/v：/w牌/n抽走/nz后/f，/w原牌/nz变少/nz。/w（/w而/cc不是/c留下/v空牌/nz）/w代码/gi如下/vi：/w这个/rz也/d明显/a有/vyou问题/gi，/w因为/c数组/gi如果/c很大/d的话/udh，/w删除/gi中间/f的/ude1某个/rz元素/gi，/w会/v导致/gi后面/f的/ude1排队/gi向前/gi走一步/nz，/w这/rzv是/vshi一个/mq很/d耗时/vi的/ude1动作/gi。/w回想/v一下“/nz我们/rr为什么/ryv要/v删除/gi那个/rz元素/gi？/w”/w目的/gi就是/v为了/p不/d产生/v空牌/nz。/w除了/p删除/gi那个/rz元素/gi之外/f，/w我们/rr是不是/v还有/v其它/rz方式/n来/vf去除/v空牌/nz？----有/nz的/ude1，/w我们/rr把/pba最后/f一/nz张/q未/d抽/v的/ude1牌/n放在/v那个/rz抽走/nz的/ude1位置/gi上/f就/d可以/v了/ule。/w所以/c，/w这个/rz思路/gi我们/rr可以/v优化/gi成/v这样/rzv：/w除了/p抽牌/v思路/gi，/w我们/rr还/d可以/v用/p换牌/nz思路/gi。/w《/w百度/ntc文库-洗牌/nz算法/gi》/w提到/v一种/nz换牌/nz思路/gi：/w“/w随机/b交换/gi两/nz个/q位置/gi，/w共/d交换/gin/nz次/qv，/wn/nz越大/d，/w越/d接近/v随机/b”/w。/w这个/rz做法/n是/vshi不/d对/p的/ude1，/w就算/dn/nz很大/d（/w例如/v10/nz张/q牌/n，/w进行/vn10/nz次/qv调换/gi）/w，/w也/d还/d存在/v很大/d可能/v“/w有的/rz牌/n根本/a没/d换/v位置/gi”/w。/w顺着/p这个/rz思路/gi，/w做/v一点/m小/a调整/vn就/d可以/v了/ule：/w第/mqi/nz张/q与/cc任意/d一/nz张牌/nz换位子/gm，/w换/v完/vi一轮/nz即可/v。/w代码/gi如下/vi：/w除了/p抽牌/v与/cc换牌/nz的/ude1思路/gi，/w我们/rr还/d可以/v用/p插牌/nz的/ude1思路/gi：/w先/d有/vyou一/nz张/q牌/n，/w第二张/nz牌/n有/vyou两/nz个/q位置/gi可/v随机/b插入/gi（/w第一/mq张牌/nz前/f，/w或/c后/f）/w，/w第三张牌/nz有/vyou三个/nz位置/gi可/v随机/b插入/gi（/w放在/v后面/f，/w或/c插/v在/p第一位/nz，/w或/c插/v在/p第二位/nz）/w，/w依此类推/vl代码/gi如下/vi：/w以上/f的/ude1代码/gi也/d会/v有/vyou一/nz些/q问题/gi：/w就是/v随着/p牌数/nz的/ude1增多/v，/w插牌/nz变得/vi越来越/d困难/an，/w因为/c插牌/nz会/v导致/gi后面/f的/ude1很/d多/a牌/n都/d往后/t推一步/nz。/w当然/d，/w我们/rr也/d可以/v适当/a的/ude1优化/gi一下/m：/w先/d有/vyoun/nz-/nz1/nz张/q牌/n，/w第/mqn/nz张牌/nz放在/v最后/f，/w然后/c与/cc任意/d一/nz张/q牌/n互换/v位置/gi。/w代码/gi如下/vi：/w好/a的/ude1，/w全部/m的/ude1代码/gi如下/vi，/w有兴趣/v的/ude1同学/n可以/v在/p自己/rr的/ude1机器/gi上/f试/v下/f，/w看下/v他们/rr各自/rr的/ude1执行/v效率/gi、/w以及/cc最后/f的/ude1结果/n是否是/l理论/gi随机/b。/w