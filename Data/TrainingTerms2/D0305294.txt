#谈谈/v微服务/gi
自从/p去年/t在/p一次/nz上/f厕所/n的/ude1时候/n，/w翻开/v手机/gi，/w看到/v微服务/gi这/rzv一个/mq概念/gi，/w就/d认为/v这种/r架构/gi的/ude1模式/gi非常/d看好/v，/w自/p那/rzv以后/f，/w一直/d关注/v微服务/gi相关/vn的/ude1内容/gi。/w目前/t微服务/gi已经/d是/vshi一个/mq非常/d火/n的/ude1概念/gi，/w在/pinfoq/nz几乎/d每条/d都/d有/vyou关于/p微服务/gi的/ude1文章/gi或者/c新闻/gi。/w可见/c微服务/gi已经/d像/v我们/rr靠近/v。/w微服务/gi的/ude1“微/nz”/w：/w有/vyou一/nz些/q观点/gi体现/v在/p微服务/gi的/ude1微/ag在/p体现/v在/p代码/gi量/n上/f，/w微服务/gi的/ude1代码/gi行数/n一定/b非常少/l。/w关于/p这个/rz观点/gi，/w个人/n并不/d认同/vn，/w我/rr觉得/v使用/gi代码/gi行数/n来/vf衡量/v微服务/gi的话/udh，/w就/d像/v使用/gi代码/gi量/n来/vf衡量/v一个/mq软件开发/nz工程师/gi一样/uyy，/w都/d是/vshi不/d科学/gi。/w /x微服务/gi的/ude1微/ag体现/v在/p职责/gi的/ude1单一/gi上/f，/w这个/rz个人/n非常/d认同/vn，/w微服务/gi就是/v职责/gi单一/gi的/ude1服务/gi。/w就/d像/v面向对象设计/gi中的/v单一/gi职责/gi一样/uyy，/w没有/v绝对/d的/ude1单一/gi，/w职责/gi的/ude1单一/gi完全/ad取决于/v对于/p业务/gi的/ude1分析/gi和/cc理解/gi。/w微服务/gi可以/v设计/gi像/vunix/gi那样/rzv简洁/gi。/w服务/gi前端/gi开发者/gi可以/v像/v写/vunix shell/nz脚本/gi一样/uyy开发/gi应用/gi。/w微服务/gi的/ude1好处/gi微服务/gi的/ude1好处/gi是/vshi显然/ad意见/gi的/ude1，/w微服务/gi可以/v能够/v实现/gi真正/d的/ude1敏捷/gi，/w能够/v快速/d部署/gi上线/n、/w能够/v具有/v很好/ad的/ude1伸缩性/gi、/w能够/v具有/v很好/ad的/ude1扩展性/n。/w微服务/gi还/d更容易/nz形成/v积木/n，/w能够/v在/p产品/gi的/ude1开发/gi中/f，/w越/d跑/v越快/nz。/w微服务/gi的/ude1挑战/gi微服务/gi对/p基础/gi服务设施/n的/ude1挑战/gi。/w既然/c微服务/gi的/ude1职责/gi单一/gi，/w那么/c就/d将要/d面对/v一个/mq网站/gi可能/v有/vyou成千上万/vl个/q微服务/gi。/w那么/c如何/ryv管理/gi好/a微服务/gi、/w以及/cc微服务/gi之间/f如何/ryv实现/gi高速/b的/ude1通信/gi、/w如何/ryv让/v开发者/gi非常/d方便/a的/ude1调用/gi微服务/gi。/w如何/ryv建立/gi完善/v的/ude1发布/gi系统/gi，/w能够/v实现/gi快速/d上线/n。/w当然/d这些/rz问题/gi，/w目前/t已经/d有/vyou很/d多/a框架/gi来/vf解决/v。/w微服务/gi对/p开发者/gi的/ude1挑战/gi。/w微服务/gi的/ude1团队/gi一般/ad按/p业务/gi划分/v的/ude1，/w一/nz个人/n负责/v一个/mq服务/gi或者/c一/nz个人/n负责/v多/a个/q服务/gi。/w那么/c微服务/gi开发者/gi，/w需要/v是/vshi一个/mq全栈/nz开发/gi工程师/gi，/w需要/v具备/v多种语言/l编程/gi的/ude1能力/gi、/w需要/v前后/f端的/z开发/gi能力/gi、/w需要/v运维/gi知识/gi、/wdba/gi知识/gi。/w虽然/c目前/t技术/gi发展/gi非常/d快/a，/w而且/c越来越/d简单/a，/w但是/c成为/v一名/nz全栈/nz开发/gi工程师/gi，/w还是/c具有/v不/d少/a的/ude1挑战/gi。/w微服务/gi与/cc云计算/gi2.0/nz目前/t的/ude1云计算/gi主要/b是/vshi指/v服务器/gi、/wcdn/gi和/cc各种/rz数据存储/gi的/ude1产品/gi。/w未来/t的/ude1云计算/gi将/d是/vshi一个/mq微服务/gi的/ude1库/n，/w这些/rz微服务/gi提供/v了/ule很/d多/a的/ude1基础/gi能力/gi，/w比如/v消息队列/gi、/w推送/nz服务/gi甚至/d抽象/gi出/vf了/ule部分/n行业/gi的/ude1基础/gi业务/gi服务/gi。/w这/rzv也/d是/vshi我/rr认为/v的/ude1云计算/gi的/ude1一个/mq发展趋势/l，/w目前/t也/d有/vyou这样/rzv的/ude1云计算/gi公司/nis。/w所以/c微服务/gi也/d是/vshi未来/t云计算/gi的/ude1一种/nz方式/n。/w未来/t前端/gi（/w服务/gi前端/gi）/w开发者/gi可能/v就/d像/v今天/t写/vunix/gi的/ude1shell/gi脚本/gi一样/uyy做/v应用开发/gi。/w期待/v成熟/a的/ude1微服务/gi案例/gi目前/t微服务/gi已经/d在/p社区/gi里/f，/w提/v的/ude1非常/d多/a，/w而且/c各种/rz关于/p微服务/gi的/ude1新闻/gi和/cc技术/gi文章/gi、/w技术/gi分享/gi也/d非常/d多/a，/w但是/c目前/t还/d没有/v成熟/a的/ude1微服务/gi案例/gi。/w所以/c微服务/gi还/d在/p发展/gi初期/f，/w期待/v一个/mq成功/a的/ude1微服务/gi案例/gi出现/v！/w