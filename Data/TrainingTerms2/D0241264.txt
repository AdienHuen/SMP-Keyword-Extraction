#redis/gi中/f关于/p过期/gi键/n的/ude1删除/gi策略/gi
  /x我们/rr已经/d了解到/v了/uleredis/gi是/vshi一种/nz内存数据库/gi，/wredis/gi中/f数据/gi都/d是/vshi以/pkey/gi-/nzvalue/nz的/ude1形式/gi存储/gi在/p内存/gi中/f，/w由/predis/gi服务器/gi来/vf维护/gi和/cc管理/gi这/rzv部分/n内存/gi，/w内存/gi是/vshi何足珍贵/nz，/w不/d需要/v的/ude1数据/gi或者/c是/vshi已经/d使用/gi过/uguo的/ude1没用/vi的/ude1数据/gi是/vshi不会/v让/v它/rr长久/a的/ude1存在/v于/p内存/gi中的/v，/w毕竟/d我们/rr还是/c要/v建设/gi节约型/n社会/n的/ude1。/w所以/c我们/rr可以/v通过/p给/p键/n设置/gi生存/vi时间/gi或者/c过期/gi时间/gi来/vf权衡/v有限/a的/ude1内存/gi和/cc不断/d增长/gi的/ude1数据/gi，/w设置/gi过期/gi时间/gi的/ude1命令/gi为/p：/w【/wexpire key /nz时间/gi长度/gi(/nz秒/qt)/nz】/w或者/c是/vshi【/wpexpire key /nz时间/gi长度/gi(/nz毫秒/q)/nz】/w /x同时/c也/d可以/v通过/p【/wexpireat key /nz时间/gi点/gi(/nzunix/gi时间/gi戳/v)/nz】/w，/w可以/v通过/pttl/nz命令/gi或者/c是/vshipttl/nz命令/gi查看/gi这个/rz键/n还有/v多少/ry剩余时间/nz。/w  /x数据库/gi中键/n的/ude1过期/gi时间/gi是/vshi保存/gi在/p一个/mq字典/gi中的/v，/w这/rzv在/predis/gi_/nz字典/gi中/f提到/v过/uguo了/ule，/w本文/r主要/b说明/v的/ude1问题/gi是/vshi过期/gi键/n删除/gi的/ude1问题/gi，/w一个/mq过期/gi的/ude1键/n肯定/v不会/v让/v它/rr长久/a的/ude1再/d存在/v于/p内存/gi中/f，/w肯定/v是/vshi要/v对/p它/rr进行/vn删除/gi的/ude1，/w建设/gi节约型/n社会/n嘛/y，/w那么/c什么/ry时候/n删除/gi它/rr呢/y？/w这里/rzs有/vyou三种/nz不同/a的/ude1删除/gi策略/gi，/w我们/rr逐一/d简单/a说明/v，/w很容易/nz理解/gi。/w /x1/nz，/w定时/d删除/gi    /x什么/ry是/vshi定时/d删除/gi？/w顾名思义/vl，/w就是/v我/rr定/v个/q时间/gi，/w到点/vi就/d删除/gi，/w有/vyou什么/ry好处/gi呢/y，/w对/p内存/gi是/vshi最/d友好/a的/ude1，/w可以/v保证/v过期/gi键/n会/v被/pbei尽快/d的/ude1删除/gi掉/v，/w内存/gi被/pbei尽早/d的/ude1释放出来/v，/w但是/c硬币/n都/d有/vyou两面/mq啊/y，/w内存/gi友好/a了/ule，/wcup/nz时间/gi呢/y，/w到点/vi就/d删除/gi到点/vi就/d删除/gi，/wcup/nz不/d干/v别的/rzv事/n了/ule，/w光/n做/v删除/gi过期/gi键/n操作/gi了/ule，/w不/d现实/n，/w并且/c服务器/gi还要/d创建/gi大量/m的/ude1定时器/gi，/w来/vf实现/gi定时/d删除/gi，/w如果/c内存/gi现在/t并不/d缺少/v，/w有/vyou空闲/gi的/ude1内存/gi，/w而/cc这个/rz时候/n有/vyou大量/m的/ude1命令/gi请求/gi在/p等待/gi服务器/gi处理/vn，/w那么/c服务器/gi也/d应该/v优先/vd把/pbacup/nz时间/gi给/p处理/vn客户端/gi请求/gi上/f，/w而/cc不是/c删除/gi过期/gi键/n上/f。/w   /x所以/c定时/d删除/gi不是/c一个/mq完美/a的/ude1策略/gi。/w /x2/nz，/w懒惰/a删除/gi   /x同样/d，/w什么/ry是/vshi懒惰/a删除/gi，/w懒惰/a，/w懒得/v做/v删除/gi操作/gi，/w不得已/a我/rr是/vshi不会/v去/vf删除/gi过期/gi键/n的/ude1，/w懒/a到家/a了/ule。/w   /x那么/c什么/ry时候/n是/vshi不得已/a的/ude1时候/n呢/y，/w客户端/gi现在/t取/v这个/rz数据/gi了/ule，/w这个/rzkey/gi已经/d过期/gi了/ule，/w明显/a不能/v返回/v给/p客户端/gi，/w这个/rz时候/n也/d就是/v懒/a到家/a的/ude1时候/n了/ule，/w不删/v不行/a啊/y，/w客户端/gi那边/rzs不/d愿意/v啊/y，/w可以/v看出/v，/w这个/rz策略/gi对/p内存/gi是/vshi极/d不好/a的/ude1，/w没有/v建设/gi节约型/n社会/n，/w但是/ccup/nz时间/gi是/vshi最/d友好/a的/ude1，/w不会/v轻易/d动用/vcup/nz时间/gi去/vf删除/gi过期/gi键/n。/w /x3/nz，/w定期/d删除/gi   /x定期/d？/w比/p定时/d时间/gi长一点/nz，/w不会/v时刻/n的/ude1去/vf检查/gi过期/gi键/n，/w删除/gi过期/gi键/n，/w定期/d删除/gi，/w是/vshi每隔/d一段时间/nz检查/gi一次/nz数据库/gi，/w删除/gi里面/f的/ude1过期/gi键/n，/w很/d明显/a定期/d删除/gi是/vshi定时/d删除/gi和/cc懒惰/a删除/gi的/ude1一个/mq折中/vn。/w那么/credis/gi中/f采用/v什么/ry过期/gi删除/gi策略/gi呢/y？/w   redis/nz时间/gi上/f采用/v了/ule惰性/n删除/gi和/cc定期/d删除/gi两/nz种/q策略/gi配合/v使用/gi，/w可以/v更好/d的/ude1使/vcup/nz时间/gi和/cc内存/gi区/n的/ude1平衡/a本文/r讨论/giredis/gi的/ude1过期/gi键/n删除/gi策略/gi就/d不能不/d提/vaof/gi和/ccrdb/gi两/nz种/q备份/gi策略/gi对/p过期/gi键/n的/ude1处理/vn首先/d说一下/nzrdb   /nz我们/rr知道/v服务器/gi启动/gi的/ude1时候/n如果/c开启/gi了/ulerdb/gi功能/gi，/w服务器/gi会/v对/prdb/gi文件/gi进行/vn载入/v   /x这里/rzs分/qt两/nz种/q情况/n   /x1/nz，/w主/ag服务器/gi模式/gi，/w会/v被/pbei文件/gi中的/v键/n进行/vn检查/gi，/w过期/gi的/ude1键/n忽略/v，/w所以/c过期/gi键/n对/p主/ag服务器/gi不会/v造成/v影响/gi，/w   /x2/nz，/w从/p服务器/gi模式/gi，/w无论/c过期/gi不/d过期/gi全部/m载入/v数据库/gi中/f，/w不过/c主/ag服务器/gi在/p进行/vn数据/gi同步/gi的/ude1时候/n，/w从/p服务器/gi的/ude1数据/gi会/v被/pbei清空/nz，/w所以/c一般来说/vl，/w对/p从/p服务器/gi来说/uls也/d不会/v造成/v影响/gi然后/c是/vshiaof  /nz记住/v一点/m，/w在/p执行/vaof/gi重写/gi的/ude1时候/n，/w过期/gi键/n不会/v被/pbei保存/gi到/v重写/gi后/f的/ude1aof/gi文件/gi中/f，/w所以/c过期/gi键/n不会/v对/paof/gi造成/v影响/gi。/w还有/v就是/v主从复制/gi的/ude1时候/n /x主/ag删除/gi一个/mq过期/gi键/n，/w会/v显示/gi的/ude1告诉/v从/p /x从/p在/p执行/v客户端/gi发送/gi的/ude1读/v命令/gi时/qt，/w即使/c是/vshi过期/gi键/n也/d不会/v删除/gi过期/gi键/n，/w而是/c像/v处理/vn未/d过期/gi键/n一样/uyy处理/vn，/w从/p只有/c介绍/gi到/v主/ag的/ude1del/nz命令/gi才/d会/v删除/gi