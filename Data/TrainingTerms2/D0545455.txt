#php/gi怎么/ryv很快/d的/ude1排除/gi错误/gi
对于/p编程人员/n来说/uls，/w难免会/l遇到/v很/d多/a的/ude1bug/gi，/w下面/f以/pphp/gi为/p例/n，/w简单/a的/ude1给/p大家/rr讲/v一下/m遇到/vbug/gi的/ude1处理方法/gi。/w方法/gi//nz步骤/gi1/nz首先/d是/vshi /x哪里/rys错/v了/ule找/v哪里/rys，/w你/rr看到/v哪里/rys报错/nz，/w就/d去找/v相应/vi的/ude1行数/n，/w然后/c查看/gi一/nz下/f，/w注意/v标点/n的/ude1对应/vi等/udeng，/w有时候/d很/d可能/v因为/c一个/mq标点符号/gi让/v你/rr这段/r代码/gi都/d不能/v走/v。/w2/nz打印/vsql语句/gi，/w经常/d会/v遇到/vsql语句/gi不/d执行/v的/ude1情况/n，/w打印/v出来/vf，/w然后/c把/pbasql语句/gi放到/v数据库/gi中/f，/w看看/v是否/v成功/a执行/v，/w如果/c成功/a执行/v，/w但是/c不能/v插入/gi数据库/gi，/w那/rzv肯定/v是/vshi你/rr下面/f的/ude1代码/gi错误/gi了/ule，/w如果/c不能/v成功/a执行/v，/w那/rzv肯定/v是/vshisql语句/gi的/ude1错误/gi。/w3/nz有的/rz时候/n会/v出现/v这样/rzv的/ude1问题/gi，/w你/rr都/d写完/v了/ule，/w也/d没/d报错/nz，/w但是/c代码/gi就是/v没/d走/v，/w这样/rzv的/ude1时候/n，/w你/rr就/d在/p每/rz一段/nz代码/gi前/f加上/v /x一句话/l，/w然后/cexit/nz(/nz)/nz;/nz结束/v。/w看到/v当/pecho/nz的/ude1内容/gi不能/v执行/v的/ude1时候/n，/w那/rzv肯定/v就是/v这段/r代码/gi错误/gi了/ule。/w然后/c慢慢/d的/ude1将/d范围/n缩小/v，/w看看/v到底/d是/vshi哪里/rys有/vyou问题/gi。/w4/nz程序/gi来源于/v生活/vn，/w平时/t写/v代码/gi的/ude1时候/n一定/b要/v有/vyou那个/rz逻辑思维/n在/p那里/rzs，/w磨刀不误砍柴工/i，/w想好/v了/ule以后/f再/d去/vf写/v，/w有/vyou了/ule逻辑/n以后/f写/v起来/vf肯定/v简单/a。/w代码/gi不会/v可以/v百度/ntc，/w可以/v学/v，/w但是/c切忌/v这个/rz逻辑思维/n是/vshi必须/d要/v有的/rz。/w5/nz大家/rr在/p写/v代码/gi的/ude1时候/n一定/b要/v细心/a，/w错误/gi往往/d正是/v你/rr不在意/i的/ude1，/w所以/c，/w不要/d轻视/vn小/a知识/gi，/w每/rz一句/nz代码/gi都/d用/p用心/gi写/v，/w可能/v因为/c你/rr的/ude1一个/mq小/a失误/vn，/w就/d会/v让/v公司/nis蒙受/v巨大/a的/ude1损失/n。/w