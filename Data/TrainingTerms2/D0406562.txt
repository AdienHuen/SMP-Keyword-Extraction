#IOC/nz与/ccAOP/nz介绍/gi
aop/gi面向/v切面/gi，/w虽然/c是/vshispring/gi框架/gi中的/v一个/mq重要/a内容/gi，/w但/c并/cc不是/cspring/gi首创/v。/w核心/n能力/gi是/vshi可以/v通过/p预编/v译/v方式/n和/cc运行/gi期/qv动态代理/gi实现/gi在/p不/d修改/gi源代码/gi的/ude1情况下/nz给/p程序/gi动态/gi统一/vn添加/gi功能/gi的/ude1一种/nz技术/gi。/wioc/gi控制/vn反转/gm，/w又称/gi依赖/v倒置/vi。/w在/p代码/gi中/f不/d直接/ad与/cc对象/gi和/cc服务/gi连接/gi，/w但/c在/p配置文件/gi中/f描述/gi哪/ry一个/mq组件/gi需要/v哪/ry一/nz项/q服务/gi。/w容器/gi负责/v将/d这些/rz联系/gi在/p一起/s。/w传统开发/gi中/f，/w总是/d主调/nz方/q在/p编码/gi期间/f就/d必须/d主动/ad集成/vn好/a被/pbei调方/nz，/w而/ccioc/gi实现/gi了/ule一种/nz更/d类/gi于/p，/w被/pbei调方/nz在/p运行/gi过程/gi中/f再/d根据/p配置/gi信息/gi去/vf配对/vi主调/nz方/q。/w上述/b两/nz种/q设计模式/nz，/w在/pjava/gi中都/ns是/vshi借助/v反射来/nz实现/gi的/ude1。/w这/rzv两/nz种/q设计模式/nz组合/gi后/f，/w其/rz核心/n好处/gi是/vshi提供/v了/ule一种/nz灵活度/nz非常/d高/a的/ude1组件/gi集成/vn方式/n，/w开发人员/n可以/v自由/a的/ude1在/p将/d组件/gi进行/vn组装/vn，/w在/p接口/gi之间/f进行/vn切入/v时/qt开发/gi，/w随心所欲/vl的/ude1增加/v包装/n或者/c装饰/gi等等/udeng；/w从而/c可以/v对/p业务逻辑/gi的/ude1各个/rz部分/n进行/vn隔离/vn，/w从而/c使得/vi业务逻辑/gi各/rz部分/n之间/f的/ude1耦合度/gp降低/v，/w提高/v程序/gi的/ude1可/v重用性/nz，/w同时/c提高/v了/ule开发/gi的/ude1效率/gi。/wioc/gi：/w在/p一个/mq业务/gi类/gi中/f，/w如果/c要用/v到/vclassa/nz，/w是不是/v要/vnew/nz一个/mqclassa/nz对象/gi？/w这个/rz就/d等于/v是/vshi业务/gi类/gi主动/ad的/ude1去/vf创建/gi一个/mq对象/gi。/w引用/gispring/gi之后/f，/w怎么/ryv处理/vn呢/y？/w是/vshi这个/rz业务/gi类/gi在/p需要/v一个/mqclassa/nz对象/gi时/qt，/w由/pspringioc/nz容器/gi去/vf创建/gi这个/rzclassa/nz对象/gi，/w然后/c注入/gi到/v业务/gi类/gi需要/v的/ude1地方/n。/w这里/rzs就/d体现/v了/ule控制/vn反转/gm的/ude1意思/n。/w也/d就是/v创建/gi这个/rzclassa/nz对象/gi由/p业务/gi类/gi主动/ad的/ude1去/vf创建/gi改为/v了/ule被动/a的/ude1接受/gispringioc/nz容器/gi的/ude1注入/gi。/waop/gi：/w面向/v切面/gi，/w多用/b在/p日志/gi、/w权限/gi等/udeng。/w某种意义/nz上/f很/d像/v代理/gi。/w比如/v希望/v在/p执行/v业务/gi类/gi的/ude1时候/n，/w同时/c记录/gi日志/gi。/w可以/v在/p执行/v业务/gi类/gi的/ude1代码/gi后/f插入/gi一/nz部分/n记录/gi日志/gi的/ude1代码/gi。/w但/c业务/gi类/gi有/vyou很/d多/a，/w如果/c每一个/nz业务/gi类/gi都/d调用/gi这段/r写/v日志/gi的/ude1代码/gi，/w就/d好/a麻烦/an，/w而且/c写/v日志/gi的/ude1代码/gi与/cc业务/gi类/gi的/ude1代码/gi也/d耦合/vn在/p一起/s。/w所以/c这时/rzt就/d可以/v用/p到/vaop/gi，/w把/pba这段/r写/v日志/gi的/ude1代码/gi抽出来/l，/w把/pba它/rr叫做/v一个/mq切面/gi，/w动态/gi切入/v到/v指定/v方法/gi的/ude1指定/v位置/gi，/w这个/rz位置/gi叫做/v切入点/n。/w这种/r思想/gi就是/v面向/v切面/gi的/ude1思想/gi，/w它/rr其实/d也/d是/vshi面向对象/gi思想/gi的/ude1一个/mq补充/vn。/w