#数据结构/gi中/f排序/gi算法-/nz /x二叉树/gi排序/gi（/w7/nz）/w
1/nz，/w二叉树/gi排序算法/gi基本/a思想/gi：/w二叉/b排序/gi树/gi：/w要么/c是/vshi空树/nz，/w要么/c满足/v以下/f条件/n：/w若/c左子/nz树/gi不/d空/ng，/w则/d左子树/nz所有/b结点/gm的/ude1均/d小于/v根结/nz点/gi的/ude1，/w若/c右子/nz树/gi不/d空/ng，/w右子树/nz所有/b结点/gm的/ude1均/d大于/v根结/nz点/gi的/ude1；/w左子/nz树/gi和/cc右子/nz树/gi也/d是/vshi一颗二叉/nz排序/gi树/gi。/w对于/p二叉/b排序/gi树/gi进行/vn中/f序/n遍历/gi，/w得到/v就是/v一个/mq有序/gi的/ude1序列/gi。/w因此/c二叉树/gi排序算法/gi是/vshi：/w对于/p待/vi排序列/nz，/w把/pba它/rr构建/gi一个二叉/nz排序/gi树/gi，/w再/d进行/vn中/f序/n遍历/gi即可/v，/w那么/c重点/n就是/v如何/ryv构建/gi一个二叉/nz排序/gi树/gi。/w其实/d就是/v进行/vn二叉/b排序树/nz的/ude1查找/gi，/w先/d构建/gi一/nz颗/q空树/nz，/w第一个/gi元素/gi作为/p此树/nz的/ude1根结/nz点/gi，/w从/p第二个/nz元素/gi开始/v在/p此/rzs树/gi中/f查找/gi，/w若/c不存在/ns，/w则/d，/w根据/p二叉/b排序树/nz的/ude1特性/gi在/p叶子结/nz点/gi插入/gi，/w直到/v最后/f一个/mq元素/gi。/w时间复杂度/gi：/wnlog/nz2/nz(/nzn/nz)/nz空间/n复杂度/gi：/w中/f序/n遍/qv历时/vi，/w需要/v构建/gi栈/gi，/w为/plogn/nz./nz /x这里/rzs有/vyou个/q很/d重要/a的/ude1点/gi：/w按照/p二叉/b排序树/nz的/ude1定义/gi，/w我们/rr是/vshi不/d可能/v在/p二叉/b排序/gi树/gi中/f看到/v两/nz个/q或/c两/nz个/q以上/f相同/a的/ude1元素/gi存在/v，/w因为/c右/f根/n左/f；/w但是/c待/vi排序列/nz中的/v关键字/gi总/b有/vyou一些/m是/vshi相同/a的/ude1，/w按照/p构建/gi二叉/b排序树/nz的/ude1方法/gi，/w最后/f中序/nz遍历/gi，/w总/b有/vyou相同/a元素/gi的/ude1被/pbei删掉/v，/w只/d保留/v其中/rz一个/mq，/w这样/rzv排序/gi结果/n就是/v错/v的/ude1，/w也/d没法/v知道/v该/rz算法/gi的/ude1稳定性/n，/w那/rzv该/rz怎么办/ryv？/w二叉树/gi的/ude1插入/gi操作/gi是/vshi在/p二叉/b排序/gi树/gi中/f找/v不到/v的/ude1情况下/nz插入/gi的/ude1，/w这里/rzs要/v做/v些/q修改/gi，/w就是/v在/p查找/gi成功/a的/ude1条件/n下/f也/d要/v插入/gi，/w怎么/ryv插入/gi？/w把/pba它/rr插入/gi到/v相同/a元素/gi的/ude1的/ude1右/f孩子/gi结/v点/gi处/n，/w作为/p与/cc其/rz相同/a元素/gi的/ude1右/f孩子/gi，/w原来/d与/cc其/rz相同/a元素/gi的/ude1右/f孩子/gi插入/gi在/p其/rz右/f指/v针域/nz，/w作为/p其/rz右/f孩子/gi。/w这样/rzv实际上/d是/vshi右/f=/nz根/n左/f，/w中/f序/n遍历/gi同样/d有序/gi，/w并且/c是/vshi稳定/an的/ude1算法/gi。/w基本操作/n：/w（/w1/nz）/w，/w二叉/b排序树/nz的/ude1查找/gi；/w（/w2/nz）/w，/w二叉/b排序树/nz的/ude1插入/gi；/w（/w3/nz）/w，/w二叉树/gi的/ude1中序/nz遍历/gi；/w（/w4/nz）/w，/w初始/b化栈/nz；/w（/w5/nz）/w，/w出栈/nz和/cc入栈/nz。/w（/w6/nz）/w，/w动态内存/nz管理/gi。/w /x代码/gi如下/vi：/w  /x运行/gi结果/n示意图/gi如下/vi：/w