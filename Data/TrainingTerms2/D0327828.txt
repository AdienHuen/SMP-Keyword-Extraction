#软件工程/gi（/wC/nz编码/gi实践篇/n）/w学习总结/gi
【/w周末/tm/nz原创/b作品/n转载/v请/v注明/v出处/n《/w软件工程/gi（/wc编码/gi实践篇/n）/w》/wmooc/nz课程/gi作业/gi  /x】/w一/nz./nz实验/gi报告二/nz./nz实验/gi代码/gi库三/nz./nz对/p软件工程/gi的/ude1理解/gi和/cc学习/gi软件工程/gi（/wc编码/gi实践篇/n）/w的/ude1心得/gi1./nz软件工程/gic编码/gi实践篇/n中/f孟/b老师/gi亲自/d录/ng的/ude1教学/gi视频/gi看起来/v清晰/a易懂/gi，/w对/p知识/gi的/ude1讲解/gi很/d生动/a，/w让/v复杂/a晦涩/a的/ude1代码/gi知识/gi变得/vi通俗易懂/nz。/w每段/r课件/gi之后/f还有/v相应/vi的/ude1测试/gi来/vf巩固/v。/w2./nz本/rz门/n课程/gi使用/gi实验楼/n进行/vn教学/gi，/w使用/gilinux/gi系统/gi，/w这/rzv对/p不会/vlinux/gi系统/gi的/ude1我/rr开始/v有些/rz困难/an，/w但/c在/p完成/v本/rz课程/gi后/f我/rr掌握/v了/ule简单/a的/ude1linux/gi操作/gi，/w认识到/v了/ulelinux/gi系统/gi的/ude1方便性/n和/cc实用性/n，/w是/vshi一个/mq很/d强大/a的/ude1操作系统/gi。/w3./nz软件工程/gic编码/gi实践篇/n课程/gi循序渐进/vl，/w从简/vi到/v难/a，/w有/vyou一个/mq很好/ad的/ude1过度/d，/w从/plinux/gi系统/gi的/ude1vim/nz编辑器/gi以及/ccgithub/gi版本/n管理器/nz这些/rz基本知识/nz到/v代码/gi的/ude1风/n规范/gi以及/cc类型/gi函数/gi名/q等/udeng的/ude1命名规则/gi等/udeng编程/gi基础/gi，/w先/d从/p这些/rz基本功/n开始/v教起/nz，/w一点一点/nz过渡到/v将/dmenu/nz设计/gi为/p可以/v重用/gi的/ude1子系统/gi，/w /x并且/c知道/v了/ule利用/v命令行/n参数/giargc/nz和/ccargv/nz来/vf处理/vn命令/gi参数/gi。/w本/rz课程/gi层次/n和/cc顺序/gi很好/ad。/w4./nz本/rz课程/gi采用/v同学/n互评/v的/ude1方式/n进行/vn评分/vn，/w让/v大家/rr可以/v交流/gi和/cc借鉴/gi，/w认识到/v自己/rr的/ude1不足之处/i并/cc加以改进/v。/w5./nz本/rz课程/gi还有/v至少/d五次/nz的/ude1上/f机课/nz，/w老师/gi和/cc助/v教会/nis认真/ad的/ude1帮/v我们/rr解决/v在/p试验中/nz遇到/v的/ude1问题/gi，/w让/v每次/r课程/gi都/d可以/v很好/ad的/ude1被/pbei消化吸收/nz。/w　　四/nz./nz在/p软件工程/gi（/wc编码/gi实践篇/n）/w中的/v收获/gi和/cc总结/gi（/w1/nz）/w学习/gi了/ulec编码/gi的/ude1知识/gi：/w1./nzlinux/gi系统/gi的/ude1vim/nz编辑器/gi，/w以及/ccgithub/gi版本/n管理器/nz。/w2./nz代码/gi的/ude1风/n规范/gi以及/cc类型/gi函数/gi名/q等/udeng的/ude1命名规则/gi等/udeng。/w3./nz基本/a的/ude1模块化/gi设计/gi，/w将/d业务/gi层/gi逻辑/n层/gi和/cc数据/gi存储层/nz分离/vi。/w4./nz将/d数据结构/gi抽出来/l独立/a成/v一个/mq通用/gi模块/gi的/ude1技巧/gi，/w用/p模块/gi尽最大/nz可能/v复用/gi数据结构/gi的/ude1代码/gi。/w5./nz使用/gicallback/nz函数/gi增加/v模块/gi的/ude1通用性/n，/w并/cc学习/gi了/ule隐藏/v接口/gi信息/gi。/w6./nz函数/gi的/ude1可/v重入性/nz和/cc线程安全/gi方面/n的/ude1知识/gi。/w7./nz将/dmenu/nz设计/gi为/p可以/v重用/gi的/ude1子系统/gi，/w /x并且/c知道/v了/ule利用/v命令行/n参数/giargc/nz和/ccargv/nz来/vf处理/vn命令/gi参数/gi。/w（/w2/nz）/w对/p软件工程/gi这/rzv门/n课/n有/vyou了/ule更深/d的/ude1认识/v，/w面向对象/gi的/ude1精髓/n在/p封装/gi，/w这/rzv就/d对/p代码/gi有/vyou了/ule更高/d的/ude1要求/n，/w我们/rr要/v尽量/d实现/gi模块化/gi，/w而/cc不仅仅/d是/vshi继承/gi，/w还/d认识到/v了/ule线程安全/gi的/ude1重要性/n。/w软件工程/gi这/rzv门/n课/n看/v文字/gi性/ng的/ude1内容/gi比较/gi多/a，/w但/c却是/d真正/d影响/gi到/v实际/n编程/gi中的/v，/w我们/rr应该/v活学活用/l，/w让/v高级/a软件工程/gi的/ude1思想/gi深入/ad到/v我们/rr日常/b的/ude1编程/gi中/f，/w写出/v更/d高效/b的/ude1代码/gi。/w因为/c本门/nz课/n只有/c十周/nz，/w我们/rr完成/v了/ule七次/nz实验/gi和/cc两/nz次测试/n，/w完成/v了/ule基本/a的/ude1学习/gi任务/gi，/w但是/c还/d没有/v熟练掌握/i，/w这/rzv是/vshi本次/r课程/gi的/ude1遗憾/gi。/w我会/r在/p以后/f的/ude1学习/gi中/f学习/gi孟宁/nz老师/gi在/p网易/ntc云/gi课堂/n上/f开设/v的/ude1其他/rzv相关/vn课程/gi来/vf弥补/v这个/rz遗憾/gi。/w