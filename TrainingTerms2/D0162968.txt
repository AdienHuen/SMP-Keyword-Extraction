#结构/gi体内/s存/v对齐/gi
   /x最近/t，/w在/p做题/nz时/qt遇到/v了/ule结构/gi体内/s存/v对齐/gi的/ude1问题/gi，/w发现/v这/rzv是/vshi我/rr的/ude1一个/mq盲点/nhd。/w于是/cc上网/v搜集/v资料/gi补一下/nz这/rzv方面/n的/ude1知识/gi。/w /x结构体/gi是/vshi一种/nz数据结构/gi，/w其/rz可以/v容纳/v多种不同/l的/ude1数据类型/gi。/w但是/c对于/p这些/rz数据类型/gi，/w其/rz有一点/nz要求/n，/w就是/v要求/n数据/gi内存/gi对齐/gi。/w也/d就是说/c，/w结构体/gi的/ude1内存/gi对齐/gi不是/c对/p所有/b数据类型/gi所/usuo占/v的/ude1空间/n字节数/nz的/ude1简单/a相加/vi，/w而是/c允许/v有/vyou一定/b的/ude1浪费/gi，/w但是/c这样/rzv做/v却/d换来/v了/ule访问/gi数据/gi的/ude1高效性/n，/w也/d就是/v俗称/v的/ude1以/p空间/n换/v时间/gi。/w那么/c结构体/gi中的/v数据/gi成员/nnt是/vshi怎样/ryv对齐/gi的/ude1呢/y？/w对于/p结构体/gi的/ude1成员/nnt，/w每个/r成员/nnt都/d以/p自己/rr所/usuo占/v字节数/nz的/ude1整数/gi倍/q作为/p偏移/gi地址/gi的/ude1开始/v，/w然后/c按照/p自己/rr的/ude1所/usuo占/v字节数/nz进行/vn占位/v。/w最后/f还要/d注意/v一点/m，/w结构体/gi的/ude1大小/n一定/b是/vshi最大/gm数据/gi成员/nnt内存大小/nz的/ude1整数/gi倍/q，/w也/d就是说/c，/w如果/c算/v出来/vf的/ude1大小/n不/d满足/v这个/rz条件/n，/w会/v自动/d补充/vn空间/n。/w /x仅仅/d说/v文字/gi总/b感觉/gi还是/c有点/d难以/d理解/gi，/w还是/c来看/u个/q例子/gi吧/y在/px86/gi /x32/nz位/q机上/s运行/gi，/w可以/v看到/v他们/rr的/ude1结果/nsizeof/gi(/nzs/nz1/nz)/nz /x=/nz /x12/nz,/nz sizeof/nz(/nzs/nz2/nz)/nz /x=/nz /x8./nz如下图/nz对于/p这/rzv两/nz个/q结构体/gi，/w其/rz数据/gi成员/nnt是/vshi一样/uyy的/ude1，/w只是/d声明/gi的/ude1顺序/gi不/d一样/uyy，/w却/d造成了/v其/rz大小/n不/d一样/uyy的/ude1结果/n。/w现在/t我们/rr来/vf分析/gi一下/m为什么/ryv会/v出现/v这种/r结果/n  /x对于/p结构体/gis/nz1/nz，/w第一个/gi是/vshichar/nz类型/gi，/w占/v一个字/nz节/q，/w其/rz开始/v的/ude1地方/n的/ude1偏移量/gi必须/d是/vshi1/nz的/ude1整数/gi倍/q，/w这里/rzs我们/rr假设/gi结构体/gi从/p0/nz地址/gi开始/v（/w下同/vi）/w，/w所以/cchar/nz就/d占据/v了/ule第一个/gi字节/gi；/w第二个/nz类型/gi是/vshiint/nz类型/gi，/w占/v4/nz个/q字节/gi，/w则/dint/nz开始/v的/ude1地方/n的/ude1偏移量/gi必须/d是/vshi4/nz的/ude1整数/gi倍/q，/w由于/p第一个/gi字节/gi位置/gi已经/d被/pbei第一个/gichar/nz类型/gi占据/v，/w因此/cint/nz类型/gi开始/v的/ude1地方/n的/ude1偏移量/gi不是/c0/nz*/nz4/nz /x=/nz /x0/nz，/w而是/c1/nz*/nz4/nz /x=/nz /x4/nz，/w也/d就是说/c第/mq5/nz~/nz8/nz个/q字节/gi是/vshi放/vint/nz类型/gi的/ude1，/w那么/c2/nz~/nz4/nz字节/gi的/ude1位置/gi怎么办/ryv，/w就/d空/ng在/p那里/rzs了/ule。/w接下来/vl是/vshi第三/nz个/q类型/gichar/nz类型/gi，/w占/v1/nz个/q字节/gi，/w其/rz开始/v的/ude1位置/gi的/ude1偏移量/gi必须/d是/vshi1/nz的/ude1整数/gi倍/q，/w由于/pint/nz类型/gi结束/v时/qt是/vshi字节/gi为/p8/nz的/ude1位置/gi，/w所以/c第/mq9/nz个/q字节/gi的/ude1地方/n放/v第二个/nzchar/nz类型/gi。/w其/rz图示/v如下/vi图/gi /x对于/p结构体/gis/nz2/nz，/w第一个/gi是/vshichar/nz类型/gi，/w占/v一个字/nz节/q，/w其/rz开始/v的/ude1地方/n的/ude1偏移量/gi是/vshi1/nz的/ude1整数/gi倍/q，/w因此/c第一个/gichar/nz占据/v第一个/gi字节/gi；/w第二个/nz数据/gi成员/nnt还是/cchar/nz类型/gi，/w其/rz开始/v的/ude1地方/n的/ude1偏移量/gi是/vshi1/nz的/ude1整数/gi倍/q，/w由于/p第一个/gi字节/gi已/d被/pbei占据/v，/w其/rz只能/v从/p第二个字/nz节/q（/w2/nz是/vshi1/nz的/ude1倍数/n）/w开始/v，/w因此/c第二个/nzchar/nz类型/gi占据/v第二个字/nz节/q；/w第三个/nz数据/gi成员/nnt是/vshiint/nz类型/gi，/w其/rz大小/n是/vshi4/nz个/q字节/gi，/w其/rz开始/v的/ude1地方/n是/vshi偏移量/gi为/p4/nz的/ude1整数/gi倍/q的/ude1位置/gi，/w由于/p偏移量/gi0/nz*/nz4/nz /x=/nz /x0/nz处/n开始/v的/ude1字节/gi已经/d被/pbei占据/v，/w而/cc偏移量/gi1/nz*/nz4/nz /x=/nz /x4/nz开始/v的/ude1位置/gi并未/d被/pbei占据/v，/w因此/c第三/nz个/qint/nz类型/gi占据/v5/nz~/nz8/nz的/ude1字节/gi。/w由于/p此时/r8/nz是/vshi4/nz（/w结构体/gi中/f最大/gm数据/gi成员/nnt的/ude1空间/n大小/n，/w也/d就是/vint/nz的/ude1大小/n）/w的/ude1倍数/n，/w所以/c不/d需要/v补充/vn多余/gi的/ude1空间/n。/w所以/c第二个/nz结构体/gi的/ude1空间/n大小/n是/vshi8/nz，/w其/rz图示/v如/v下图/n说完/v了/ule简单/a的/ude1情况/n，/w再/d来说/uls一点/m稍微/d复杂/a的/ude1情况/n，/w就是/v结构体/gi中/f含有/v数组/gi的/ude1情况/n。/w看/v如下/vi代码/gi那么/csizeof/gi(/nzs/nz)/nz /x=/nz /x24/nz还是/c sizeof/nz(/nzs/nz)/nz /x=/nz /x16/nz?/nz答案/gi是/vshi16。/nz如下/vi图/gi原因/n是/vshi结构体/gi中的/v数组/gi并/cc不是/c作为/p一个/mq整体/n对齐/gi，/w而是/c对数/gi组/n中/f每个/r成员/nnt分开/vi分别/d对齐/gi。/w在/p此/rzs例/n中/f，/w第一个/gi数据/gi成员/nntchar/nz占据/v第一个/gi字节/gi，/w第二个/nz数据/gi成员/nnt是/vshi一个/mq包含/v两/nz个数/n的/ude1数组/gi，/w那么/c拆开来/l就是/v两/nz个/qint/nz数据类型/gi，/w因此/c第/mq2/nz~/nz4/nz字节/gi留空/nrf以/p让/vint/nz类型/gi对齐/gi，/w而/cc数组/gi则/d占据第/nz5/nz~/nz12/nz字节/gi，/w最后/f的/ude1char/nz类型/gi占据第/nz13/nz个/q字节/gi，/w最后/f在/p填充第/nz14/nz~/nz16/nz个/q字节/gi以/p满足/v结构体/gi整体/n大小/n是/vshi结构体/gi最大/gm数据/gi成员/nnt大小/n的/ude1整数/gi倍/q的/ude1要求/n。/w其/rz图示/v如下/vi /x最后/f，/w再说/c一种/nz情况/n，/w就是/v结构体/gi中/f含有/v结构体/gi的/ude1情况/n。/w假设/gi存在/v以下/f代码/gi对于/p结构体/gis/nz1/nz，/w可以/v很快/d的/ude1判断/gi出来/vf其/rz大小/n是/vshi16/nz个/q字节/gi，/w具体分析/nz参考/gi上面/f。/w那么/c结构体/gis/nz2/nz的/ude1大小/n是/vshi多少/ry呢/y？/w是不是/v按照/p上面/f的/ude1分析/gi来/vf等于/v48/nz个/q字节/gi呢/y？/w从/p运行/gi结果/n我们/rr可以/v看出/v其/rz大小/n只有/c32/nz个/q字节/gi，/w如下/vi图/gi所示/nz，/w那/rzv是/vshi什么/ry原因/n呢/y？/w原来/d结构体/gi作为/p数据/gi成员/nnt存在/v于/p另一个/nz结构体/gi中/f时/qt，/w其/rz在/p算/v最大/gm的/ude1数据/gi成员/nnt空间/n大小/n时/qt是/vshi会/v分开/vi与/cc其他/rzv数据/gi成员/nnt（/w包括/v自身/rr结构体/gi的/ude1数据/gi成员/nnt和/cc包含/v此/rzs结构体/gi的/ude1外面/f的/ude1结构体/gi中的/v其他/rzv成员/nnt）/w进行/vn比较/gi，/w然后/c找出/v最大/gm的/ude1，/w以此/d来/vf进行/vn填充/v空白/n的/ude1空间/n以/p保证/v对齐/gi；/w然而/c，/w在/p计算/gi结构体/gi大小/n时/qt，/w其/rz内嵌/v的/ude1结构体/gi作为/p一个/mq数据/gi成员/nnt，/w是/vshi按/p该/rz内嵌/v结构体/gi的/ude1大小/n来/vf计算/gi的/ude1，/w但是/c却/d不会/v按照/p内嵌/v结构体/gi的/ude1整体/n大小/n来/vf对齐/gi，/w而是/c按照/p内嵌/v结构体/gi的/ude1最大/gm数据/gi成员/nnt的/ude1空间/n大小/n来/vf对齐/gi。/w针对/gi上面/f这种/r情况/n，/ws/nz2/nz中/f含有/v结构体/gis/nz1/nz，/w其/rz展开/v后/f与/ccs/nz1/nz的/ude1所有/b数据类型/gi中/fdouble/nz所/usuo占/v空间/n最大/gm，/w因此/c最后/f结构体/gis/nz2/nz的/ude1大小/n必然/d是/vshi8/nz的/ude1倍数/n，/w而/cc在/p计算/gi结构体/gis/nz2/nz大小/n的/ude1过程/gi中/f，/w第一个/gi第二个/nzchar/nz数据类型/gi分别/d占据/v第一个/gi第二个字/nz节/q，/w而/cc对于/p第三个/nz数据/gi成员/nnts/nz1/nz，/w虽然/cs/nz1/nz是/vshi作为/p整体/n的/ude1数据类型/gi占据/v16/nz个/q字节/gi，/w但是/c并/cc不是/c16/nz个/q字节/gi来/vf对齐/gi的/ude1，/w按照/ps/nz1/nz的/ude1最大/gm数据/gi成员/nnt的/ude1空间/n大小/n（/w此处/s是/vshisizeof/gi(/nzdouble/nz)/nz /x=/nz /x8/nz）/w来/vf对齐/gi，/w因此/c第/mq3/nz~/nz8/nz自己/rr留空/nrf，/w第/mq9/nz~/nz24/nz字节/gi被/pbeis/nz1/nz占据/v；/w接着/c最后/f一个/mq数据类型/gichar/nz，/w占据第/nz25/nz个/q字节/gi，/w最后/f为了/p满足/v整体/n空间/n大小/n是/vshi最大/gm数据/gi成员/nnt大小/n的/ude1整数/gi倍/q的/ude1要求/n，/w在/p最后/f填充第/nz26/nz~/nz32/nz个/q字节/gi空白/n空间/n。/w其/rz图示/v如下/vi所示/nz