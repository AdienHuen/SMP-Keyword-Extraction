#随笔/gi
 /x实在/d是/vshi不/d知道/v写/v什么/ry，/w于是/cc就/d当是/d随笔/gi了/ule，/w随便/ad写/v一/nz些/q自己/rr最近/t的/ude1感受/gi。/w /x1/nz、/w开发/gi中/f应该/v沉下/v心/n来/vf做/v代码/gi。/w对于/p代码/gi的/ude1开发/gi能力/gi，/w只要/c是/vshi做/v过/uguo了/ule一段时间/nz的/ude1，/w如果/c你/rr不/d去/vf学习/gi的话/udh，/w基本上/d就/d定位/gi在/p那里/rzs了/ule。/w基于/p这/rzv点/gi，/w我/rr归结为/v没有/v沉下/v心/n来/vf做/v代码/gi，/w有时/d我/rr就是/v的/ude1，/w大部分/n的/ude1问题/gi是/vshi出/vf在/p了/ule内存/gi泄露/gi上/f的/ude1，/w所以/c对于/p这/rzv方面/n需要/v多/a做/v调试/gi，/w多/a测试/gi，/w用/p各种/rz不同/a的/ude1环境/n去/vf测试/gi，/w才能/n找到/v问题/gi的/ude1所在/n。/w /x2/nz、/w开发/gi的/ude1过程/gi也/d是/vshi很/d重要/a的/ude1。/w开发/gi的/ude1过程/gi当然/d是/vshi包括/v开始/v的/ude1准备/v阶段/gi的/ude1，/w如果/c涉及/v到/v硬件/gi的/ude1调试/gi，/w开始/v的/ude1时候/n一定/b要/v花/n时间/gi将/d硬件/gi调好/v，/w要/v确定/v准备/v的/ude1硬件/gi在/p自己/rr的/ude1开发/gi中/f是/vshi可以/v嵌入/v进去/vf的/ude1，/w否则/c到/v最后/f了/ule才/d知道/v你/rr这个/rz硬件/gi是/vshi不能/v使用/gi的/ude1，/w那/rzv就/d来/vf不急/a了/ule。/w我/rr就/d吃/v过/uguo这样/rzv的/ude1亏/v，/w有的/rz硬件/gi涉及/v到/v驱动/gi的/ude1兼容性/gi，/w涉及/v到/v串口/gi数据/gi的/ude1发送/gi，/w都/d是/vshi自己/rr需要/v考虑到/v的/ude1。/w还有/v一点/m需要/v提出/v，/w就是/v在/p开发/gi的/ude1过程/gi中/f，/w每一步/d如果/c不/d确定/v的/ude1，/w一定/b要/v打断/v点/gi进行/vn调试/gi，/w查看/gi是否/v出现/v内存/gi泄露/gi的/ude1问题/gi，/w这个/rz很/d关键/n，/w这/rzv会/v影响/gi到/v程序开发/gi完成/v之后/f程序/gi的/ude1稳定性/n，/w如果/c不/d养成/v这样/rzv的/ude1习惯/n，/w就/d会/v在/p后面/f吃/v很大/d的/ude1亏/v。/w程序/gi跑/v了/ule一定/b的/ude1时间/gi就/d出现/v了/ule卡/n死/v的/ude1现象/n，/w那/rzv就/d掉/v的/ude1大/a了/ule。/w /x3/nz、/w多/a学习/gi，/w多/a和/cc别人/rr沟通/gi。/w这一点/nz不/d需要/v我/rr说/v了/ule吧/y。/w