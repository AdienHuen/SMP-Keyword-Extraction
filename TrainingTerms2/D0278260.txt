#三层架构/gi初/f接触/v
写/v在/p前边/f的话/udh：/w经过/p几天/nz奋战/vi，/w把/pba.net/gi视频/gi看完/v了/ule，/w然后/c就/d接触/v到/v了/ule三层/nz，/w我/rr以为/v会/v是/vshi很复杂/nz的/ude1东西/n，/w也/d有/vyou很/d多/a视频/gi，/w但/c其实/d就/d有/vyou一个/mq视频/gi，/w其他/rzv都/d是/vshi一/nz些/q文字/gi方面/n的/ude1资料/gi，/w现在/t就/d对/p这/rzv部分/n的/ude1内容/gi进行/vn简单/a的/ude1梳理/v吧/y定义/gi所谓/v三层/nz开发/gi就是/v把/pba整个/b业务/gi应用/gi分为/v表现/v层/gi、/w业务逻辑/gi层/gi和/cc数据访问层/gi，/w三层架构/gi中/f，/w各/rz层/gi之间/f相互依赖/nz，/w表示层/n依赖于/v业务/gi逻辑层/nz，/w业务/gi逻辑层/nz依赖于/v数据访问层/gi表现/v层/gi(/nzui/gi:/w userinterface/nz)/nz：/w位于/v最上层/f，/w用于/v显示/gi和/cc接受/gi用户/gi提交/gi的/ude1数据/gi，/w为/p用户/gi提供/v交互式/gi的/ude1界面/gi。/w即/v用户/gi在/p使用/gi一个/mq系统/gi的/ude1时候/n他/rr所/usuo见到/v所能/v操作/gi的/ude1界面/gi。/w这/rzv一/nz层/gi一般/ad为/pwindows/gi窗体/gi应用程序/nz或/cweb/gi应用程序/nz业务/gi逻辑层/nz(/nzbll/nz：/wbusinesslogic layer/nz)/nz：/w是/vshi表示层/n和/cc数据访问层/gi之间/f沟通/gi的/ude1桥梁/n，/w主要/b负责/v数据/gi的/ude1传递/v和/cc处理/vn。/w接受/gi用户/gi的/ude1指令/gi或者/c数据/gi输入/v，/w提交/gi给/p应用层/gi做/v处理/vn，/w同时/c负责/v将/d业务/gi逻辑层/nz的/ude1处理结果/n显示/gi给/p用户/gi。/w数据访问层/gi(/nzdal/gi:/wdatabase object model layer/nz)/nz：/w直接/ad操纵/gi数据库/gi，/w主要/b是/vshi增删/v改查/nz的/ude1功能/gi。/w(/nz实体/n层/gi)/nz：/w我/rr自己/rr理解/gi的/ude1实体/n层/gi是/vshi一个/mq承载/v着/uzhe数据/gi的/ude1容器/gi，/w它/rr对应/vi与/cc数据库/gi中的/v字段/gi，/w也/d不是/c严/a对应/vi，/w当/p数据库/gi中的/v表/n要/v添加/gi字段/gi，/w只/d需要/v在/p实体/n层/gi增加/v属性/gi就/d好/a，/w别的/rzv层/gi不/d需要/v添加/gi额外/b的/ude1内容/gi，/w只是/d接受/gi实体/n层/gi传递/v出来/vf的/ude1。/wp/nz./nzs/nz./nz /x业务/gi逻辑层/nz是/vshi整个/b三层/nz的/ude1核心内容/nz，/w分层/v的/ude1原理/gi就是/v在/p客户端/gi和/cc数据库/gi之间/f加/v的/ude1一个/mq“/w中间层/nz”/w，/w对/p数据/gi访问/gi起到/v一个/mq承上启下/vl的/ude1作用/gi。/w三层/nz结构/gi   /x三层/nz数据传递/gi方向/gi三层/nz的/ude1出现/v  /x一个/mq好/a的/ude1程序/gi应/v具备/v代码复用/gi性/ng好/a，/w可扩展性/gi强/a，/w灵活性/gi高/a，/w能/v快速/d的/ude1应对/v需求/gi的/ude1变更/gi。/w我们/rr在/p学习/gi设计模式/nz的/ude1时候/n，/w书/gi中/f也/d反复强调/nz“/w低/a耦合/vn，/w高/a内聚/nz”“/nz更改/gi关闭/gi，/w扩展/gi开放/gi”/w等/udeng原则/gi，/w这些/rz都/d不外乎/v是/vshi为了/p设计/gi出/vf更加/d优秀/gi的/ude1程序代码/nz，/w而/cc三层/nz归根结底/dl也/d是/vshi为了/p这些/rz。/w  /x三层/nz开发/gi可以/v使/v用户/gi、/w逻辑/n处理/vn、/w数据处理/gi单独/d分开/vi来/vf处理/vn，/w各个/rz层次/n间/f只/d开/v一个/mq小/a的/ude1窗口/s，/w来/vf进行/vn信息/gi的/ude1交流/gi，/w而/cc各层次/l间/f主要/b的/ude1功能/gi别的/rzv层/gi是/vshi不/d知道/v的/ude1，/w也/d可以/v说/v是/vshi不/d关心/v的/ude1，/w他们/rr之间/f来回/vd传递/v的/ude1只是/d一个/mq最终/d结果/n，/w其实/d我/rr的/ude1理解/gi是/vshi各/rz层/gi给/p各/rz层/gi传递/v的/ude1更多/ad的/ude1是/vshi一个/mq反馈/gi。/w  /x单独/d把/pba逻辑/n层/gi抽出来/l就/d更/d便利/an了/ule，/w拿/v机房收费系统/gi举例/gi，/w原来/d有/vyou许多功能/nz都/d需要/v判断/gi有无/v这个/rz用户/gi，/w但/c判断/gi过程/gi都/d是/vshi差不多/al的/ude1，/w我们/rr把/pba这/rzv部分/n逻辑/n判断/gi放到/v一个/mqfunction/nz里/f，/w放到/vb/nz层/gi，/w只/d需要/v在/pui/gi层/gi调用/gi这个/rzfunction/nz就/d能/v达到/v目的/gi。/w这/rzv使得/vi逻辑/n得到/v复用/gi。/w  /x开发人员/n也/d可以/v同时/c进行/vn工作/gi，/w只要/c定义/gi好/a相同/a的/ude1接口/gi就行了/l。/w总结/gi：/w我们/rr使用/gi三层/nz可以/v达到/v分散/a关注/v、/w松散/a耦合/vn、/w逻辑/n复用/gi、/w标准/gi定义/gi。/w优点/gi：/w开发人员/n可以/v只/d关注/v整个/b结构/gi中的/v其中/rz某一层/nz；/w可以/v很容易/nz的/ude1用/p新的/a实现/gi来/vf替换/v原有/v层次/n的/ude1实现/gi；/w可以/v降低/v层/gi与/cc层/gi之间/f的/ude1依赖/v；/w有利于/v标准化/vn；/w利于/v各/rz层/gi逻辑/n的/ude1复用/gi。/w缺点/gi：/w降低/v性能/gi；/w会/v导致/gi级联/n修改/gi总结/gi基础知识/nz的/ude1总结/gi每次/r都/d是/vshi至关重要/bl的/ude1，/w他/rr就/d像/v树根基/nz，/w扎根/v越深/nz，/w树/gi多/a高/a也/d不会/v被/pbei风/n刮倒/v。/w    /x当然/d，/w如果/c没有/v实践/gi，/w说什么/nz也/d是/vshi白/a搭/v，/w下/f一篇/nz博客/gi将/d总结/gi使用/givb.net/gi实现/gi的/ude1三层登录/gi。/w