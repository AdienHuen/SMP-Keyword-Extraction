#三层/nz加/v设计模式/nz
在/p机房重构/gi时/qt需要/v在/p三层/nz的/ude1基础上/nz添加/gi设计模式/nz。/w通常/d为/p外观/gi、/w抽象工厂/gi、/w接口/gi。/w /x外观层/nz：/w定义/gi一个/mq高层/n接口/gi，/w为/p子系统/gi中的/v接口/gi提供/v一个/mq一致/a的/ude1界面/gi。/w还/d记得/v那个/rz股票/n基金/n的/ude1例子/gi吗/y？/w看书/vi的/ude1时候/n感觉/gi听懂/v了/ule，/w但是/c用/p的/ude1时候/n还是/c懵/ag了/ule。/w不过/c最终/d还是/c勉强/ad做/v了/ule出来/vf。/w【/wfacade/gi】/wui/gi层/gi：/wfacade/gi层/gi：/wbll/nz层/gi：/w    /x通俗/a地/ude2来讲/uls，/w外观层/nz是/vshi给/pu/nz层/gi减负/v，/w使得/viu/nz层/gi和/ccb/nz层/gi的/ude1耦合度/gp降低/v，/w两者/rzv不再/d直接联系/v。/w外观/gi层/gi为/pu/nz的/ude1功能/gi提供/v了/ule所有/b用/p到/v的/ude1逻辑/n判断/gi和/cc操作/gi，/w这样/rzv大大减少/i了/ule在/pu/nz层/gi的/ude1代码/gi量/n和/cc联系/gi度/qv。/w【/w抽象工厂/gi配置文件反射/nz】/w配置/gi：/wfactory/gi层/gi：/wbll/nz层/gi：/w   /x在/p添加/gi抽象工厂/gi时/qt要/v注意/v引用/gisystem/nz./nzconfiguration/nz./nzdll/nz，/w否则/c一/nz些/q方法/gi调用/gi不/d出来/vf。/w另外/c反射/gi的/ude1式/k：/wassembly/nz./nzload/nz(/nz程序集/nz名称/n)/nz./nzcreateinstance/nz(/nz命名/v空间/n./nz类/gi名称/n“/w)/nz。/w   /x学习/gi过程/gi中/f一定/b要/v动手/gi去/vf实现/gi以下/f，/w有时候/d觉得/v自己/rr会/v了/ule，/w但是/c真正/d用/p的/ude1时候/n往往/d会/v抓/v瞎/a，/w不知所措/vl。/w