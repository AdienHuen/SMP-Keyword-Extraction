#设计模式/nz三――/nz单一职责原则/gi
一/nz、/w单一职责原则/gi：/w就/d一个/mq类/gi而言/uls，/w应该/v仅有/nz一个/mq引起/v它/rr变化/gi的/ude1原因/n。/w如果/c一个/mq类/gi承担/v的/ude1职责/gi过多/d，/w就/d等于/v把/pba这些/rz职责/gi都/d耦合/vn在/p一起/s，/w一个/mq职责/gi的/ude1变化/gi可能会/nz削弱/v或者/c抑制/v这个/rz类/gi完成/v其他/rzv职责/gi的/ude1能力/gi。/w这种/r耦合/vn会/v导致/gi脆弱/gi的/ude1设计/gi，/w当/p变化/gi发生/v时/qt，/w设计/gi会/v遭受/v意想不到/vl的/ude1破坏/v。/w二/nz、/w描述/gi：/w一般/ad我们/rr在/p进行/vn代码/gi设计/gi的/ude1时候/n都会/n遵循/gi单一职责原则/gi，/w就是说/c将/d不同/a职责/gi放在/v不同/a的/ude1类/gi中/f。/w会/v破坏/v单一/gi职责/gi的/ude1情况/n主要/b是/vshi对/p原有/v的/ude1职责/gi进行/vn了/ule扩展/gi或者/c是/vshi细分/gi。/w比如说/vl，/w原来/d又/d指责/va/nz，/w后来/t对于/p职责/gia/nz进行/vn类/gi细分/gi，/w变成/v类/gia/nz1/nz和/cca/nz2/nz，/w或者说/c添加/gi类/gi新的/a职责/gib/nz。/w这时候/rzt我们/rr对于/p是否/v继续/v遵循/gi就/d需要/v进行/vn考量/vi，/w即是/c对/p原始/a类/gi进行/vn修改/gi还是/c说/v将/d原始/a类/gi进行/vn重写/gi，/w进一步/d的/ude1细分/gi。/w这边/rzs主要/b考虑/v的/ude1以下/f几个/nz方面/n1./nz当前/t修改/gi的/ude1工作量/n2./nz对/p已有/v职责/gi的/ude1影响/gi是否/v过/uguo大/a，/w会/v不会/v造成/v已有/v职责/gi功能/gi的/ude1变化/gi3./nz后期/f再次/d拓展/v的/ude1工作量四/nz、/w优缺点/gi优点/gi：/w降低/v了/ule类/gi的/ude1复杂程度/n，/w一个/mq类/gi只/d负责/v一个/mq职责/gi比/p一个/mq类/gi负责/v多/a个/q职责/gi简单/a的/ude1多/a提高/v了/ule代码/gi的/ude1可读性/n提高/v了/ule代码/gi的/ude1可维护性/gi，/w修改/gi一个/mq类/gi，/w不会/v对/p其他/rzv类/gi有/vyou影响/gi降低/v变更/gi代码/gi引起/v的/ude1风险/gi提高/v了/ule代码/gi的/ude1可/v测试性/nz缺点/gi：/w单一/gi职责/gi会/v对/p类/gi进行/vn拆分/gi，/w修改/gi所/usuo引起/v的/ude1开销/n比较/gi大五/nz、/w总结/gi：/w在/p前期/f设计/gi时/qt，/w要/v遵循/gi代码/gi的/ude1单一职责原则/gi，/w在/p后期/f修改/gi时/qt，/w针对/gi修改/gi引起/v的/ude1开销/n和/cc后续/vn的/ude1修改/gi开销/n进行/vn考虑/v是否/v继续/v遵循/gi单一职责原则/gi引用/gi：/w大话/n设计模式/nz（/w程杰/nr）/w