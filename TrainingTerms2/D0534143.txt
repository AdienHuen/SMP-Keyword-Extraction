#算法/gi实现/gi（/w5/nz）/w大/a整数/gi乘法/gi
通常/d，/w在/p分析/gi算法/gi的/ude1计算/gi复杂性/gi时/qt，/w都/d将/d加法/gi和/cc乘法/gi运算/gi当作/v基本/a运算/gi来/vf处理/vn，/w即将/d执行/v一次/nz加法/gi或/c乘法/gi运算/gi所需/nz的/ude1计算/gi时间/gi当作/v一个/mq仅/d取决于/v计算机/gi硬件/gi处理速度/n的/ude1常数/n。/w这个/rz假定/v仅/d在/p参加/gi运算/gi的/ude1整数/gi能/v在/p计算机/gi硬件/gi对/p整数/gi的/ude1表示/v范围内/nz直接/ad处理/vn时/qt才/d是/vshi合理/a的/ude1。/w然而/c，/w在/p某些/rz情况下/nz，/w需要/v处理/vn很大/d的/ude1整数/gi，/w它/rr无法/v再/d计算机/gi硬件/gi能/v直接/ad表示/v的/ude1整数/gi范围内/nz进行/vn处理/vn。/w若/c用/p浮点数/gi来/vf表示/v它/rr，/w则/d只能/v近/a的/ude1表示/v它/rr的/ude1大小/n，/w计算/gi结果/n中的/v有效数字/gm也/d受到限制/v。/w若要/c精确/gi的/ude1表示/v大/a整数/gi并/cc在/p计算/gi结果/n中/f要求/n精确/gi的/ude1得到/v所有/b位数/n上/f的/ude1数字/gi，/w就/d必须/d用/p软件/gi的/ude1方法/gi来/vf实现/gi大/a整数/gi的/ude1算术/n运算/gi。/w设/vx/nz和/ccy/nz都/d是/vshin/nz位/q二进制/gi整数/gi，/w现在/t要/v计算/gi它们/rr的/ude1乘积/nxy/nz。/w可以/v用/p小学/nis所学/n的/ude1方法/gi来/vf设计/gi一个/mq计算机/gi乘积/nxy/nz的/ude1算法/gi，/w但是/c这样/rzv做/v计算/gi步骤/gi太多/ad，/w效率/gi较低/d。/w如果/c将/d每/rz两/nz个/q一位数/l的/ude1乘法/gi或/c加法/gi看作/v一步/nz运算/gi，/w那么/c这种/r方法/gi要/v进行/vno/nz(/nzn/nz平方/q)/nz步/qv运算/gi才能/n求出/v乘积/nxy/nz。/w下面/f用/p分治法/gi来/vf设计/gi更加/d有效/gi的/ude1大/a整数/gi乘法/gi算法/gi。/w将/dn/nz位/q二进制/gi整数/gix/nz和/ccy/nz都/d分为/v2/nz段/q，/w每段/r的/ude1长/a为/pn/nz//nz2/nz位/q。/w如下/vi是/vshi主要/b的/ude1伪代码/nz的/ude1实现/gi：/w此/rzs式/k看起来/v乎/y更/d复杂性/gi，/w必须/d减少/v乘法/gi次数/gi。/w上述/b二进制/gi大/a整数/gi乘法/gi同样/d可/v应用于/v十进制/n大/a整数/gi的/ude1乘法/gi以/p减少/v乘法/gi次数/gi，/w提高/v算法/gi效率/gi。/w