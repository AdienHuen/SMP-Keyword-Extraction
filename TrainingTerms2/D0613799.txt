#(/nz设计模式/nz)/nz简单工厂模式/gi之/uzhi通过/p配置文件/gi动态创建/n实现/gi类/gi
通常/d我们/rr在/p使用/gi简单工厂模式/gi的/ude1时候/n会/v由/p创建/gi方法/gicreate/gi通过/p传入/gi的/ude1参数/gi来/vf判断/gi要/v实例化/gi哪个/ry对象/gi，/w就/d像/v下面/f这样/rzv：/w这/rzv里面/f定义/gi了/ule5/nz个/qiimageselect/nz接口/gi的/ude1子类/gm，/w通过/p定义/gi好/a的/ude1泛型/giimageselectclientmode/nz来/vf决定/v实例化/gi哪个/ry子类/gm，/w现在/t遇到/v这么/rz一个/mq问题/gi，/w如果/c添加/gi到/v第/mq6/nz个子/n类/gi的话/udh，/w那/rzv就/d必须/d要/v更改/giimageselectfactory/nz类/gi以及/cc枚举/giimageselectclientmode/nz，/w可能/v你/rr会/v说/v“/w改/v一/nz下/f又/d何妨/d?/nz”/w，/w虽/c不说/c影响/gi不/d影响/gi什么/ry开闭/nz设计原则/gi，/w但是/c有/vyou个/q情况/n你/rr可/v成/v想到/v，/w你/rr这个/rz类/gi要/v打包/vi发布/gi给/p别人/rr用/p呢/y？/w别人/rr在/p没有/v源码/gi的/ude1情况下/nz如何/ryv扩展/gi呢/y？/w这里/rzs就/d需要/v我们/rr动态/gi的/ude1通过/p配置文件/gi来/vf加载/gi实现/gi类/gi了/ule。/w实现/gi的/ude1基本思路/nz为/p：/w通过/p读取/gi本地/gi的/ude1./nzproperties/nz文件/gi来/vf获取/gi我们/rr需要/v实例化/gi的/ude1类/gi，/w然后/c通过/p反射来/nz生成/v对象/gi，/w这样/rzv当/p你/rr把/pba发布/gi出去/vf的/ude1时候/n，/w使用者/n只用/v更改/gi配置文件/gi就/d可以/v让/v工厂/gi去/vf实例化/gi自己/rr后来/t才/d写/v的/ude1实现/gi类/gi，/w我们/rr看看/v实现/gi方式/n：/w这样/rzv，/w我们/rr就/d可以/v随便/ad实现/gi子类/gm，/w然后/c在/p./nzproperties/nz文件/gi中/f添加/gi对应/vi的/ude1包/v路径/gi，/w然后/c通过/pimageselectfactory/nz就/d可以/v进行/vn实例化/gi了/ule。/w