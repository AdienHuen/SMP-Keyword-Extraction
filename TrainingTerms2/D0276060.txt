#内存交换/gi
2014/nz-/nz02/nz-/nz22/nz /x16/nz:/w32/nz:/w51/nz /x分类/gi：/w linux/nz当/p物理/n内存/gi出现/v不足/an时/qt，/wlinux /nz内存/gi管理子系统/nz需要/v释放/gi部分/n物理/n内存/gi页/q。/w这/rzv一/nz任务/gi由/p内核/gi的/ude1交换/gi守护进程/gi kswaped /nz完成/v，/w该/rz内核/gi守护进程/gi实际/n是/vshi一个/mq内核/gi线程/gi，/w它/rr的/ude1任务/gi就是/v保证系统/n中/f具有/v足够/v的/ude1空闲页/nz，/w从而/c使/v内存/gi管理子系统/nz能够/v有效/gi运行/gi。/w在/p系统启动/l时/qt，/w这/rzv一/nz守护进程/gi由/p内核/gi的/ude1 init /nz进程/gi启动/gi。/w当/p内核/gi的/ude1交换/gi定时器/gi到期/vi时/qt，/w该/rz进程/gi开始运行/l。/w如果/c kswaped /nz发现/v系统/gi中的/v空闲页/nz很少/ad，/w该/rz进程/gi将/d按照/p下面/f的/ude1三种/nz方法/gi减少/v系统/gi使用/gi的/ude1物理页/nz：/w1．/nz /x减少/v缓冲区/gi和/cc页/q高速缓存/gi的/ude1大小/n。/w页/q高速缓存/gi中/f包含/v(/nz装入/v虚拟内存/gi空间/n的/ude1内存/gi映射/gi文件/gi)/nz的/ude1页/q，/w可能/v包含/v一/nz些/q系统/gi不再/d需要/v的/ude1页/q，/w类地/nz，/w缓冲区/gi高速缓存/gi中/f也/d可能/v包含/v从/p物理/n设备/gi中/f读取/gi的/ude1或/c写入/gi物理/n设备/gi的/ude1数据/gi，/w这些/rz缓冲区/gi也/d可能/v不再/d需要/v，/w因此/c，/w这/rzv两/nz个/q高速缓存/gi可/v用来/v释放出/v空闲页/nz。/w但是/c，/w同时/c处于/v这/rzv两/nz个/q高速缓存/gi中的/v页/q是/vshi不能/v丢弃/v的/ude1。/wlinux /nz利用/v“时钟/nz”算法/nz从/p系统/gi中/f选择/gi要/v丢弃/v的/ude1页/q，/w也/d即/v每次/r循环/gi检查/gi mem/nz_/nzmap /nz页/q向量/gi中/f不同/a的/ude1页块/nz，/w象/ng时钟/gi的/ude1分针/n循环/gi转动/v一样/uyy。/w时钟/gi算法/gi的/ude1原理/gi见/v图/gi /x10/nz-/nz7。/nz每次/r内核/gi的/ude1交换/gi进程/gi运行/gi时/qt，/w根据/p对/p物理/n内存/gi的/ude1需求/gi而/cc选择/gi不同/a页块/nz大小/n的/ude1 mem/nz_/nzmap /nz向量/gi进行/vn检查/gi。/w如果/c发现/v某/rz页块/nz处于/v上述/b两/nz个/q高速缓存/gi中/f，/w则/d释放/gi相应/vi的/ude1缓冲区/gi，/w并/cc将/d页块/nz重新/d收入/gi free/nz_/nzarea /nz结构/gi。/w2．/nz /x将/dsystem v /nz共享内存/nz页/q交换/gi出/vf物理/n内存/gi。/wsystem v /nz共享内存/nz页/q实际/n是/vshi一种/nz进程/gi间/f通讯/gi机制/gi，/w系统/gi通过/p将/d共享内存/nz页/q交换/gi到/v交换文件/l而/cc释放/gi物理/n内存/gi。/wlinux /nz同样/d使用/gi时/qt钟算法/nz选择/gi要/v交换/gi出/vf物理/n内存/gi的/ude1页/q。/w3．/nz /x将/d页/q交换/gi出/vf物理/n内存/gi或/c丢弃/v。/wkswaped /nz首先/d选择/gi可/v交换/gi的/ude1进程/gi，/w或/c其中/rz某些/rz页/q可/v从/p内存/gi中/f交换/gi出/vf或/c丢弃/v的/ude1进程/gi。/w可执行/nz映象/n的/ude1大部分/n内容/gi可/v从/p磁盘/gi映象/n中/f获取/gi，/w因此/c，/w这些/rz页/q可/v丢弃/v。/w选定/v要/v交换/gi的/ude1进程/gi之后/f，/wlinux /nz将/d把/pba该/rz进程/gi的/ude1一小/d部分/n页/q交换/gi出/vf内存/gi，/w而/cc大部分/n不会/v被/pbei交换/gi，/w另外/c，/w被/pbei锁定/v的/ude1页/q也/d不会/v被/pbei交换/gi。/wlinux /nz利用/v页/q的/ude1寿命/n信息/gi选择/gi要/v交换/gi的/ude1页/q，/w也/d即/v所谓/v“/w最近/t最少/d使用/gi（/wlru/gi）/w”算法/nz。/w页/q的/ude1寿命/n信息/gi保存/gi在/p mem/nz_/nzmap/nz_/nzt /nz结构/gi中/f。/w最初/d分配/gi某个/rz页/q时/qt，/w页/q的/ude1寿命/n为/p /x3/nz，/w每次/r该页/n被/pbei访问/gi，/w其/rz寿命/n增加/v /x3/nz，/w直到/v /x20/nz /x为/p至/p；/w而/cc当/p内核/gi的/ude1交换/gi进程/gi运行/gi时/qt，/w页/q寿命/n减/v /x1。/nz如果/c某个/rz页/q的/ude1寿命/n为/p /x0/nz，/w则/d该页/n可/v作为/p交换/gi候选页/nz。/w如果/c是/vshi“脏/nz”页/nz（/w该/rz信息/gi保存/gi在/p页表/gi项/q中/f）/w，/w则/d可/v将/d该页/n交换/gi出/vf物理/n内存/gi。/w但是/c，/w进程/gi的/ude1虚拟内存/gi区域/n可/v具有/v自己/rr的/ude1交换/gi操作/gi例程/gi（/w定义/gi在/p虚拟内存/gi操作/gi集中/v）/w，/w这时/rzt，/w将/d利用/v该/rz例程/gi执行/v交换/gi操作/gi，/w否则/c，/w交换/gi守护进程/gi在/p交换文件/l中/f分配/gi页/q，/w并/cc将/d该页/n写入/gi交换文件/l。/w当/p某/rz物理页/nz交换/gi到/v交换文件/l之后/f，/w该页/n对应/vi的/ude1页表/gi项/q被/pbei标志/n为/p无效/vi，/w同时/c包换/nz该页/n在/p交换文件/l中的/v位置/gi信息/gi；/w而/cc被/pbei释放出/v的/ude1物理页/nz则/d被/pbei收回/v到/v free/nz_/nzarea /nz数据结构/gi中/f。/w根据/p被/pbei释放/gi的/ude1页/q数目/gi，/wkswaped /nz会/v自动/d调节/vn交换/gi定时器/gi的/ude1间隔/n，/w以便/d能够/v有/vyou足够/v的/ude1时间/gi释放/gi更多/ad的/ude1页/q而/cc保证/v足够/v的/ude1空闲页/nz。/w交换文件/l中的/v页/q是/vshi经过/p修改/gi的/ude1页/q（/w通过/p在/p页表/gi项/q中/f设置/gi相应/vi的/ude1位/q而/cc标志/n该页/n为/p“/w脏/a”页/nz）/w，/w则/d当/p进程/gi再次/d访问/gi该页/n时/qt，/w操作系统/gi必须/d从/p交换文件/l中将/nnt该页/n交换/gi到/v物理/n内存/gi。/w