#连载/v：/w告诉/v你/rr如何/ryv设计/gi一个日/nz访问量/nz千万/nz级别/n的/ude1系统/gi，/w谈/voracle/gi的/ude1高级/a设计/gi和/cc开发/gi（/w1/nz）/w
假如/c要/v开发/gi一个日/nz访问量/nz百万/nz级别/n、/w甚至/d千万/nz级别/n访问量/nz的/ude1互联网/gi平台/gi，/w性能/gi和/cc安全/gi是/vshi首要/b考虑/v的/ude1因素/gi。/w单/b从/p性能/gi上/f讲/v，/w主要/b从/p以下/f几个/nz方面/n考虑/v：/w1/nz）/w硬件/gi及/cc网络设备/gi；/w2/nz）/w分布式/gi、/w集群/gi、/w读写/gi分离/vi、/wcdn/gi加速/gi等/udeng；/w3/nz）/w使用/gi优秀/gi的/ude1开发/gi框架/gi，/w充分利用/n缓存机制/gi；/w4/nz）/w良好/a的/ude1数据库/gi设计规划/n，/w包括/v数据库/gi集群/gi，/w关系型数据库/gi非关系型数据库/gi结合/v；/w5/nz）/w高性能/gi的/ude1开发/gi语言/gi编程/gi，/w特别/d是/vshi数据库/gi部分/n的/ude1编程/gi；/w等等/udeng。/w建设/gi一个/mq中大型/b互联网/gi平台/gi，/w是/vshi有/vyou技术/gi含金量/n的/ude1，/w抛开/v硬件/gi、/w网络/gi环境/n不说/c，/w系统/gi的/ude1性能/gi很大/d程度/n上/f取决于/v系统/gi构建/gi是否/v合理/a，/w系统/gi的/ude1设计/gi是否/v优良/z，/w其中/rz数据库端/nz的/ude1设计/gi和/cc开发/gi又是/c关键/n中的/v关键/n。/w本人/rr一直/d从事/vi互联网/gi平台/gi的/ude1开发/gi，/w也/d经常/d参与/gi公司/nis技术人员/nnt面试/gi工作/gi，/w针对/gi数据库/gi（/woracle/gi）/w部分/n我/rr通常/d会/v问/v对方/n二个/nz问题/gi：/w1/nz）/w请/v说明/vchar/nz(/nz10/nz)/nz、/wvarchar/nz2/nz(/nz10/nz)/nz和/ccnvarchar/nz2/nz(/nz10/nz)/nz的/ude1区别/gi；/w2/nz）/w请说出/v十种/nz以上/f对/p性能优化/gi有/vyou影响/gi的/ude1做法/n。/w面试/gi下来/vf的/ude1结果/n往往/d让/v人/n失望/a，/w真正/d能/v将/d这/rzv两/nz个/q问题/gi回答/v比较/gi好/a的/ude1凤毛麟角/n，/w这/rzv主要/b是因为/c即使/c是/vshi有/vyou很/d多/a工作经验/gi的/ude1开发人员/n，/w能/v有/vyou机会/gi接触/v大一点/nz的/ude1互联网/gi平台/gi的/ude1机会/gi并不多/l，/w更多/ad的/ude1是/vshi做/v一/nz些/q企业/gi管理系统/gi，/w几十/nz个/q，/w几/d百个/q使用/gi用户/gi的/ude1平台/gi，/w现在/t的/ude1服务器/gi性能/gi完全/ad可以/v弥补/v设计/gi上/f性能/gi缺陷/gi的/ude1不足/an。/w为了/p能/v向/p高手/n们/k学习/gi，/w针对/gioracle/gi的/ude1设计/gi及/cc开发/gi领域/gi，/w本人/rr将/d十来年/nz互联网/gi项目/gi建设/gi经验/gi和/cc大家/rr分享/gi，/w不当之处/i，/w请/v指出/v，/w大家/rr相互/d交流学习/n。/w开篇/n之前/f，/w先/d简要/ad回答/v上面/f两/nz个/q问题/gi。/w问题/gi1/nz）/wchar/nz(/nz10/nz)/nz、/wvarchar/nz2/nz(/nz10/nz)/nz、/wnchar/nz(/nz10/nz)/nz和/ccnvarchar/nz2/nz(/nz10/nz)/nz的/ude1区别/gi？/wchar/nz类型/gi是/vshi定长/nz的/ude1，/w不管/c你/rr是/vshi存/v3/nz个/q字母/gi还是/c9/nz个/q字母/gi，/wchar/nz(/nz10/nz)/nz都/d是/vshi存储/gi10/nz个/q字节/gi，/w不够/a的/ude1部分/n用/p空/ng补充/vn；/wvarchar/nz2/nz(/nz10/nz)/nz类型/gi变长/v，/w存/v3/nz个/q字母/gi就是/v占/v三个字/nz节/q。/w错误观点/nz：/wvarchar/nz2/nz类型/gi完全/ad可以/v替代/vchar/nz，/w能/v有效/gi节省/v数据/gi的/ude1存储空间/gi。/w纠正/v：/w虽然/c从/p存储空间/gi的/ude1角度/n考虑/v，/wvarchar/nz2/nz确实/ad比/pchar/nz合理/a，/w但/c系统/gi在/p处理/vn变长/v类型/gi时/qt，/w需要/v额外/b的/ude1资源/gi开销/n，/w当然/d这种/r开销/n是/vshi非常/d微小/a的/ude1，/w可以/v忽略/v，/w但/c当/p数据量/n大/a，/w需要/v处理/vn的/ude1数据/gi多/a时/qt，/w累积/v的/ude1开销/n就/d不能/v忽略/v了/ule。/w因此/c，/w当/p业务/gi明确/a字段/gi长度/gi时/qt，/w应该/v明确/a定义/gi为/pchar/nz类型/gi，/w如/v邮政编码/nchar/nz(/nz6/nz)/nz、/w性别/nchar/nz(/nz1/nz)/nz[/nzf/nz表示/v女/b，/wm/nz表示/v男/gi]/nz。/wnvarchar/nz类型/gi是/vshi针对/gi不同/a字符集/gi存储/gi的/ude1字节数/nz不同/a而/cc产生/v的/ude1。/w假如/c要/v存放/v最多/ad10/nz个/q中文/gi，/w那么/c就/d应该/v定义/gi为/pnvarchar/nz2/nz(/nz10/nz)/nz，/w而/cc不是/cvarchar/nz2/nz(/nz20/nz)/nz，/w因为/c在/punicode/nz下一个/nz中文/gi由/p2/nz个/q字节/gi表示/v，/w但/c编码/gi为/putf-8/gi时/qt，/w很可能/nz是/vshi3/nz个/q字节/gi，/w导致/givarchar/nz2/nz(/nz20/nz)/nz无法/v存储/gi10/nz个/q中文/gi。/w当/p需要/v存放/v中文/gi内容/gi的/ude1时候/n，/w建议/gi定义/gi为/pnchar/nz或/cnvarchar/nz2/nz类型/gi。/w问题/gi2/nz）/w请说出/v十种/nz以上/f对/p性能优化/gi有/vyou影响/gi的/ude1做法/n。/wa/nz）/w有效/gi定义/gi索引/gib/nz）/w普通/a表/n数据/gi对应/vi的/ude1表空间/gi和/cc索引表/nz对应/vi的/ude1数据表/gi空间/n分离/vic/nz）/w数据量/n大/a的/ude1表/n做/v分区表/gi设计/gid/nz）/w数据量/n大/a的/ude1表/n，/w依据/n业务/gi实际/n情况/n分拆/nz为/p当前/t表/n和/cc历史数据/gi表/ne/nz）/w字段/gi多/a的/ude1大/a表/n依据/n业务/gi实际/n情况/n分拆/nz成/v多/a个/q表/nf/nz）/w合理/a的/ude1字段/gi设计/gi，/w如/v能/vchar/nz(/nz2/nz)/nz的/ude1就/d不要/d定义/gi为/pchar/nz(/nz4/nz)/nz，/w能/vnumber/gi（/w6/nz）/w明确/a定义/gi的/ude1就/d不要/d定义/gi为/pnumber/gi或/cnumber/gi（/w10/nz）/w,/nz要/v记住/v1000/nz万条/q记录/gi的/ude1表/n，/w一个/mq多/a一个字/nz节/q就是/v多/a10/nzmg/nz）/w合理/a利用/voracle/gi的/ude1缓存区/nz，/w如/v将/d频繁/a访问/gi的/ude1基础表/nz数据加载/gi到/v内存/gi中/fh/nz）/w尽量/d减小/v事务/gi的/ude1粒度/gii/nz）/w合理/a使用/gi物化/vn视图/gij/nz）/w必要/a时/qt可以/v考虑表/nz的/ude1压缩/gi属性/gi待续/vi。。。/w