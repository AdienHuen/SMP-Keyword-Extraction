#软件工程/gi（/wC/nz编码/gi实践篇/n）/w学习总结/gi
软件工程/gi（/wc编码/gi实践篇/n）/w学习总结/gi“/w陈正伟/nz   /x原创/b作品/n转载/v请/v注明/v出处/n   /x《/w软件工程/gi（/wc编码/gi实践篇/n）/w》/wmooc/nz课程/gi /x软件工程/gi的/ude1理解/gi及/cc学习/gi软件工程/gi（/wc编码/gi实践篇/n）/w的/ude1心得/gi首先/d这/rzv节/q课/n的/ude1编程/gi环境/n是/vshi在/plinux/gi下/f进行/vn的/ude1，/w通过/p本/rz节/q课/n的/ude1几次/nz实验/gi下来/vf，/w让/v我/rr对/plinux/gi的/ude1操作/gi更加/d熟悉/v，/w对/plinux/gi系统/gi也/d有/vyou了/ule深刻/a的/ude1认识/v。/w对/p代码/gi风格/n更加/d注重/v，/w在/p这/rzv门/n课/n的/ude1实验/gi评分标准/n中/f，/w代码/gi风格/n的/ude1好坏/n在/p其中/rz占有/v一席之地/n，/w这/rzv让/v我/rr在/p编写/gi代码/gi的/ude1时候/n更加/d注重/v格式/gi，/w风格/n上/f的/ude1问题/gi，/w对于/p代码/gi中的/v空格/n，/w空行/n更加/d敏感/gi。/w包括/v对于/p注释/gi的/ude1编写/gi标准/gi也/d有/vyou了/ule更加/d深刻/a的/ude1认识/v。/w熟悉/v了/ule程序/gi的/ude1模块化/gi设计/gi，/w熟悉/v了/ule模块化/gi的/ude1优点/gi―/w―/w低/a耦合/vn，/w学会/v了/ule将/d代码/gi分离/vi，/w把/pba程序构/nz造成/v模块化/gi程序/gi。/w学会/v了/ule可/v重用/gi的/ude1代码/gi设计/gi，/w将/d代码/gi设计/gi成/v一个/mq通用/gi的/ude1结构/gi，/w独立/a的/ude1功能/gi，/w具有/v高/a内聚/nz的/ude1特点/n，/w这样/rzv可以/v使/v代码/gi更加/d通用/gi。/w并且/c学会/v了/ule使用/gicallback/nz函数/gi，/w可以/v进行/vn函数/gi的/ude1反向/gi调用/gi。/w并且/c在/p最后/f一个/mq实验/gi中将/nnt整个/bmenu/nz程序设计/gi成/v了/ule一个/mq可/v重用/gi的/ude1系统/gi，/w /x这样/rzv更加/d加深/v了/ule对于/p可/v重用性/nz的/ude1理解/gi。/w了解/v了/ule函数/gi的/ude1可/v重用性/nz和/cc线程安全/gi，/w对于/p多/a线/n程思想/nz以及/cc多/a线/n程下/nz代码/gi的/ude1安全性/gi问题/gi有/vyou了/ule更加/d深刻/a的/ude1认识/v。/w报告/gi地址/gi /x写/v一个/mqhello world/nz小/a程序/gi，/w目的/gi是/vshi了解/vlinux/gi系统/gi  /x命令行/n菜单/gi小/a程序/giv/nz1.0/nz，/w通过/p选择/gi语句/gi来/vf进行/vn命令/gi的/ude1判断/gi  /x内部/f模块化/gi的/ude1命令行/n菜单/gi小/a程序/giv/nz2.0/nz，/w定义/gi一个/mqlist/gi类/gi，/w通过/plist/gi进行/vn命令/gi的/ude1查找/gi增加/v操作/gi  /x用/p可/v重用/gi的/ude1链表/gi模块/gi来/vf实现/gi命令行/n菜单/gi小/a程序/giv/nz2.5/nz，/w将/d链表/gi的/ude1操作/gi分离出来/i并且/c写成/v通用/gi的/ude1接口/gi  /x用/pcallback/nz增强/v链表/gi模块/gi来/vf实现/gi命令行/n菜单/gi小/a程序/giv/nz2.8/nz，/w利用/vcallback/nz进行/vn函数/gi回调/gi  /x将/dmenu/nz设计/gi为/p可/v重用/gi的/ude1子系统/gi，/w将/dmenu/nz的/ude1接口/gi分离/vi做到/v可/v重用/gi，/w并且/c要/v兼顾/v信息/gi隐藏/v总结/gi收获/gi在学/v这/rzv门/n课/n之前/f对/p软件工程/gi理解/gi是/vshi认为/v只/d适用/vi于/p面向对象/gi的/ude1编程语言/gi中/f，/w如/vc++/gi，/wjava/gi。/w但是/c上完/ns这/rzv门/n课/n之后/f让/v我/rr认识/v的/ude1了/ule软件工程/gi这/rzv门/n课/n不仅/c只/d适用/vi于/p面向对象/gi，/w即使/c是/vshi面向/v过程/gi的/ude1c语言/gi也/d可以/v用/p到/v软件工程/gi的/ude1思想/gi来/vf进行/vn程序设计/gi。/w通过/p本/rz课程/gi的/ude1学习/gi，/w让/v我/rr认识到/v了/ule如何/ryv灵活运用/nc语言/gi的/ude1特性/gi来/vf进行/vn封装/gi，/w信息/gi隐藏/v，/w如何/ryv一步步/nz的/ude1将/d一个/mq程序/gi进行/vn模块化/gi修改/gi与/cc设计/gi，/w并且/c做到/v高内聚/nz，/w低/a耦合/vn的/ude1设计/gi。/w遗憾/gi希望/v老师/gi以后/f可以/v教/v我们/rr如何/ryv用/p代码实现/gi一/nz些/q经典/gi的/ude1设计模式/nz。/w因为/c设计模式/nz往往/d都/d是/vshi在/p课堂/n上/f学习/gi的/ude1，/w比较/gi抽象/gi，/w如果/c能/v教给/vn我们/rr怎么/ryv用/p代码实现/gi，/w那/rzv我们/rr的/ude1理解/gi一定会/nz更加/d深刻/a。/w