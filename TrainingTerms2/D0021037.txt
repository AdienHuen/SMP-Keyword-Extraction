#如何/ryv查看/gi我/rr的/ude1订单-/nzREST/nz的/ude1流程/giAPI/gi设计/gi案例/gi
来自/v：/w这/rzv是/vshi一个/mq关于/p订单/gi的/ude1故事/gi。/w四个月/nz前/f，/w我/rr在/p某/rz刚刚/d上市/vn不久/d的/ude1网上/s书城/n框框/gi网/n购买/gi了/ule一包/nz纸尿裤/nz，/w因为/c尺寸/gi不/d对/p，/w我/rr选择/gi了/ule退货/vi，/w由此/d开始/v了/ule我/rr糟糕/a的/ude1用户/gi体验/v：/w首先/d是/vshi快递公司/nis取回/v了/ule纸尿裤/nz却/d没有/v还款/vn给/p我/rr，/w接下来/vl，/w在/p两/nz个/q月/n的/ude1时间/gi里/f，/w我/rr不得/vi一次/nz又/d一次/nz的/ude1向/p框框/gi的/ude1客服/nz投诉/vn，/w客服/nz很/d客气/a，/w她/rr让/v我/rr说出/v我/rr的/ude1订单号/nz然后/c说/v需要/v帮/v我/rr查/v一/nz查/v，/w两/nz分钟/qt后/f，/w她/rr说/v需要/v和/cc快递公司/nis联系/gi，/w稍后/d再/d打给/nz我/rr；/w随后/d的/ude1客服/nz都/d很/d客气/a，/w但/c无一例外/nz的/ude1，/w她们/rr都/d不/d清楚/a我/rr订单/gi的/ude1处理/vn情况/n，/w她们/rr甚至/d很/d惊讶/a，/w快递公司/nis还/d没有/v给/p你/rr办/v吗/y？/w终于/d，/w我/rr失去/v了/ule耐心/gi，/w我/rr说/v，/w难道/d你们/rr框框/gi就/d只/d负责/v卖东西/n吗/y？/w送货/vi外包/nz了/ule你们/rr就/d不/d需要/v负责/v了/ule吗/y？/w究竟/d是/vshi谁/ry在/p处理/vn我/rr的/ude1订单/gi，/w谁/ry是/vshi责任人/nnt你们/rr不/d知道/v吗/y？/w整个/b流程/gi的/ude1处理/vn状态/gi你们/rr清楚/a吗/y？/w客服/nz支支吾吾/z半天/mq，/w说/v，/w我们/rr这/rzv就/d和/cc快递公司/nis联系/gi。/w框框/gi的/ude1问题/gi出/vf在/p什么/ry地方/n？/w顾客/gi找/v不到/v这个/rz订单/gi的/ude1直接/ad负责人/nnt，/w只能/v和/cc客服/nz打电话/vi，/w而/cc框框/gi自己/rr也/d失去/v该/rz订单/gi的/ude1状态/gi了/ule，/w于是/cc只能/v再/d打/v快递公司/nis的/ude1客服/nz，/w这样/rzv问题/gi透过/v组织/gi结构/gi层层/q传递/v下来/vf，/w执行力/nz可想而知/vl。/w那/rzv为什么/ryv顾客/gi找/v不到/v订单/gi的/ude1直接/ad负责人/nnt呢/y？/w因为/c顾客/gi失去/v对/p自己/rr订单/gi的/ude1可视化/gi了/ule，/w我/rr不/d知道/v我/rr的/ude1订单/gi现在/t处于/v一种/nz什么样/ryv的/ude1状态/gi，/w正处于/v哪/ry一个/mq步骤/gi，/w谁/ry是/vshi这个/rz步骤/gi的/ude1责任人/nnt，/w网站/gi上/f没有/v，/w自然/n无/v从/p得知/v。/w想想/v我们/rr的/ude1迭代/gi和/ccshow case/nz，/w也/d正是/v一种/nz对/p顾客/gi的/ude1可视化/gi手段/n。/w在/p下面/f的/ude1章节/n中/f，/w我们/rr将/d一起来/nz应用/girest/gi的/ude1架构/gi风/n逐步/d搭建/v一个/mq端/v到/v端的/z流程/gi管理系统/gi，/w看看/v如何/ryv解决/v这个/rz问题/gi，/w这个/rz问题/gi就是/v：/w看/v在/p上帝/n的/ude1份/q上/f，/w让/v我/rr看看/v我/rr的/ude1订单/gi。/w为什么/ryv使用/girest/gi？/w因为/c在/p下面/f的/ude1故事/gi中/f，/w我们/rr将/d会/v有/vyou大量/m的/ude1系统集成/gi工作/gi。/w为什么/ryv集成/vn要用/vrest/gi？/w因为/crest/gi的/ude1实质/gi是/vshi充分利用/nhttp/gi协议/gi，/w将/d其/rz作为/p一种/nz应用/gi协议/gi，/w而/cc不仅仅/d是/vshi传输/gi协议/gi，/w这样/rzv在/pweb/gi上/f做/v集成/vn时/qt能够/v最大/gm程度/n上/f的/ude1达成/v一致/a，/w形成/v大家/rr都/d能/v接受/gi的/ude1约定/v，/w减少/v集成/vn的/ude1工作量/n。/w另外/c，/w不可忽视/v的/ude1一点/m是/vshi，/w我们/rr更多/ad的/ude1是/vshi做/v数据/gi的/ude1mashup/nz，/w这/rzv很/d适合/vrest/gi的/ude1应用/gi特点/n。/w不能/v使用/giweb service/nz吗/y？/w当然/d可以/v使用/giweb service/nz，/w只是/d我们/rr这里/rzs使用/girest/gi而已/y。/w第一个/gi需求/gi，/w我/rr想/v随时随地/dl查看/gi我/rr的/ude1订单/gi好/a吧/y，/w很/d自然/n，/w这/rzv需要/v我们/rr的/ude1程序/gi支持/v移动设备/gi。/w图/gi /x1/nz /x昨天/t我们/rr这样/rzv开发/gi程序/gi相关/vn厂商/gi内容/gi相关/vn赞助商/nndcnutcon/nz容器/gi技术/gi大会/gi，/w2015/nz年/qt8/nz月/n28/nz日/b-/nz29/nz日/b /x北京/gi新/a云南/ns皇冠假日酒店/nt。/w。/w乎/y就/d在/p昨天/t，/w我们/rr还/d在/p如/v图/gi1/nz一般/ad开发/gi程序/gi，/w我们/rr一边/d打开/gifirebug/nz进行/vn调试/gi，/w一边/d诅咒/vie/nz的/ude1不得好死/a，/w那时/rzt我们/rr的/ude1关注点/n集中/v在/p前端/gi，/w集中/v在/p如何/ryv使/v各个/rz浏览器/gi的/ude1行为/n和/cc样式/gi保持一致/nz。/w而/cc服务器端/gi则/d是/vshi经典/gi的/ude1mvc/gi框架/gi，/w直接/ad将/d渲染/gi好/a的/ude1html/gi文档/gi扔回/nz客户端/gi。/w图/gi /x2/nz /x今天/t我们/rr这样/rzv开发/gi程序然/nz而/cc到/v了/ule今天/t，/w一切/rz都/d发生/v了/ule变化/gi，/w我们/rr开发/gi的/ude1程序/gi成/v了/ule图/gi2/nz的/ude1样子/n，/w随着/pie/nz向/p标准/gi的/ude1靠拢/gi，/whtml5/gi乎/y有/vyou一统/n客户端/gi之/uzhi势/ng，/w然而/c，/w移动互联网/gi的/ude1兴起/v让/v我们/rr编写程序/n重新/d变得复杂/nz，/w昨天/t我/rr只/d需要/v支持/v浏览器/gi，/w现在/t则/d需要/v支持/v各种/rz手机/gi平台/gi上/f的/ude1原生/b应用/gi。/w自然/n，/w和/cc昨天/t存在/v大量/m的/ude1javascript/gi和/cccss/nz框架/gi来/vf抹/v平/v不同/a浏览器/gi之间/f的/ude1差别/n一样/uyy，/w现在/t我们/rr也/d有/vyou了/ule和/cc来/vf抹/v平/v不同/a平台/gi之间/f的/ude1差别/n，/w尽管/c目前/t这些/rz跨平台/nz工具/gi还/d存在/v用户/gi体验/v不/d理想/n的/ude1问题/gi，/w但/c最重要/nz的/ude1变化/gi来自/v两/nz个/q方面/n：/w一/nz是/vshi客户端/gi重新/d变/v胖/a；/w二是/nz服务器端/gi由/p返回/v渲染/gi完成/v的/ude1页面/gi退化/vi为/p返回/v数据/gi，/w具体表现/nz就是/v对/p客户端/gi暴露出/iapi/gi。/w对/p移动设备/gi的/ude1支持/v使得/vi我/rr可以/v在/p写/v代码/gi时/qt、/w吃饭/vi时/qt、/w睡觉时/n甚至/d坐/v马桶/n时/qt随时/d查看/gi我/rr的/ude1订单/gi（/w当然/d前提/n是/vshi你/rr得有/v这些/rz设备/gi）/w，/w而/cc本文/r后续/vn的/ude1架构/gi变化/gi也/d会/v围绕/v着/uzhe图/gi2/nz逐渐/d演进/vn。/w至于/p明天/thtml5/gi是否/v会/v最终/d代替/v原生/b应用/gi，/w我/rr觉得/v不会/v，/w不仅仅/d是/vshi技术/gi原因/n（/w对/p设备/gi硬件/gi的/ude1使用/gi）/w更/d重要/a的/ude1是/vshi商业/n原因/n，/w替代/v后/f的/ude1苹果/nf变得/vi和/cc现在/t的/ude1微软/ntc//nz诺基亚/ntc一样/uyy尴尬/a，/w那么/c，/w也许/d后天/n？/w好/a吧/y，/w既然/c是/vshirest/gi的/ude1api/gi设计/gi，/w我们/rr来/vf看看/vrest/gi的/ude1架构/gi风/n。/wrestful /nz架构/gi遵从/v以下/f几个/nz原则/gi：/w请求/gi是/vshi客户-服务器/nz /x式/k的/ude1，/w并/cc很/d自然地/nz使用/gi一种/nz基于/p拉/v的/ude1交互/gi风/n。/w请求/gi是/vshi无状态/nz的/ude1。/w每个/r从/p客户端/gi到/v服务器端/gi的/ude1请求/gi都/d必须/d包含/v理解/gi此/rzs请求/gi所需/nz的/ude1全部/m信息/gi，/w而且/c不能/v利用/v服务器/gi上/f所/usuo存储/gi的/ude1上下文/gi。/w客户端/gi和/cc服务器/gi都/d遵从/v统一/vn的/ude1接口/gi。/w所有/b的/ude1资源/gi都/d可/v通过/p web /nz的/ude1普通/a接口/gi进行/vn访问/gi /x―/w―/w http /nz及/cc http /nz方法/gi：/wget/gi、/wpost/nz、/wput /nz和/cc delete/nz。/w客户端/gi通过/puri/nz与/cc命名/v的/ude1资源/gi进行/vn交互/gi。/w将/dhttp /nz状态/gi码/v作为/p系统/gi的/ude1状态/gi码/v。/wrest/gi的/ude1实质/gi是/vshi充分利用/nhttp/gi协议/gi，/w形成/v大家/rr都/d能/v接受/gi的/ude1约定/v。/w看/v例子/gi，/w我们/rr以/p订单/gi列表/vi作为/p整个/b应用/gi的/ude1调用/gi入口/n，/w我们/rr首先/d会/vget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorders/nz，/w服务器返回/n以下/f的/ude1数据/gi：/w在/p返回/v的/ude1数据/gi中/f，/w我们/rr看到/v了/ule：/w这个/rz链接/gi引导/v我们/rr查看/gi具体/a的/ude1订单/gi信息/gi，/w我们/rrget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorder/nz//nz1000/nz，/w服务器返回/n以下/f的/ude1数据/gi：/w这里/rzs我们/rr看到/v了/ule两/nz个/q链接/gi：/w它们/rr告诉/v我们/rr可以/v对/p这个/rz处于/v草拟/v状态/gi的/ude1订单/gi进行/vn修改/gi和/cc删除/gi。/w我们/rrget/gi另外/c一个/mq已完成/v的/ude1订单/gi看看/v：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorder/nz//nz1001/nz，/w返回/v数据/gi：/w没有/v更多/ad的/ude1链接/gi，/w这/rzv意味着/v我们/rr只能/v对/p该/rz订单/gi进行/vn查看/gi。/w在/p这些/rz交互/gi中/f，/w最重要/nz的/ude1是/vshi服务器端/gi返回/v数据/gi本身/rz已/d包含/v了/ule对/p其他/rzv资源/gi访问/gi和/cc对/p现在/t资源/gi操作/gi的/ude1线索/n。/w这样/rzv的/ude1好处/gi在于/v客户端/gi只/d需要/v一个/mq入口/n地址/gi，/w其他/rzv所有/b的/ude1操作/gi地址全部/nz由/p服务器端/gi确定/v，/w这/rzv使得/vi客户端/gi与/cc服务器端/gi解耦/gi，/w客户端/gi不必/d再/d硬/a编码/gi入/vuri/nz，/w能够/v各自/rr独立/a的/ude1进化/vn，/w服务器端/gi负责/v数据/gi、/w权限/gi以及/cc交互/giuri/nz的/ude1确定/v，/w客户端/gi重新/d回归/gi展现/v数据/gi的/ude1单一/gi职责/gi。/w第二个/nz需求/gi，/w实现/gi一个/mq简单/a的/ude1流程/gi在/p上面/f的/ude1例子/gi里/f，/w我们/rr看到/v了/ule订单/gi的/ude1crud/nz操作/gi，/w但/c这/rzv并/cc不是/c实际/n生活/vn中的/v真实情况/l，/w整个/b订单/gi的/ude1生命周期/nz如下/vi图/gi所示/nz：/w图/gi /x3/nz /x订单/gi的/ude1完整/a流程/gi在/p实现/gi这个/rz流程/gi时/qt，/w我们/rr分为/v两步/n：/w第一步/nz对/p订单/gi进行/vn资源/gi建模/gi；/w第二步/nz通过/p工作流/gi对/p订单/gi进行/vn流程/gi的/ude1生命周期管理/gi。/w图/gi /x4/nz /x订单/gi的/ude1资源/gi模型/gi图/gi /x5/nz /x使用/gi工作流/gi管理/gi订单/gi的/ude1生命周期/nz工作流/gi的/ude1职责/gi在于/v管理/gi订单/gi的/ude1生命周期/nz，/w在/p其/rz生命周期/nz的/ude1不同/a阶段/gi，/w我们/rr会/v有/vyou不同/a的/ude1参与者/gi，/w对/p订单/gi不同/a的/ude1操作/gi权限/gi。/w我们/rr的/ude1系统架构/gi演变成/v下面/f的/ude1样子/n：/w图/gi /x6/nz /x使用/gi工作流/gi管理/gi资源/gi模型/gi的/ude1生命周期/nz看/v例子/gi，/w这次/r将/d我们/rr视角/n转移/v到/v框框/gi网/n这边/rzs，/w看看/v框框/gi如何/ryv处理/vn我们/rr已/d提交/gi的/ude1订单/gi。/w我们/rr使用/giget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorders/nz?/nzstatus/gi=/nzwaiting/nz-/nzreview/nz来/vf获取/gi所有/b需要/v审核/gi的/ude1订单/gi，/w服务器返回/n以下/f的/ude1数据/gi：/w我们/rr查看/gi具体/a的/ude1订单/gi信息/gi，/w我们/rrget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorder/nz//nz1000/nz，/w服务器/gi判断/gi出/vf我们/rr是/vshi框框/gi网/n员工/gi，/w返回/v以下/f的/ude1数据/gi：/w注意到/v这/rzv两/nz行/ng：/w这段/r信息/gi是/vshi由/p工作流/gi加入/v的/ude1，/w它/rr告诉/v我们/rr当前/t订单/gi的/ude1状态/gi为/p等待/gi审核/gi以及/cc下一步/nz需要/v我们/rr来/vf审核/gi。/w那么/c，/w我们/rrput/nz告诉/v服务器/gi我们/rr审核/gi通过/p，/w服务器返回/n数据/gi：/w同样/d，/w工作流/gi加入/v了/ule这/rzv两/nz行/ng数据/gi：/w告诉/v我们/rr当前/t订单/gi状态/gi为/p等待/gi送货/vi，/w而/cc下一步/nz需要/v我们/rr来/vf完成/v这一步/nz。/w此时/r，/w如果/c顾客/gi来/vf查看/gi自己/rr的/ude1订单/gi会/v得到/v什么/ry数据/gi呢/y？/w服务器/gi会/v判断/gi出/vf当前/t请求/gi的/ude1用户/gi是/vshi顾客/gi，/w那么/c：/w顾客/gi能够/v看到/v自己/rr的/ude1订单/gi正处于/v等待/gi送货/vi状态/gi，/w而/cc不会/v有/vyou下一步/nz的/ude1动作/gi。/w恩/ng，/w很好/ad，/w框框/gi网/n订单/gi处理速度/n很快/d，/w而/cc这/rzv正是/v网购/v的/ude1主要/b竞争力/gi之一/rz。/w等等/udeng，/w如果/c订单/gi审核/gi不/d通过/p呢/y，/w继续/v看/v流程/gi：/w图/gi /x7/nz /x增加/v一个/mq网关/gi作为/p框框/gi网/n的/ude1员工/gi，/w我们/rrget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorder/nz//nz1000/nz，/w服务器/gi判断/gi出/vf我们/rr是/vshi框框/gi网/n员工/gi，/w返回/v以下/f的/ude1数据/gi：/w注意到/v这/rzv两/nz行/ng：/w系统/gi告诉/v我们/rr这/rzv是/vshi一个/mq排他/v网关/gi，/w我们/rr需要/v作出/v选择/gi，/w在/p客户端/gi与/cc服务器端/gi就/dmedia/nz-/nztype/nz达成/v一致/a的/ude1情况下/nz（/w即/v客户端/gi能够/v充分/ad理解/gi服务器端/gi返回/v的/ude1数据式/nz，/w这个/rz数据式/nz被/pbei标准化/vn）/w，/w我们/rr的/ude1代码/gi不/d需要/v作出/v任何/rz的/ude1修改/gi，/wpass/gi和/ccreject/nz作为/p工作/gi流变量/nz被/pbeiput/nz到/v服务器/gi，/w由/p工作/gi流引擎/nz进行/vn处理/vn，/w同样/d不会/v影响/gi到/v订单/gi的/ude1资源/gi建模/gi。/w在/p这些/rz交互/gi中/f，/w最重要/nz的/ude1是/vshi我们/rr通过/p工作流/gi实现/gi了/ulerest/gi社区/gi所/usuo呼吁/v的/ude1“/w将/d超媒体/gi作为/p应用/gi状态/gi的/ude1引擎/n（/whypermedia as the engine of application state/nz）/w”/w。/w更/d简单/a地/ude2说/v，/wuri/nz代表/nnt了/ule状态机/gi里/f的/ude1状态/gi迁移/gi。/w我们/rr通过/psquence/nz、/wactivity/gi和/ccxor/nz标签/gi让/v客户端/gi是/vshi通过/p跟随/v链接/gi的/ude1方式/n来/vf操作/gi订单/gi状态机/gi的/ude1状态/gi转移/v。/w第三/nz个/q需求/gi，/w框框/gi将/d物流/n部分/n外包/nz在/p我们/rr实际/n的/ude1生活/vn中/f，/w电商/gi们/k并不/d自己/rr送货/vi，/w他们/rr将/d这/rzv部分/n工作/gi外包/nz给/p了/ule物流公司/nis。/w从/p成本/n的/ude1角度/n考虑/v，/w外包/nz送货/vi是/vshi最合适/a的/ude1选择/gi。/w实际上/d，/w整个/b订单/gi从/p提交/gi到/v最后/f的/ude1完成/v情况/n还要/d稍微/d复杂/a一/nz些/q，/w如下/vi图/gi所示/nz：/w图/gi /x8/nz /x订单/gi从/p提交/gi到/v完成/v的/ude1整个/b流程/gi从/p图/gi中/f我们/rr可以/v看出/v，/w这个/rz流程/gi跨越/v了/ule两/nz家/q公司/nis，/w同时/c也/d涉及/v到/v了/ule三个/nz系统/gi的/ude1集成/vn，/w这/rzv三个/nz系统/gi分别/d是/vshi框框/gi网/n的/ude1前台/n网站/gi、/w框框/gi网/n的/ude1后台/gi负责/v仓储/vn、/w进/vf出货/vi和/cc物流/n的/ude1erp/gi系统/gi以及/cc外包/nz物流公司/nis的/ude1erp/gi系统/gi。/w三个/nz系统/gi各自/rr有/vyou自己/rr的/ude1处理/vn流程/gi，/w整个/b订单/gi的/ude1端/v到/v端/v处理/vn流程/gi由/p这/rzv三个/nz系统/gi的/ude1三个/nz流程/gi所/usuo共同完成/l：/w当/p我们/rr在/p框框/gi网/n提交/gi订单/gi时/qt，/w一个/mq消息/n被/pbei发送到/l框框/gi的/ude1后台/gierp/gi系统/gi，/w这个/rz消息/n触发/gi一个/mq货物/n的/ude1出库/n流程/gi，/w当/p货物/n打包/vi完毕/vi出库/n时/qt，/w一个/mq消息/n被/pbei发送到/l物流公司/nis的/ude1erp/gi系统/gi，/w同时/c触发/gi物流公司/nis的/ude1包裹/n配送/vn流程/gi，/w当/p我们/rr给/p物流公司/nis的/ude1配送员/nz付款/vi完毕/vi时/qt，/w对/p我们/rr顾客/gi来说/uls框框/gi的/ude1购物/vn流程/gi已经/d结束/v，/w然而/c整个/b流程/gi依旧/z还要/d继续/v，/w配送员/nz回到/v公司/nis完/vi款/q，/w一个/mq消息/n被/pbei发送/gi回/v框框/gi的/ude1后台/gierp/gi，/w物流公司/nis的/ude1包裹/n配送/vn流程/gi结束/v，/w框框/gi网/n的/ude1这个/rz订单/gi这/rzv才/d处理/vn完成/v。/w在/p本文/r的/ude1一/nz开始/v，/w我们/rr提到/v了/ule那个/rz糟糕/a的/ude1退货/vi故事/gi，/w问题/gi就/d在于/v当/p订单/gi交由/v物流公司/nis进行/vn货物/n配送/vn时/qt，/w我们/rr包括/v框框/gi失去/v了/ule对/p配送/vn流程/gi的/ude1可视化/gi，/w物流公司/nis的/ude1处理/vn情况/n在/p我们/rr的/ude1流程/gi中/f黑盒/gi了/ule。/w如何/ryv解决/v这/rzv部分/n的/ude1问题/gi呢/y，/w有/vyou两/nz种/q处理方法/gi：/w一/nz是/vshi在/p框框/gi网/n订单/gi处理/vn流程/gi中/f加入/v捕获/v事件/gi，/w正如/v图/gi8/nz中/f所示/nz的/ude1，/w当/p框框/gi后台/gierp/gi和/cc物流公司/niserp/gi对/p订单/gi进行/vn处理/vn时/qt，/w每/rz到/v一个/mq任务/gi节点/gi就/d给/p框框/gi网/n的/ude1订单/gi处理/vn流程/gi发送/gi消息/n，/w由此/d给/p我们/rr标示出/n订单/gi的/ude1实时/n状态/gi。/w图/gi /x9/nz /x通过/p系统集成/gi传递/v订单/gi实时处理/gi消息/n现在/t，/w让/v我们/rr来/vf看看/v自己/rr的/ude1订单/gi会/v得到/v什么/ry数据/gi呢/y，/wget /nz框框/gi网/n前台/n网站/gi返回/v数据/gi：/w订单/gi状态/gi为/p等待/gi物流公司/nis送货/vi，/w注意到/v这段/r数据/gi：/w工作流/gi加入/v了/ule订单/gi处理/vn的/ude1历史/n信息/gi，/w从/p这段/r信息/gi可以/v看出/v，/w我们/rr要/v明天/t上午/t才能/n收到/v自己/rr的/ude1货物/n了/ule。/w很/d不错/a不是/c吗/y，/w但是/c现实情况/n又是/c怎样/ryv呢/y。/w我们/rr先/d来/vf看看/v当当/v，/w当当/v如是说/dl：/w订单/gi状态/gi变为/v“/w已/d发货/vi”/w后/f，/w您/rr可以/v登录/gi“/w我/rr的/ude1订单/gi”/w，/w点击/v订单号/nz进入/v订单/gi详情页/n查看/gi快递公司/nis的/ude1联系方式/nz，/w用/p订单号/nz查询/gi即可/v。/w我们/rr再来/d看看/v卓越/a，/w卓越/a如是说/dl：/w宅急送/nz配送/vn的/ude1订单/gi：/w登录/gi网站/gi或/c拨打/v020/nz-/nz82252310/nz-/nz802/nz查询/gi；/w港/n中能/j达/v配送/vn的/ude1订单/gi：/w登录/gi网站/gi或/c拨打/v020/nz-/nz86443920/nz查询/gi。/w也/d就是说/c物流公司/nis的/ude1配送/vn流程/gi状态/gi并/cc没有/v集成/vn到/v网站/gi中/f来/vf，/w如下/vi图/gi所示/nz：/w图/gi /x10/nz /x网站/gi与/cc物流公司/nis系统/gi没有/v集成/vn为什么/ryv没有/v集成/vn呢/y？/w第一/mq是/vshi物流公司/nis的/ude1客户/n往往/d不止/v框框/gi一家/n，/w第二/mq是/vshi框框/gi也/d不会/v把/pba鸡蛋/nf放在/v一家/n物流公司/nis的/ude1篮子/n里/f，/w这些/rz给/p系统集成/gi带来/v了/ule难度/n，/w我们/rr会/v突然/ad发现/v有/vyou大量/m的/ude1系统/gi需要/v集成/vn，/w而/cc系统/gi间/f的/ude1集成/vn之间/f存在/v太多/ad的/ude1集成/vn点/gi，/w调试/gi以及/cc约定/v，/w这些/rz都/d需要/v大量/m的/ude1工作/gi和/cc成本/n，/w系统/gi们/k被/pbei紧紧/d的/ude1耦合/vn在/p一起/s。/w既然/c第一种/nz实现/gi方式/n使得/vi我们/rr即时/d查看/gi我们/rr订单/gi状态/gi成本/n太大/d，/w那/rzv我们/rr看看/v第二种/nz方法/gi：/w使用/gi一个/mq统一/vn的/ude1流程/gi管理系统/gi来/vf管理/gi整个/b端/v到/v端的/z流程/gi。/w图/gi /x11/nz /x使用/gi统一/vn的/ude1业务流程/nz管理系统/gi管理/gi端/v到/v端/v流程/gi业务流程/nz管理系统/gi的/ude1职责/gi有/vyou两/nz个/q：/w一/nz是/vshi由/p其/rz管理/gi起/vf各个系统/l间/f的/ude1集成/vn工作/gi，/w这样/rzv避免/v了/ule各个系统/l间/f的/ude1大量/m耦合/vn；/w二是/nz由/p其/rz跟踪/vn订单/gi状态/gi，/w完成/v订单/gi在/p整个/b流程/gi中的/v可视化/gi。/w图/gi /x12/nz /x框框/gi订单/gi的/ude1端/v到/v端/v流程/gi我们/rr来/vf看看/v具体/a的/ude1api/gi调用/gi，/w当/p我们/rr在/p框框/gi网站/gi提交/gi一个/mqid/nz为/p1000/nz的/ude1订单/gi时/qt，/w框框/gi网站/gi会/v发送/gi一个/mq消息/n到/v，/w由此/d触发/gi整个/b的/ude1流程/gi，/w启动/gi一个/mq新的/a流程/gi实例/gi。/w发送/gi的/ude1消息/n：/w业务流程/nz管理系统/gi给/p我们/rr返回/v的/ude1消息/n：/w返回/v的/ude1消息/n中/f给/p我们/rr指出/v了/ule该/rz订单/gi所/usuo关联/vn的/ude1流程/gi实例/giid/nz，/w当前/t正在/d执行/v的/ude1任务/gi。/w流程/gi系统/gi创建/gi流程/gi实例/gi后/f接下来/vl继续/v往/p下/f执行/v，/w它/rr发送/gi一个/mq消息/n到/v框框/gi的/ude1后台/gierp/gi系统/gi，/w触发/gi后台/gierp/gi系统对/l订单/gi的/ude1处理/vn，/w同时/c告诉/v其/rz访问/gi当前/t流程/gi实例/gi的/ude1uri/nz。/w现在/t我们/rr假设/gi流程/gi执行/v到/v物流公司/nis的/ude1配送/vn任务/gi，/w我们/rr在/p框框/gi网站/gi查看/gi订单/gi的/ude1即时/d状态/gi系统/gi会/v有/vyou哪些/ry动作/gi。/w第一步/nz我们/rr同样/d是/vshiget/gi：/whttp/gi：/w//nz//nzapi/gi./nzkuangkuang/nz./nzcom/nz//nzorder/nz//nz1000/nz，/w返回/v的/ude1数据/gi：/w返回/v的/ude1消息/n中/f多/a了/ule一个/mq访问/gi流程/gi实例/gi的/ude1uri/nz，/w那么/c我们/rr的/ude1客户端程序/n继续/vget/gi：/w，/w返回/v的/ude1数据/gi：/w我们/rr看到/v当前/t正在/d执行/v的/ude1任务/gi是/vshi物流配送/nz，/w这/rzv是/vshi一个子/nz流程/gi任务/gi，/w想/v具体/a了解/v这个/rz子/ng流程/gi执行/v的/ude1情况/n，/w我们/rr的/ude1客户端程序/n继续/vget/gi：/w，/w啊哈/nz，/w框框/gi将/d配送/vn任务/gi外包/nz给/p了/ule宅急送/nz啊/y。/w好/a了/ule，/w有/vyou了/ule这/rzv三段/nz数据/gi，/w我们/rr就/d可以/v清楚/a的/ude1看到/v订单/gi所/usuo经过/p的/ude1各个环节/l以及/cc当前/t的/ude1状态/gi。/w从/p中/f可以/v看到/v两点/nz：/w一是/nz我们/rr通过/pkuangkuang/nz-/nzbpm/gi./nzcom/nz所/usuo提供/v的/ude1流程/gi服务/gi将/d各个系统/l进行/vn了/ule数据/gi和/cc流程/gi的/ude1集成/vn；/w二是/nz各个/rz被/pbei集成/vn的/ude1系统/gi需要/v实现/girest/gi的/ude1api/gi以/p供/vi我们/rr的/ude1客户端程序/n进行/vn数据/gi的/ude1mashup/nz。/w故事/gi完了/vi吗/y？/w还/d没有/v，/w京东/ntc618/nz活动/gi简报/n：/w收获/gi订单/gi40/nz多/a万/nz份/q，/w订购/v金额/n超/v2/nz亿/nz，/w已经/d发货/vi一个/mq多亿/nz，/w尚有/v十几/mq万/nz份/q订单/gi积压/v，/w大约/d三日/nz左右/f可以/v处理完毕/i。/w不足之处/i：/w流量/gi多/a次/qv超过/v4/nz个/qg/nz，/w服务器/gi运行/gi缓慢/a；/w图书/n备货/nz量/n严重不足/i。/w与/cc服务器/gi相比/vi，/w我/rr更加/d关心/v如何/ryv及时/ad将/d这/rzv几/d十/nz万/nz份/q订单/gi处理完毕/i以及/cc库存/gi如何/ryv应对/v促销/vn而/cc产生/v的/ude1水平/n震荡/vn（/w图书/n备货/nz量/n严重不足/i，/w无法/v预测/gi哪些/ry书籍/gi畅销/v哪些/ry滞销/vi，/w由此/d带来/v的/ude1订单/gi迟迟/d无货/v）/w，/w这/rzv显然/ad不是/c一家/n物流公司/nis可以/v完成/v的/ude1，/w需要/v多/a家/q物流公司/nis一起/s消化/v这些/rz订单/gi，/w那么/c，/w问题/gi来/vf了/ule，/w当/p我们/rrmashup/nz数据/gi时/qt，/w如何/ryv对/p这些/rz物流公司/nis返回/v的/ude1不同/a的/ude1数据式/nz进行/vn处理/vn？/w为/p每家/r公司/nis实现/gi一个/mq适配器/n？/wno/nz！/w作为/p行业/gi的/ude1老大/n，/w作为/p一家/n一流/b的/ude1企业/gi，/w我们/rr得/ude3制定/gi标准/gi。/w这时/rzt就/d需要/v标准化/vnmedia type/nz了/ule，/w建立/gi行业标准/nz，/w企业级/nzrest/gi等于/v自定义/nz、/w创造/v和/cc标准化/vnmedia type/nz。/w第二个/nz问题/gi，/wkuangkuang/nz-/nzbpm/gi./nzcom/nz算是/v云服务/gi否/vg？/w是/vshi的/ude1，/w目前/t算作/v框框/gi私有云/nz，/w对/p自己/rr和/cc业务/gi伙伴/n提供/v流程/gi服务/gi。/w最后/f一个/mq需求/gi，/w框框/gi要/v开放平台/nz最后/f一个/mq需求/gi有些/rz跑题/vi，/w但是/c那/rzv帮/v人/n现在/t都/d在/p搞/v什么/ry开放平台/nz，/w框框/gi自然/n也/d是/vshi要/v跟风/v一下/m的/ude1。/w那么/c，/w开放平台/nz都/d开放/gi了/ule个/q啥/ry？/w图/gi /x13/nz /x框框/gi的/ude1开放平台/nz第一/mq是/vshi用户/gi的/ude1开放/gi，/w这个/rz通过/p网站/gi实现/gi，/w我们/rr增加/v上/f百货/n、/w品牌/gi频道/n，/w吸引/v商家/gi入驻/v，/w这些/rz入驻/v的/ude1商家/gi能够/v分享/gi我们/rr的/ude1网站/gi用户/gi，/w同时/c，/w品牌/gi的/ude1用户/gi也/d能够/v被/pbei吸引/v到/v我们/rr的/ude1网站/gi上/f。/w同时/c，/w开心/a、/w人/n人/n、/w新浪/ntc微博/n、/w腾讯/ntc微博/n的/ude1账号/gi能够/v直接/ad登录/gi我们/rr网站/gi，/w同时/c，/w我们/rr网站/gi的/ude1产品/gi、/w评价/gi也/d能/v分享/gi到/v这些/rzsns/nz网站/gi里/f。/w第二/mq是/vshi服务/gi的/ude1开放/gi，/w这个/rz通过/p流程/gi实现/gi，/w我们/rr能/v给/p商家/gi提供/v仓储/vn、/w物流/n、/w投诉/vn等/udeng一系列/b的/ude1服务/gi。/w不/d使用/gi我们/rr的/ude1网站/gi，/w自己/rr有/vyou网站/gi？/w没关系/vl，/w只要/c数据/gi式/k满足/v我们/rr定义/gi的/ude1media type/nz就/d行/ng。/w图/gi /x14/nz /x流程/gi服务/gi的/ude1开放/gi这/rzv算/v完了/vi吗/y？/w不算/v！/w小/a马哥/nz说/v，/w要/v开放/gi就/d全面/ad开放/gi。/w我们/rr将/d仓储/vn环节/gi和/cc物流配送/nz环节/gi也/d开放/gi出来/vf，/w允许/v任何/rz服务提供商/nz使用/gi我们/rr的/ude1流程/gi服务/gi。/w图/gi /x15/nz /x物流/n环节/gi的/ude1开放/gi只要/c系统/gi提供数据/n式/k满足/v我们/rr定义/gi的/ude1media type/nz就/d可以/v加入/v到/v我们/rr的/ude1流程/gi中/f来/vf，/w分享/gi我们/rr的/ude1客户/n，/w为/p上帝/n提供/v服务/gi。/w我们/rr则/d从/p中/f提成/vi。/w所以/c，/w真正/d的/ude1开放/gi是/vshi整个/b流程/gi服务/gi各个环节/l的/ude1开放/gi，/w不仅仅/d对/p流程/gi消费者/n，/w也/d对/p流程/gi服务提供商/nz，/w我们/rr在/p其中/rz起/vf一个/mq协调/gi的/ude1作用/gi。/w由此/d，/w我们/rr将/dkuangkuang/nz-/nzbpm/gi./nzcom/nz服务/gi开放/gi出来/vf变成/v一个/mq公有云/gi服务/gi，/w后来/t，/w我们/rr惊讶/a的/ude1发现/v，/wkuangkuang/nz-/nzbpm/gi./nzcom/nz比/pkuangkuang/nz./nzcom/nz更/d赚钱/v，/w因为/c它/rr建立/gi起/vf了/ule一个/mq生态链/n。/w小结/n在/p上面/f的/ude1故事/gi里/f，/w我们/rr一步/nz步/qv看到/v了/ule框框/gi的/ude1系统架构/gi演进/vn，/w不难看出/i，/w架构/gi演进/vn的/ude1过程/gi实际上/d系统/gi不断/d分解/gi的/ude1过程/gi。/w对/p移动设备/gi的/ude1支持/v，/w使得/vi我们/rr将/d页面/gi渲染/gi逻辑/n从/p服务器端/gi剥离/vi出来/vf交由/v客户端/gi完成/v，/w服务器/gi只/d负责/v提供数据/n。/w通过/prest/gi的/ude1超媒体/gi特性/gi，/w客户端/gi和/cc服务器端/gi程序/gi能够/v各自/rr独立/a演进/vn。/w对/p订单/gi流程/gi的/ude1支持/v，/w使得/vi我们/rr采用/v工作流/gi技术/gi，/w将/d资源/gi模型/gi（/w订单/gi）/w与/cc其/rz生命周期/nz模型/gi分离/vi，/w分别/d交由/v原有/v系统/gi和/cc工作流/gi系统管理/n，/w这样/rzv当/p某/rz部分/n需求/gi发生变化/l（/w例如/v增加/v一个/mq审核/gi不/d通过/p步骤/gi）/w，/w能够/v隔离/vn变化/gi，/w容易/ad修改/gi。/w对/p端/v到/v端/v跨/v系统/gi流程/gi的/ude1支持/v，/w使得/vi我们/rr引入/v一个/mq独立/a的/ude1业务流程/nz管理系统/gi，/w由此/d来/vf协调/gi各个系统/l间/f的/ude1集成/vn工作/gi，/w避免/v系统/gi间/f的/ude1大量/m耦合/vn。/w同时/c，/w我们/rr看到/v定义/gi和/cc标准化/vn一个/mq大家/rr都/d能/v理解/gi的/ude1media type/nz是/vshi如此/rzv的/ude1重要/a。/w对/p开放平台/nz的/ude1支持/v，/w使得/vi我们/rr将/d业务流程/nz管理系统/gi开放/gi出来/vf，/w作为/p公有云/gi服务平台/n，/w同时/c流程/gi中的/v各个环节/l能够/v开放/gi出来/vf，/w作为/p服务/gi//nz应用/gi接入/vn和/cc接/v出/vf的/ude1接口/gi，/w真正/d做到/v松/ng耦合/vn，/w由此/d看到/v开放平台/nz的/ude1实质/gi是/vshi流程/gi服务/gi的/ude1开放/gi。/w在/p同事/n陈金洲/nz的/ude1《/w架构/gi腐化/v之谜/n》/w中/f，/w文章/gi最后/f提到/v解决/v这/rzv一/nz问题/gi的/ude1方法/gi是/vshi：/w创建/gi应用程序/nz的/ude1生态环境/nz，/w而非/c单一/gi的/ude1项目/gi。/w深得我心/i，/w而/cc我们/rr这里/rzs想/v表达/gi的/ude1是/vshi，/w随着/p系统/gi的/ude1演进/vn，/w我们/rr需要/v不断/d进行/vn系统/gi的/ude1分解/gi，/w做到/v服务/gi的/ude1独立/a演化/gi。/w至于/prest/gi，/w它/rr的/ude1作用/gi就/d在于/v充分利用/nhttp/gi协议/gi，/w将/d其/rz作为/p一种/nz应用/gi协议/gi，/w而/cc不仅仅/d是/vshi传输/gi协议/gi，/w这样/rzv在/pweb/gi上/f做/v集成/vn时/qt能够/v最大/gm程度/n上/f的/ude1达成/v一致/a，/w形成/v大家/rr都/d能/v接受/gi的/ude1约定/v，/w减少/v集成/vn的/ude1工作量/n，/w对外/vn接口/gi一致/a，/w内部/f独立/a演化/gi。/w