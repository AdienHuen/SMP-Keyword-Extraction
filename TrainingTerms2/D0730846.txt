#从/p《/w循环/gi的/ude1代价/gi》/w中学/nis到/v的/ude1
最近/t在/p看/v《/w算法/gi竞赛/gi入门/gi经典/gi》/w，/w书/gi中/f提到/v循环/gi的/ude1两/nz大/a常见问题/gi，/w并/cc提出/v一/nz些/q建议/gi。/w第一/mq是/vshi算术/n运算/gi溢出/gi的/ude1问题/gi，/w尤其/d是/vshin/nz很大/d而且/c都/d是/vshi做/v的/ude1乘法/gi的/ude1时候/n。/w最/d常见/a的/ude1现象/n是/vshi输出/gi负/v，/w每步/dprintf/nz也/d能/v观察/gi到/v。/w如果/c换/v数据类型/gi仍/d解决不了/v的话/udh，/w可能/v得/ude3改/v算法/gi了/ule。/w书/gi中的/v例子/gi是/vshi对/p最终/d的/ude1取/v余/ng%/nz运算/gi作/v转化/gi。/w“/w要/v计算/gi只/d包含/v加法/gi//nz减法/n和/cc乘法/gi的/ude1整数/gi表达式/gi除以/vn/nz的/ude1余数/n，/w可以/v在/p每步/d计算/gi之后/f对/pn/nz取余/nz，/w结果/n不变/nz。/w”/w即/v把/pba最后/f一步/nz取模/nz改为/v循环/gi中/f每步/d取模/nz。/w循环/gi容易/ad出现/v第二个/nz问题/gi是/vshi效率/gi低下/a，/wruntime error/nz。/w可以/v巧用/v计时/vi函数/gi进行/vn观察/gi：/wprintf/nz(/nz%/nz./nz2/nzf/nz,/nz(/nzdouble/nz)/nzclock/nz(/nz)/nz//nzclocks/nz_/nzper/nz_/nzsec/nz)/nz;/nz（/w用/p的/ude1时候/n要/v#/nzinclude time/nz./nzh/nz；/wdouble/nz不能/v去掉/v，/w否则/c出错/gi。/w）/w可以/v观察/gi运行时间/gi和/ccn/nz的/ude1关系/gi，/w进而/c修改/gi或/c优化/gi算法/gi（/w不是/c那么/c容易/ad解决/v的/ude1）/w。/w