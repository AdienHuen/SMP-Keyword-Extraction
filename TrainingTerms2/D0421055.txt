#ios /nz结合/v项目/gi谈谈/v设计模式/nz
ios /nz设计模式/nz在/p项目开发/gi中/f常用/a的/ude1设计模式/nz：/wmvc/gi模式/gi、/w代理模式/gi、/w /x单例模式/gi、/w kvo/nz观察者模式/gi和/cc通知/gi模式/gi、/w类/gi工厂模式/gi等/udeng；/w接下来/vl将/d结合/v自己/rr的/ude1项目/gi谈谈/v对/p设计模式/nz的/ude1理解/gi以及/cc应用/gi1./nzmvc /nz模式/gi即/v数据/gi―/w视图/gi―/w视图/gi控制器/n（/wmodel view controller/nz）/w传统/n的/ude1mvc/gi：/wmodel view /nz是/vshi完全/ad独立/a的/ude1，/w通过/pcontroller/gi进行/vn连接/gi。/wcontroller/gi的/ude1作用/gi就是/v桥梁/n作用/gi，/w所有/b的/ude1view/gi可以/v各自/rr封装/gi最终/d在/pcontroller/gi中/f拼接/gi。/wmodel /nz负责/v数据层/nz，/w通过/p代理/gi将/d数据/gi传给/vcontroller /nz，/w然后/ccontroller /nz又/d把/pba数据/gi分发/v给/pview/gi。/w /x但/c这种/r纯粹/b的/ude1mvc/gi在/p项目开发/gi中/f并不/d常用/a，/w因为/c不/d便于/v维护/gi，/w后/f开/v废弃/v掉/v了/ule。/w目前/t我们/rr的/ude1项目开发/gi也/d是/vshi使用/gi接近/vmvc/gi的/ude1模式/gi：/w即/vcontroller/gi可以/v独立/a调用/gi获取/gi数据层/nz的/ude1接口/gi，/w获取数据/l展示/gi，/w然后/c展示/giview/gi。/w一般/ad我们/rr设计/gi时/qt：/w所有/b的/ude1数据/gi获取/gi的/ude1类/gi都会/n封装/gi成单/nz例/nmessagemanger /nz之类/rz的/ude1，/w但凡/d是/vshi要/v获取数据/l，/w接口/gi都/d可以/v放在/vmessagemanger/nz的/ude1类/gi中/f；/w在/pcontroller/gi中/f获取数据/l，/w如果/cview /nz比较简单/l可以/v直接/ad展示/gi，/w如果/cview/gi比较/gi麻烦/an则/d需要/v自己/rr写/v一个/mqview /nz便于/v，/w降低/v代码/gi的/ude1耦合度/gp，/w提高/v代码/gi的/ude1可/v重用性/nz和/cc可读性/n；/w2./nz单例模式/gi上文/n刚刚/d谈到/v单例/gi，/w所谓/v的/ude1单例/gi就是/v该/rz对象/gi只/d初始化/v一次/nz，/w以后/f直接/ad调用/gi，/w之后/f当/p程序/gi结束/v后/f，/w该/rz对象/gi才/d会/v被/pbei释放/gi。/w单例模式/gi的/ude1好处/gi就是/v可以/v创建/gi一个/mq整个/b程序/gi都/d可以/v使用/gi，/w随时/d都/d可以/v接受/gi改变/v的/ude1全局变量/gi；/w缺点/gi是/vshi比较/gi会/v消耗/gi一定/b的/ude1内存/gi。/w在/p项目/gi中/f常见/a的/ude1用户/gi的/ude1信息/gibasicuserinfo /nz启动/gi程序/gi即/v获取/gi用户/gi的/ude1信息/gi，/w整个/b程序/gi都/d要用/v到/v，/w就/d可以/v考虑到/v使用/gi单例/gi。/w3./nz代理模式/gi代理模式/gi就是/v：/w通俗/a来讲/uls就是/v找/v人/n代替/v自己/rr做/v自己/rr想/v做/v的/ude1事/n。/w详情/n参见/v：/w现在/t在/p项目/gi中/f经常/d会/v使用/giblock/nz回调/gi代替/vdelegate /nz方法/gi /x，/wblock/nz更/d简单/a，/wdelegate /nz明白/v易懂/gi；/w4./nzkvo/nz与/cc通知/gi模式/gikvo /nz一般/ad是/vshi对/p某/rz一/nz数据/gi进行/vn观察/gi，/w如果/c数据/gi发生/v改变/v则/d执行/v操作/gi通知/gi则/d是/vshi知道/v数据/gi发生变化/l则/d通知/gi监听/gi的/ude1对象/gi做/v相应/vi的/ude1改变/v；/w5./nz类/gi工厂模式/gi类/gi工厂模式/gi是/vshi使用/gi加/v方法/gi创建/gi一个/mq对象/gi，/w说白了/l就是/v一个/mq创建/gi模板/gi。/w以上/f的/ude1简介/gi都/d是/vshi自己/rr的/ude1愚见/nz。/w如果/c有/vyou问题/gi，/w敬请/v指正/v。/w谢谢/v！/w