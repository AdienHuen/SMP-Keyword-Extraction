#《/w大型网站/gi技术/gi架构/gi》/w总结---架构/nz演化/gi
趁着/p放假/vi，/w终于/d把/pba《/w大型网站/gi技术/gi架构/gi核心/n原理/gi与/cc案例/gi分析/gi》/w这/rzv本书/gi看完/v了/ule。/w这/rzv本书/gi给/p了/ule我/rr对于/p网站架构/gi的/ude1全新/b认识/v，/w整本书/n写/v的/ude1比较/gi浅显易懂/nz，/w让/v入门/gi的/ude1人/n比较/gi容易/ad理解/gi。/w里面/f介绍/gi了/ule很/d多/a技术/gi概念/gi。/w向/p反向代理/gi和/cccdn/gi等等/udeng。/w我/rr写/v两/nz篇文章/n，/w是/vshi看完/v之后/f的/ude1总结/gi。/w这/rzv本书/gi的/ude1第一章/nz就/d写/v了/ule大型网站/gi架构/gi演化/gi，/w写明/v了/ule一个/mq小/a网站/gi是/vshi如何/ryv一步步/nz的/ude1演化/gi发展/gi成/v一个/mq大/a网站/gi。/w大型网站/gi的/ude1特点/n：/w高并发/gi，/w大/a流量/gi；/w高/a可用/v；/w海量数据/gi；/w用户/gi分布/vi广泛/a，/w网络/gi情况/n复杂/a；/w需求/gi变化/gi快/a，/w发布/gi频发/d；/w渐进式/b发展/gi；/w安全/gi环境恶劣/n。/w一/nz./nz开始/v阶段/gi的/ude1网站架构/gi /x这/rzv就是/v最初/d的/ude1小型/b网站/gi，/w可能/v只有/c一台/nz服务器/gi，/w也/d用/p可能/v是/vshi自己/rr的/ude1电脑/gi。/w使用/gilamp/nz（/wlinuxapachemysqlphp/nz）/w开发/gi。/w使用/gi的/ude1都/d是/vshi开源/gi免费/vd的/ude1软件。一个/nz小型/b网站/gi就/d搭建/v成功/a了/ule，/w像/v应用程序/nz，/w数据库/gi和/cc文件/gi都/d放在/v一台/nz服务器/gi上/f。/w如下/vi图/gi：/w二./nz应用服务/n和/cc数据服务/n分离/vi /x随着/p网站/gi发展/gi，/w一台/nz服务器/gi不能/v满足要求/nz。/w越来越/d多/a的/ude1用户/gi使得/vi网站/gi性能/gi编程/gi，/w存储空间/gi不足/an。/w这时/rzt应该/v让/v应用程序/nz和/cc数据/gi分离/vi，/w分别/d存放在/v不同/a的/ude1服务器/gi上/f。/w应用程序/nz服务器/gi需要/v更/d强大/a的/ude1cpu/gi，/w数据库服务器/gi需要/v快速/d磁盘/gi检索/gi和/cc数据/gi缓存/gi，/w文件/gi服务器/gi需要/v更大/d的/ude1硬盘/gi。/w如下/vi图/gi：/w三./nz使用/gi缓存/gi改善/v性能/gi /x随着/p用户/gi增多/v，/w数据库/gi的/ude1压力/n越来越/d大/a，/w每一次/d对/p数据库/gi的/ude1操作/gi都/d可能/v影响/gi到/v整个/b网站/gi的/ude1性能/gi。/w网站/gi的/ude1特点/n也/d符合/v二八/nz定律/n，/w80%/nz的/ude1业务/gi访问/gi集中/v在/p20%/nz的/ude1数据/gi上/f，/w因此/c我们/rr可以/v对/p数据/gi进行/vn处理/vn，/w将/d经常/d用/p到/v的/ude1数据/gi缓/a存在/v内存/gi中/f，/w这样/rzv减少/v数据库/gi的/ude1访问/gi压力/n。/w使用/gi缓存/gi可以/v用/p两/nz种/q：/w缓存/gi在/p本地/gi或者/c专门/d的/ude1服务器/gi上/f。/w分布式/gi缓存/gi采用/v集群/gi的/ude1方式/n，/w部署/gi大/a内存/gi的/ude1服务器/gi作为/p专门/d的/ude1缓存/gi服务器/gi，/w在/p理论上/nz做到/v内存容量/nz不/d受限制/nz。/w如下/vi图/gi：/w四./nz使用/gi应用服务器/gi集群/gi /x在/p网站/gi高峰期/n，/w应用服务器/gi成为/v整个/b网站/gi的/ude1瓶颈/gi，/w使用/gi集群/gi是/vshi网站/gi处理/vn高并发/gi，/w海量数据/gi的/ude1常用/a手段/n。/w当/p一台/nz服务器/gi的/ude1处理/vn能力/gi不足/an时/qt，/w这时/rzt应该/v增加/v一/nz台/q服务器/gi分担/gi原有/v服务器/gi的/ude1访问/gi及/cc存储/gi压力/n。/w通过/p不断/d的/ude1增加/v服务器/gi改善/v系统/gi性能/gi，/w实现/gi系统/gi的/ude1可伸缩性/l。/w通过/p负载均衡/gi将/d用户/gi的/ude1请求/gi分发/v到/v服务器/gi集群/gi的/ude1一台/nz服务器/gi上/f。/w如下/vi图/gi：/w五./nz数据库/gi读写/gi分离/vi /x使用/gi缓存/gi后/f，/w绝大/nz多数/a的/ude1数据/gi读/v访问/gi操作/gi都/d可以/v不/d通过/p数据库/gi来/vf完成/v。/w但是/c，/w小/a部分/n读/v操作/gi和/cc全部/m的/ude1写/v操作/gi任/v需要/v访问/gi数据库/gi。/w在/p网站/gi规模/gi达到/v一定/b程度/n后/f，/w数据库/gi因/p负载/gi压力/n过/uguo高/a而/cc成为/v瓶颈/gi。/w目前/t大部分/n数据库/gi都/d提供/v主从/gi热/a备份/gi功能/gi，/w通过/p配置/gi两/nz台/q数据库/gi主从关系/l，/w将/d一台/nz数据库/gi的/ude1数据/gi更/d系/v同步/gi到/v另一台/nz服务器/gi上/f。/w这/rzv可以/v实现/gi数据库/gi的/ude1读写/gi分离/vi，/w如下/vi：/w六./nz使用/gi反向代理/gi和/cccdn/gi加速/gi网站/gi响应/v /x为了/p提供/v更好/d的/ude1用户/gi体验/v，/w网站/gi需要/v加速/gi网站/gi访问速度/n。/w主要/b有/vyou使用/gicdn/gi和/cc反向代理/gi。/w它们/rr的/ude1基本原理/nz都/d是/vshi缓存/gi，/w区别/gi在于/vcdn/gi部署/gi在/p网络/gi提供商/n的/ude1机房/gi，/w使/v用户/gi在/p访问/gi网站/gi时/qt，/w可以/v从/p距/p自己/rr最近/t的/ude1网络/gi提供商/n机房/gi获取数据/l；/w而/cc方向/gi代理/gi则/d部署/gi在/p网站/gi的/ude1中心/gi机房/gi，/w当/p用户/gi请求/gi到达/v中心/gi机房/gi后/f，/w首先/d访问/gi的/ude1是/vshi反向/gi代理服务器/gi，/w如果/c反向/gi代理服务器/gi中/f缓存/gi着/uzhe用户/gi请求/gi的/ude1资源/gi，/w就/d直接/ad返回/v给/p用户/gi。/w如/v图/gi：/w七/nz./nz使用/gi分布式文件系统/nz和/cc分布式数据库/gi /x任何/rz强大/a的/ude1单一/gi服务器/gi都/d满足/v不了/v大型网站/gi持续增长/v的/ude1业务/gi需求/gi。/w数据库/gi经过/p读写/gi分离/vi后/f，/w仍/d不能/v满足/v需求/gi。/w这时/rzt要/v使用/gi分布式数据库/gi，/w文件系统/gi也/d是/vshi一样/uyy。/w分布式数据库/gi是/vshi网站/gi数据库/gi拆分/gi的/ude1最后/f手段/n，/w包括/v业务/gi分库/gi和/cc单表/nz拆分/gi。/w如下/vi图/gi：/w八./nz使用/ginosql/gi和/cc搜索引擎/gi /x随着/p业务/gi的/ude1复杂/a，/w对/p数据存储/gi和/cc检索/gi的/ude1需求/gi也/d越来越/d复杂/a，/w网站/gi需要/v采用/v一/nz些/q非关系型数据库/gi如/vnosql/gi和/cc非/b数据库/gi查询/gi技术/gi如/v搜索引擎/gi。/w如/v图/gi：/w九/nz./nz业务/gi拆分/gi /x大型网站/gi为了/p应对/v日益/d复杂/a的/ude1业务/gi场景/gi，/w通过/p分而治之/nz的/ude1手段/n将/d网站/gi的/ude1业务/gi拆分/gi，/w分成/vi不同/a的/ude1产品线/nz，/w归/v不同/a的/ude1团队/gi负责/v。/w如/v图/gi：/w十./nz分布式服务/n /x随着/p业务/gi拆分/gi越来越/d小/a，/w存储系统/gi越来越/d大/a，/w整体/n复杂/a度程/nz指数级/nz增加/v，/w部署/gi维护/gi越来越/d困难/an。/w每/rz一个/mq应用系统/gi可能会/nz执行/v相同/a的/ude1操作/gi，/w比如/v用户/gi管理/gi等/udeng。/w将/d这些/rz公用/gi的/ude1业务/gi提取/v出来/vf，/w独立/a部署/gi，/w由/p这些/rz可/v复用/gi的/ude1业务/gi连接/gi数据库/gi，/w提供/v公用/gi业务/gi服务/gi，/w如下/vi图/gi：/w经过/p上面/f十条/nz的/ude1演变/gi，/w基本/a大/a多数/a的/ude1技术/gi问题/gi得以/v解决/v。/w这/rzv十点/nz改进/gi让/v我/rr理解/gi了/ule网站架构/gi的/ude1演变/gi过程/gi，/w增强/v了/ule对于/p网站架构/gi的/ude1直观/a认识/v，/w虽然/c我/rr没有/v进去/vf过/uguo机房/gi内部/f。/w网站/gi技术/gi的/ude1发展/gi是/vshi要/v随着/p业务/gi发展/gi而/cc进步/vn的/ude1。/w上面/f有/vyou很/d多/a概念性/nz的/ude1内容/gi，/w如/v分层/v，/w缓存/gi，/wcdn/gi，/w分布式/gi等等/udeng。/w后面/f一篇/nz文章/gi再来/d具体/a说说/v这些/rz技术/gi。/w