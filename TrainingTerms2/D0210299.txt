#前后端/gi分离/vi开发/gi部署/gi模式/gi
这周/r着手/v开始/v重新/d构建/gi官网/n，/wota/nz1.3/nzv/nz继续/v推进/vi，/w目前/t分为/v了/ule企业/gi版/n，/w与/cc国外/s版/n，/w老/a官网/n那/rzv套/q架构/gi的/ude1代码/gi经过/p几/d千人手/nz的/ude1改动/vn，/w于是/cc索性/d干掉/v，/w采用/v新的/a架构模式/gi(/nz前后端/gi分离/vi开发/gi部署/gi模式/gi)/nz，/w找到/v下面/f这/rzv篇文章/n我/rr觉得/v说/v的/ude1挺好/nz，/w在/p开始/v讨论/gi这个/rz话题/n之前/f我们/rr先/d来/vf认识/v一下/m传统/n的/ude1开发模式/gi。/w一/nz、/w传统开发/gi模式/gi相信/v很/d多/a做/v过/uguoweb开发/gi童鞋/nz应该/v都会/n经历/gi这样/rzv一种/nz开发模式/gi，/w利用/v后端/f语言/gi提供/v的/ude1模版/gi引擎/n编写/gihtml/gi／/wxml/nz页面/gi，/w比如/v：/wphp /nz开发/gi有/vyou smarty/nz模板/gi引擎/njava web/nz工程/n有/vyoujsp/gi页面/gipython /nz各个/rzweb/gi框架/gi都/d有/vyou各自/rr的/ude1模板/gi引擎/nnodejs /nz的/ude1express/nz你/rr懂得/v都/d有/vyou一个/mq共同/d的/ude1特点/n，/w服务器端/gi后台/gi语言/gi生成/v解析/gi后/f的/ude1html/gi//nzxml/nz式/k返回/v给/p客户端/gi，/w例如/v浏览器/gi端/v访问/gi直接/ad返回/v解析/gi好/a的/ude1html/gi，/w浏览器/gi直接/ad就/d解释/gi执行/v。/w二/nz、/wajax/gi过渡/vnajax/gi是/vshi把/pba前后端/gi分离/vi部署/gi的/ude1推进者/n，/w当时/t网页/gi局部/n更新/gi就是/v未来/t前后端/gi分离/vi的/ude1开端/n。/w那/rzv什么/ry是/vshi前后端/gi分离/vi开发/gi呢/y？/w简单/a来说/uls就是/v前端开发/nz不/d需要/v部署/gi后台/gi语言/gi那/rzv堆/gi垃圾/n环境/n，/w后端/f开发/gi也/d不/d需要/v前端/gi写/v好/a的/ude1任何/rz程序/gi，/w后台/gi只管/d暴露/v各种/rzapi/gi接口/gi提供/v前端/gi进行/vn数据/gi的/ude1增删/v改查/nz，/w不/d负责/v生成/vhtml/gi页面/gi前端/gi请求/gi到/v数据/gi后/f再/d动态/gi声称/vdom/gi节点/gi。/w三/nz、/w前端/gi构建/gi相对于/nz后台/gi来说/uls，/w前端/gi构建/gi是/vshi重点/n，/w因为/c前后端/gi分离/vi开发/gi后/f侧重点/n在于/v前端/gi，/w后端/f就是/v一个/mq数据/gi提供/v，/w权限/gi控制/vnapi/gi。/w后端/f项目/gi通常/d都/d带/v自己/rr的/ude1server/gi，/w除了/pphp/gi以外/f，/w所以/c后端/f做/vphp/gi开发/gi的/ude1还/d需要/v一个/mqwebserver/gi，/wapache/gi就是/v经典/gi配合/v，/w最近/t被/pbei抛弃/v换/v做/vnginx/gi了/ule，/w所以/c后台/gi环境/n本来/d就是/v伪/ag生产/gi环境/n。/w前端/gi项目/gi还是/c要/v搭建/v一个/mqserver/gi，/w然后/c把/pba项目/gi丢/v里边/f才能/n跑起来/nz调试/gi开发/gi，/w最/d笨/a的/ude1直接/ad整/v一个/mqapache/gi或者/cnginx/gi也/d可以/v，/w但/c这样/rzv开发/gi还是/c很/d痛苦/an。/w可以/v利用/vnode/nz工具集/n即可/v，/wnode/nz工具集/n非常/d多/a，/w比如/v我/rr非常/d喜欢/gi用/p的/ude1browsersync/nz。/w四/nz、/w解决/v请求/gi问题/gi前后端/gi分离/vi后/f，/w我们/rr只/d需要/vserver/gi端/v告诉/v我们/rrapi url/nz即可/v，/w那么/c这/rzv会/v产生/v一个/mq问题/gi：/wajax/gi跨域/nz。/w这里/rzs就/d不能/v使用/gi一般/ad的/ude1跨域/nz解决方法/gi去/vf解决/v，/w比如/vjsonp/nz,/nziframe/nz信使/n等等/udeng，/w因为/c我们/rr还有/vpost/nz请求/gi。/w于是/cchttp proxy/nz类/gi工具/gi就/d有/vyou用/p了/ule，/w比如/v我/rr就/d会/v在/pbrowsersync/nz加入/v中间件/n判断/gi每一个/nz请求/gi，/w如果/c是/vshi//nzapi/gi前缀/n就/d会/v代理/gi到/vapi server/nz端/v，/wapi server/nz端/v收到/v数据/gi后/f再/d返回/v给/pbrowsersync/nz，/wbrowsersync/nz再/d返回/v给/p浏览器/gi端/v。/w这样/rzv就/d解决/v跨域/nz请求/gi的/ude1问题/gi生产/gi环境/n有/vyou两/nz种/q部署/gi，/w一种/nz是/vshi放到/v后台/gi项目/gi里/f，/w这/rzv就/d没啥/nz说/v的/ude1，/w另外/c一种/nz就是/v前后端/gi分开/vi部署/gi，/w那/rzv就/d在/p前端/giwebserver/gi处理/vn端/v写点/n转发/gi规则/gi就/d好/a，/w如/vnginx/gi，/wapache/gi都/d支持/v。/w五/nz、/w静态/gi资源/gi路径/gi问题/gi如果/c你/rr的/ude1项目/gi有/vyou上传/v资源/gi功能/gi，/w那/rzv自然/n就/d会/v产生/v用户/gi资源/gi，/w那/rzv前后端/gi分离/vi后/f，/w如何/ryv来/vf处理/vn这个/rz问题/gi呢/y？/w得/ude3先/d看/v模式/gi。/w资源/gi与/cc后台/gi项目/gi放/v一起/s，/w后台/gi处理/vn完/vi后/f需要/v返回/v前台/n一个/mq相对路径/nz，/w如果/c资源/gi时/qt一台/nz单独/d的/ude1服务器/gi，/w那/rzv就/d需要/v返回/v资源/gi的/ude1绝对/durl/gi即可/v。/w六/nz、/w会话/vweb/gi项目/gi最/d头疼/a的/ude1就是/v无状态/nz导致/gi会话/v问题/gi，/w传统/n的/ude1web/gi项目/gi都/d使用/gisession/gi//nzcookie/gi，/w但/c在/p前后端/gi分离/vi，/w集群/gi部署/gi模式/gi下/f这/rzvsession/gi明显/a缺陷/gi太多/ad。/wtoken/gi方式/n已经/d是/vshi当前/tweb/gi端/v解决/v会话/v的/ude1主流/gi，/w并且/c有/vyou很/d多/a开源/gi好/a用/p的/ude1token/gi生成/v管理程序/gi，/w基本上/d拿来/vf就/d能用/v。/w最后/f前后端/gi分离/vi的/ude1弱点/n，/w无非/d有/vyou两/nz点/gi1/nz、/w前端/gi负载/gi增多/v，/w如/v请求/gi到/v列表/vi后/f，/w前端/gi需要/v自己/rr遍历/gi数据/gi集/q声称/vdom/gi节点/gi /x（/w目前/t绝大/nz多数/a用户/gi的/ude1电脑配置/nz都/d不/d差/a，/w而且/c浏览器/gi内核/gi已经/d不在/v是/vshi满身/n缺陷/gi的/ude1ie/nz浏览器/gi了/ule）/w2/nz、/w不利于/v蜘蛛/gi（/w其实/d现在/t的/ude1部分/n蜘蛛/gi已经/d很/d厉害/a了/ule，/w能够/v支持/vh/nz5/nz c/nz3/nz效果/gi）/w强点/n，/w1/nz、/wweb/gi端/v就/d像/v手机/gi端的/zapp/gi一样/uyy，/w不/d需要/vcookie/gi//nzsession/gi，/w与/ccserver/gi完全/ad分离/vi，/w易于/vd维护/gi、/w扩展/gi。/w一个/mqserver api/nz可以/v随意/ad服务/gi多/a个/qweb app/nz2/nz、/wangularjs/nz用/p过/uguo了/ule以后/f，/w你/rr应该/v会/v感觉/gi未来/t的/ude1web开发/gi模式/gi，/wangularjs/nz在/p几乎/d是/vshi前后端/gi分离/vi的/ude1领航者/nz3/nz、/w前端/gi静态/gi资源/gi与/cc后台/giapi/gi分流/gi，/w互不/d影响/gi，/w甚至/d不会/v存在/vio/gi问题/gi4/nz、/w开发/gi上/f与/cc后台/gi几乎/d同步/gi，/w互相/d不/d影响/gi，/w特别/d是/vshi基于/prestful api/nz风/n，/w更是/d减少/v了/ule沟通/gi的/ude1成本/n5/nz、/w方便/a各自/rrdebug/gi，/wjava/gi开发人员/n不/d需要/v跑到/v前端开发/nz人员/gi机器/gi上/f看/vtomcat/nz控制台/gi的/ude1报错/nz，/w前端开发/nz人员/gi也/d不/d需要/v跑到/v后端/f开发人员/n的/ude1机器/gi上/f看/v浏览器/gi报错/nz调试/gi开发阶段/n目前/t需要/v考虑到/v的/ude1问题/gi:/w1/nz前端/gi负载/gi的/ude1问题/gi2/nz前端/gi跨域/nz调用/gi问题/gi3/nz安全性/gi考虑/v(/nz可能/v遭遇/v到/v相关/vn的/ude1刷/v接口/gi，/wxss/nz攻击/gi等/udeng)/nz4/nz用/ptoken/gi传递/v表示/v状态/gi，/wtoken/gi的/ude1安全性/gi问题/gi