#设计/gi一个/mq线程安全/gi的/ude1单例/gi(/nzSingleton/gi)/nz模式/gi
   /x在/p设计/gi单例模式/gi的/ude1时候/n，/w虽然/c很容易/nz设计/gi出/vf符合/v单例模式/gi原则/gi的/ude1类/gi类型/gi，/w但是/c考虑到/v垃圾/n回收/vn机制/gi以及/cc线程/gi安全性/gi，/w需要/v我们/rr思考/gi的/ude1更多/ad。/w有些/rz设计/gi虽然/c可以/v勉强/ad满足/v项目/gi要求/n，/w但是/c在/p进行/vn多线程/gi设计/gi的/ude1时候/n。/w不/d考虑/v线程/gi安全性/gi，/w必然/d会/v给/p我们/rr的/ude1程序设计/gi带来/v隐患/gi。/w此处/s，/w我们/rr不/d介绍/gi什么/ry是/vshi单例模式/gi，/w也/d不/d介绍/gi如何/ryv设计/gi简单/a的/ude1设计模式/nz，/w因为/c你/rr完全/ad可以/v在/p书上/s或者/c在/p博客/gi中/f找到/v。/w此处/s我们/rr的/ude1目的/gi就是/v设计/gi一个/mq使用/gi的/ude1单例模式/gi类/gi。/w单例模式/gi需要/v注意/v与/cc思考/gi的/ude1问题/gi:/w(/nz1/nz)/nz如何/ryv仅/d能/v实例化/gi一个/mq对象/gi？/w(/nz2/nz)/nz怎么样/ryv设计/gi垃圾/n回收/vn机制/gi？/w(/nz3/nz)/nz如何/ryv确保/v线程/gi安全性/gi？/w   /x在/p思考/gi了/ule上述/b的/ude1几个/nz问题/gi后/f，/w首先/d设计/gi一个/mq线程安全/gi的/ude1类/gi，/w注意/v：/w由于/pcresguard/nz类/gi会/v被/pbei多/a个/q线/n程访问/nz，/w所以/c这个/rz类/gi除了/p构造函数/gi与/cc析构函数/gi意外/a，/w其他/rzv成员/nnt都/d是/vshi线程安全/gi的/ude1。/w   /x接下来/vl我们/rr需要/v设计/gi一个/mq符合/v上面三/nz个/q条件/n的/ude1类/gi。/w为了/p实现/gi自动/d回收/vn机制/gi，/w我们/rr使用/gi了/ule智能指针/giauto/nz_/nzptr/nz，/w尽管/c很/d多/a人/n不/d喜欢/gi它/rr，/w原因/n是/vshi使用不当/l，/w会/v产生/v不/d少/a陷阱/gi，/w所以/c你/rr完全/ad可以/v用/p其他/rzv智能指针/gi替代/v它/rr。/w为了/p方便/a未来/t的/ude1使用/gi，/w还/d使用/gi了/ule模版/gi，/w如果/c你/rr不/d喜欢/gi，/w可以/v花/n两/nz分钟/qt的/ude1时间/gi轻松/a的/ude1干掉/v它/rr。/w单例/gi我们/rr虽然/c看似/v简单/a，/w但是/c有/vyou太多/ad问题/gi非常/d值得/v我们/rr思考/gi与/cc深究/v，/w因为/c一定/b程度/n上/f，/w它/rr深入/ad到/v了/ulec++/gi语言/gi机制/gi，/w更/d可以/v加深/v你/rr对此/d语言/gi设计/gi的/ude1理解/gi程度/n。/w