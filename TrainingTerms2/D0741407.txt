#String /nz为什么/ryv是/vshifinal/gi
string/gi基本/a约定/v中/f最重要/nz的/ude1一条/nz是/vshiimmutable/nz（/w不可变/nz的/ude1）/w。/w不变/nz对象/gi的/ude1一个/mq优点/gi是/vshi /x单个/b实例/gi可以/v被/pbei多/a人/n共享/gi /x且/c不用/d花/n时间/gi来/vf处理/vn同步/gi和/cc锁/v的/ude1问题/gi。/w1./nz才/d有可能/nz实现/gi常量/gi池/ng，/w节省/vheap/nz内存/gi（/w因为/c用/p的/ude1多/a /x才/d有/vyou池/ng）/w2./nz如果/c字符串/gi是/vshi可变/vn的/ude1，/w那么/c会/v引起/v很/d严重/a的/ude1安全问题/gi。/w譬如/v，/w数据库/gi的/ude1用户名/n、/w密码/gi都/d是/vshi以/p字符串/gi的/ude1形式/gi传入/gi来/vf获得/v数据库/gi的/ude1连接/gi3./nz因为/c字符串/gi是/vshi不/d可变/vn的/ude1，/w所以/c是/vshi多线程/gi安全/gi的/ude14./nz类/gi加载器/nz要用/v到/v字符串/gi，/w不可/v变性/vn提供/v了/ule安全性/gi，/w以便/d正确/a的/ude1类/gi被/pbei加载/gi5./nz因为/c字符串/gi是/vshi不/d可变/vn的/ude1，/w所以/c在/p它/rr创建/gi的/ude1时候/nhashcode/gi就/d被/pbei缓存/gi了/ule，/w不/d需要/v重新/d计算/gi。/w这/rzv就/d使得/vi字符串/gi很/d适合/v作为/pmap/nz中的/v键/n，/w字符串/gi的/ude1处理速度/n要/v快/a过/uguo其它/rz的/ude1键/n对象/gi。/w这/rzv就是/vhashmap/nz中的/v键/n往往/d都/d使用/gi字符串/gi。/w