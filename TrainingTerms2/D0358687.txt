#设计/gi模式-单例/nz模式/gi
什么/ry是/vshi单例模式/gi？/w   /x单例模式/gi确保/v一个/mq类/gi只有/c一个/mq实例/gi，/w自行/d提供/v这个/rz实例/gi并/cc向/p整个/b系统/gi提供/v这个/rz实例/gi。/w   /x特点/n：/w一个/mq类/gi只能/v有/vyou一个/mq实例/gi；/w自己/rr创建/gi这个/rz实例/gi；/w整个/b系统/gi都/d要/v使用/gi这个/rz实例/gi。/w如何/ryv实现/gi单例模式/gi？/w   /x单例设计模式/gi有/vyou两/nz种/q表现形式/n：/w“饿汉/nz式/k”/w“/w懒汉式/gi”/w   /x我们/rr先/d来/vf看看/v传说中/nz的/ude1饿汉式/gi：/w   /x饿汉式/gi的/ude1特点/n：/w创建对象/n的/ude1同时/c就/d直接/ad实例化/gi对象/gi。/w  /x那/rzv我们/rr在/p看看/v“/w懒汉式/gi”/w：/w   /x懒汉式/gi的/ude1特点/n：/w方法/gi被/pbei加载/gi时/qt才/d进行/vn初始化/v操作/gi，/w“/w懒汉式/gi”/w又/d被/pbei称为/v延迟/v加载/gi设计模式/nz。/w   /x仔细观察/n，/w懒汉式/gi的/ude1代码/gi是/vshi有/vyou弊端/n的/ude1，/w我们/rr来/vf看看/v。/w   /x当/p多/a线/n程访问/nz懒汉式/gi时/qt，/w因为/c懒汉式/gi的/ude1方法/gi内/f对/p共性/n数据/gi进行/vn多/a条/q语句/gi的/ude1操作/gi。/w所以/c容易/ad出现/v线程安全/gi问题/gi。/w   /x上面/f加/v了/ule几/d处/n判断/gi，/w我们/rr来/vf分析/gi下/f：/ws/nz=/nz=/nznull /nz是/vshi为了/p减少/v判断/gi，/w增加/v效率/gisynchronized /nz(/nzsingle/nz./nzclass/nz)/nz为了/p保证/v线程安全/giif /nz(/nzs /nz=/nz=/nz null/nz)/nz是/vshi为了/p判断/gi对象/gi是否/v为/p空/ng   /x为了/p解决/v，/w加入/v同步/gi机制/gi，/w解决/v安全问题/gi。/w但是/c却/d带来/v了/ule效率/gi降低/v。/w所以/c我们/rr不/d建议/gi使用/gi“懒汉/nz式/k”/w，/w饿汉式/gi简单/a高效/b，/w安全/gi。/w单例模式/gi的/ude1用/p在/p哪儿/rys？/w网站/gi的/ude1计数器/gi，/w一般/ad也/d是/vshi采用/v单例模式/gi实现/gi，/w否则/c难以/d同步/gi。/w应用程序/nz的/ude1日志/gi应用/gi，/w一般/ad都/d何用/d单例模式/gi实现/gi，/w这/rzv一般/ad是/vshi由于/p共享/gi的/ude1日志/gi文件/gi一直/d处于/v打开/gi状态/gi，/w因为/c只能/v有/vyou一个/mq实例/gi去/vf操作/gi，/w否则/c内容/gi不好/a追加/v。/wweb应用/gi的/ude1配置/gi对象/gi的/ude1读取/gi，/w一般/ad也/d应用/gi单例模式/gi，/w这个/rz是/vshi由于/p配置文件/gi是/vshi共享/gi的/ude1资源/gi。/w数据库连接池/gi的/ude1设计/gi一般/ad也/d是/vshi采用/v单例模式/gi，/w因为/c数据库/gi连接/gi是/vshi一种/nz数据库/gi资源/gi。/w数据库/gi软件系统/gi中/f使用/gi数据库连接池/gi，/w主要/b是/vshi节省/v打开/gi或者/c关闭/gi数据库/gi连接/gi所/usuo引起/v的/ude1效率/gi损耗/vn，/w这种/r效率/gi上/f的/ude1损耗/vn还是/c非常/d昂贵/a的/ude1，/w因为/c何用/d单例模式/gi来/vf维护/gi，/w就/d可以/v大大降低/n这种/r损耗/vn。/w多线程/gi的/ude1线程池/gi的/ude1设计/gi一般/ad也/d是/vshi采用/v单例模式/gi，/w这/rzv是/vshi由于/p线程池/gi要/v方便/a对/p池/ng中的/v线程/gi进行/vn控制/vn。/w操作系统/gi的/ude1文件系统/gi，/w也/d是/vshi大/a的/ude1单例模式/gi实现/gi的/ude1具体/a例子/gi，/w一个/mq操作系统/gi只能/v有/vyou一个/mq文件系统/gi。/w   /x好/a了/ule，/w到/v这里/rzs，/w我们/rr的/ude1单例设计模式/gi也/d基本/a接近/v尾声/n了/ule，/w发现/v对于/p单例/gi的/ude1解读/v也/d不是/c非常/d难/a，/w本身/rz设计模式/nz的/ude1目的/gi就是/v为了/p方便/a编程/gi才/d有/vyou了/ule它/rr的/ude1用武之地/n，/w所以/c设计模式/nz掌握/v了/ule其本质/n，/w也/d不会/v有/vyou那种/r“/w高大/a上/f”/w的/ude1阴影/n啦/y，/w好/a了/ule，/w我们/rr继续/v加油/vi吧/y！/w