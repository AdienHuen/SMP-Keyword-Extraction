#4./nz原型模式/gi(/nz设计模式/nz笔记/gi)/nz
分类/gi:/w1/nz：/w创建型模式/gi：/w单例模式/gi，/w工厂模式/gi，/w抽象工厂模式/gi，/w建造者模式/gi，/w原型模式/gi；/w2/nz：/w结构型模式/gi：/w适配器模式/gi，/w桥接模式/gi，/w装饰模式/gi，/w组合模式/gi，/w外观模式/gi，/w享元模式/gi，/w代理模式/gi3/nz：/w行为/n型/k模式/gi：/w模板方法/gi模式/gi，/w命令模式/gi，/w迭代器模式/gi，/w观察者模式/gi，/w中介者模式/gi，/w备忘录模式/gi，/w解释器模式/gi，/w状态模式/gi，/w策略模式/gi，/w职责链模式/gi，/w访问者/n模式/gi。/w原型模式/gi:/w通过/pnew/nz产生/v一个/mq对象/gi需要/v非常/d繁琐/a的/ude1数据/gi准备/v或/c访问/gi权限/gi(/nz耗时/vi)/nz，/w则/d可以/v使用/gi原型模式/gi。/w就是/vjava/gi中的/v克隆技术/nz，/w以/p某个/rz对象/gi为/p原型/gi，/w复制/gi出新/v的/ude1对象/gi。/w显然/ad，/w新的/a对象/gi具有/v原型/gi对象/gi的/ude1特点/n优势/gi有/vyou：/w效率高/nz（/w直接/ad克隆/gi，/w避免/v了/ule重新/d执行/v构造/n的/ude1过程/gi步骤/gi）/w克隆/gi类/gi于/pnew/nz，/w但是/c不/d同意/vnew/nz。/wnew/nz创建/gi新的/a对象/gi属性/gi采用/v的/ude1是/vshi默认/v，/w克隆/gi出/vf的/ude1对象/gi属性/gi和/cc原型/gi对象/gi相同/a。/w并且/c克隆/gi出/vf的/ude1新/a对象/gi改变/v不会/v影响/gi原型/gi对象/gi。/w然后/c，/w再/d修改/gi克隆/gi对象/gi的/ude1下面/f的/ude1例子/gi演示/gi耗时/vi操作/gi:/w原型模式/gi深复制/nz和/cc浅复制/nz:/w测试/gi:/w