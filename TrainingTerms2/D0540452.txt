#算法/gi竞赛/gi入门/gi经典---函数部分/nz2/nz
第七章/nz：/w（/w暴力求/nz解法/gi）/w枚举/gi全排列/gi：/w（/w包括/v可/v重/a集/q）/wview code/nz下一个/nz排列/gi：/wwhile/nz(/nznext/nz_/nzpermutation/nz(/nzp/nz,/nzp/nz+/nzn/nz)/nz)/nz{/nz　　/nzprintf/nz(/nz.../w)/nz /x//nz//nz当/p不存在/ns下一个/nz排列/gi的/ude1时候/n，/w跳出/vwhile/nz循环/gi。/w}/nz枚/q举子/nz集/q：/wview code/nz这/rzv两者/rzv的/ude1解答/v树/gi是/vshi稍/d有/vyou不同/a的/ude1。/w但/c由于/p特性/gi使然/v：/w最后/f一层/nz节点/gi数目/gi /x约等于/v /x其/rz上/f所有/b节点/gi总和/n，/w /x两者/rzv解答/v树/gi节点/gi数目/gi相差/v2/nz倍/q。/w回溯/gi：/w也/d即/v递归/gi枚/q举算法/nz！/w /x+/nz /x适当/a地/ude2减少/v枚/q举量/nz。/w　　/nz /x进一步/d减少/v解答/v树/gi节点/gi数目/gi，/w减少/v时间/gi空间/n开支/n，/w剪枝/vi，/w加快/v算法/gi。/w　　/nz核心/n：/w生成/v和/cc检查/gi有机/b地/ude2结合/v起来/vf！/w /x从而/c减少/v不必要/a的/ude1枚/q举量/nzview code/nz注意/v恢复原状/nz的/ude1问题/gi，/w一般/ad也/d是/vshi在/p出口处/s回复/v原状/n，/w也/d即/v：/w函数调用/gi结束/v的/ude1地方/n。/w素数/gi环/n：/wview code/nz困难/an的/ude1串/q：/wview code/nz//nz//nz注意/v最后/f一点/m总结/gi注释/gi！/w可以/v跳出/v整个/b递归/gi！/w带宽/n：/w//nz*/nz与/cc八皇后/gi问题/gi不同之处/l：/w　　/nz八皇后/gi问题/gi，/w在/p得到/v完整/a解/v之前/f，/w可以/v避免/v拓展/v一/nz些/q不/d可行/a的/ude1节点/gi！/w　　/nz但是/c此/rzs题/n每种/r情况/n都/d是/vshi可行解/nz。/w那么/c就/d没有/v可以/v优化/gi的/ude1方式/n了/ule么/y？/w当然/d不是/c！/w /x我们/rr可以/v采用/v一个/mq在/p平常/a最常/d使用/gi的/ude1方法/gi：/w维护/gi最大值/gm！/w /x只不过/d这里/rzs我们/rr是/vshi在/p递归/gi的/ude1过程/gi中/f维护/gi，/w用来/v剪枝/vi！/w通俗/a讲/v：/w我们/rr可以/v记录/gi下/f目前/t已经/d找到/v的/ude1最小/a带宽/nk/nz，/w在/p枚举/gi其它/rz路子树/nz结构/gi时/qt，/w如果/c发现/v已经/d有/vyou某/rz两/nz个/q节点/gi的/ude1距离/gi大于/v等于/vk/nz，/w那么/c我们/rr考虑/v将/d这/rzv一路/m剪掉/v！/w那么/c可以/v优化/gi很/d多/a！/w(/nz就/d像/v一个/mq数组/gi，/w维护/gi最大值/gm最小值/gm等/udeng问题/gi，/w思想/gi类似/a，/w只不过/d应用/gi在/p了/ule不同/a的/ude1地方/n。/w)/nz*/nz//nz