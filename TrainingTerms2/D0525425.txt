#设计模式/nz（/w八/nz）/w观察者模式/gi(/nzObserver/nz)/nz
参考/gi书籍/gi：/w《/w设计模式/nz /x-/nz /x可/v复用/gi面向对象/gi软件/gi的/ude1基础/gi》/wgof/gi参考/gi链接/gi：/w目录/gi1./nz介绍/gi//nz作用/gi：/w2./nz应用场景/gi：/w3./nzuml/gi类图/gi4./nz实现代码/gi5./nz扩展/gi//nz补充/vn1./nz介绍/gi//nz作用/gi：/w观察者/nz模式定义/l了/ule一种一/nz对/p多/a的/ude1依赖/v关系/gi，/w让/v多/a个/q观察者/nz对象/gi同时/c监听/gi某/rz一个/mq主题/n对象/gi，/w这个/rz主题/n对象/gi在/p状态/gi发生变化/l时/qt，/w会/v通知/gi所有/b观察者/nz对象/gi，/w使/v它们/rr能够/v自动更新/i自己/rr2./nz应用场景/gi：/w将/d一个/mq系统分割/nz成/v一系列/b相互协作/l的/ude1类/gi有/vyou一个/mq常见/a的/ude1副作用/n：/w需要/v维护/gi相关/vn对象/gi间/f的/ude1一致性/gi。/w我们/rr不/d希望/v为了/p维持/v一致性/gi而使/c各类/r紧密/ad耦合/vn，/w因为/c这样/rzv降低/v了/ule它们/rr的/ude1可/v重用性/nz。/w例如/v,/nz /x许多图形/nz用户界面/gi工具箱/gi将/d用户/gi应用/gi的/ude1界面/gi表示/v与/cc底下/f的/ude1应用/gi数据/gi分离/vi /x。/w定义/gi应用/gi数据/gi的/ude1类/gi和/cc负责/v界面/gi表示/v的/ude1类/gi可以/v各自/rr独立/a地/ude2复用/gi。/w /x当然/d它们/rr也/d可/v一起/s工作/gi。/w一个表/nz对象/gi和/cc一个/mq柱状图/nz对象/gi可/v使用/gi不同/a的/ude1表示/v形式/gi描述/gi同一个/b应用/gi数据/gi对象/gi的/ude1信息/gi。/w表/n对象/gi和/cc柱状图/nz对象/gi互相/d并不知道/l对方/n的/ude1存在/v，/w这样/rzv使/v你/rr可以/v根据/p需要/v单独/d复用/gi表/n或/c柱状图/nz。/w但/c在/p这里/rzs是/vshi它们/rr表现/v的/ude1乎/y互相/d知道/v。/w当/p用户/gi改变/v表/n中的/v信息/gi时/qt /x,/nz柱状图/nz能/v立即/d反映/v这/rzv一/nz变化/gi,/nz /x反过来/d也/d是/vshi如此/rzv。/w这种/r交互/gi也/d称为/v发布/gi－/w订阅/v（/wp u b l i s h /nz-/nz s u b s c r i b e/nz）/w。/w目标/gi是/vshi通知/gi的/ude1发布者/nz。/w它/rr发出通知/v时/qt并不/d需/v知道/v谁/ry是/vshi它/rr的/ude1观察者/nz。/w可以/v有/vyou任意/d数目/gi的/ude1观察者/nz订阅/v并/cc接收/gi通知/gi。/w3./nzuml/gi类图/gi4./nz实现代码/giobserver/nz./nzhobserver/nz./nzcppsubject/nz./nzhsubject/nz./nzcppclient/nz代码/gi：/w输出/gi：/w5./nz扩展/gi//nz补充/vn