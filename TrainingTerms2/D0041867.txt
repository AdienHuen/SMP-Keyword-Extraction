#数据仓库/gi处理/vn演进/vn
转/v近两年/qt在/p大数据管理/gi领域/gi中/f争论/vn最多/ad的/ude1恐怕/d要/v属/v数据湖/nz(/nzdata lake/nz)/nz的/ude1概念/gi了/ule。/w虽然/cpentaho/nz的/ude1cto james dixon /nz2010/nz年/qt就/d已经/d提出/v了/ule这个/rz概念/gi，/w但/c直到/v最近两年/nz才/d引起/v业界/n的/ude1热/a议/v。/w“/w数据/gi湖”/nz概念/gi涉及/v数据架构/gi、/w应用/gi模式/gi以及/cc数据/gi管控/nz等/udeng多方面/n的/ude1问题/gi。/wjames/nz用/p了/ule一个/mq形象/n的/ude1比喻/n来/vf描述/gi数据湖/nz：/w“/w如果/c把/pba数据/gi集市/n看做/v一瓶/nz饮用水/n，/w数据湖/nz则/d是/vshi未经/d处理/vn和/cc包装/n的/ude1原生/b状态/gi水库/n。/w不同/a源头/n的/ude1水体/n源源不断/vl流入/v数据湖/nz，/w带来/v各种/rz分析/gi、/w探索/v的/ude1可能性/gi。/w”/w这/rzv一/nz概念/gi带来/v了/ule几/d个/q延伸/v性/ng问题/gi：/w一/nz是/vshi大数据管理/gi是否/v还/d需要/v数据架构/gi规划/gi，/w尤其/d是/vshi业界/n已经/d非常/d擅长/v和/cc熟悉/v的/ude1数据架构/gi层次/n?/nz二是/nzschema on read/nz和/ccschema on write/nz提出/v的/ude1问题/gi，/w即/v对于/p无/v结构/gi的/ude1原始数据/gi，/w是/vshi在/p其/rz进入/v大数据/gi平台/gi之/uzhi初/f就/d通过/p各种/rz方法/gi确定/v其/rzschema/nz(/nz简表/nz)/nz，/w还是/c留给/v数据/gi使用者/n自行解决/l。/w三是/nz数据/gi在/p使用/gi之前/f是否/v需要/v质量检查/nz，/w是否/v需要/v进行/vn标准化/vn等/udeng处理/vn。/w由/p上述/b分析/gi可见/c，/w数据湖/nz的/ude1概念/gi指出/v，/w数据/gi无需/v加工/gi整合/gi，/w可/v直接/ad堆积/v在/p平台/gi上/f，/w由/p最终/d使用者/n按照/p自己/rr的/ude1需要/v进行/vn数据处理/gi。/w而/cc数据仓库/gi建设/gi强调/v的/ude1是/vshi整合/gi、/w面向/v主题/n、/w分/qt层次/n等/udeng思路/gi。/w可以/v说/v，/w数据湖/nz建设/gi思路/gi从/p本质/n上/f颠覆/v了/ule数据仓库/gi建设/gi方法论/n。/w两者/rzv差异/n如/v图/gi1/nz所示/nz。/w在/p数据仓库/gi模式/gi下/f，/w数据/gi需要/v清洗/v、/w转换/gi及/cc整合/gi，/w而/cc在/p数据湖/nz模式/gi下/f，/w这些/rz工作/gi由/p最终用户/nz按照/p自己/rr的/ude1需要/v处理/vn。/w事实上/bl，/w由于/p企业/gi发展/gi的/ude1历史/n、/w现状/gi以及/ccit/gi治理/vn模式/gi等/udeng的/ude1差异/n，/w并不/d存在/v一个/mq放之四海/nz皆准/i的/ude1数据架构/gi蓝图/n。/w本文/r通过/p对/p数据/gi使用/gi需求/gi差异/n进行/vn分析/gi，/w探讨/v大数据时代/gi的/ude1数据/gi架构设计/nz。/w在/p探讨/v之前/f，/w需/v建立/gi两/nz个/q共识/n：/w一/nz是/vshi企业/gi内部/f的/ude1不同/a条/q线/n，/w不同/a部门/gi的/ude1用户/gi之间/f，/w对于/p数据/gi应用/gi的/ude1深度/gi和/cc广度/n是/vshi有/vyou差异/n的/ude1。/w这种/r差异/n带来/v了/ule使用/gi模式/gi、/w数据/gi基础/gi和/cc时效性/n要求/n等/udeng方面/n的/ude1不同/a要求/n。/w二是/nz企业/giit/gi系统/gi建设/gi基于/p一定/b预算/gi，/w成本/n可控/nz。/w如果/c投入/v无限大/n，/w那么/c数据架构/gi的/ude1探讨/v就/d失去/v意义/n。/w　　一/nz、/w数据/gi使用/gi需求/gi的/ude1差异/n无论/c数据架构/gi如何/ryv设计/gi，/w目的/gi都/d是/vshi为了/p满足/v最终用户/nz的/ude1需求/gi。/w因此/c，/w在/p讨论/gi大数据时代/gi的/ude1数据/gi架构设计/nz前/f，/w首先/d应该/v明确/a企业/gi内部/f对于/p大数据/gi的/ude1应用/gi究竟/d可以/v从/p哪些/ry角度/n对/p需求/gi进行/vn梳理/v。/w1./nz固定/a与/cc灵活/a：/w使用/gi模式/gi的/ude1不同/a要求/n尽管/c固定/a报表/gi应用/gi模式/gi已经/d存在/v多/a年/qt，/w而/cc新的/a数据/gi使用/gi模式/gi又/d层出不穷/vl，/w但/c报表/gi由于/p其/rz简单明了/l的/ude1特点/n，/w目前/t依然/d是/vshi企业/gi内部/f各种/rz数据/gi应用/gi形态/n的/ude1主力/nnt，/w尤其/d是/vshi针对/gi各级/r管理人员/nnt。/w这种/r模式/gi对/p数据/gi使用/gi的/ude1要求/n是/vshi固定/a的/ude1，/w加工/gi路径/gi也/d是/vshi固定/a的/ude1，/w因此/c可以/v通过/p各种/rz预处理/gi和/cc预先/d加工/gi来/vf对/p数据/gi进行/vn处理/vn，/w从而/c提升/gi查询/gi速度/n。/w基于/p上述/b特点/n，/w技术人员/nnt可以/v事先/d对/p所有/b的/ude1数据表/gi进行/vn设计/gi，/w对/p程序/gi进行/vn优化/gi。/w联机/vi分析/gi是/vshi针对/gi业务/gi分析/gi的/ude1一种/nz使用/gi模式/gi，/w当/p通过/p报表/gi发现/v业务/gi问题/gi时/qt，/w通常/d需要/v从/p不同/a角度/n进一步/d分析/gi问题/gi产生/v的/ude1原因/n。/w这类/r分析/gi可能/v没有/v预先确定/n的/ude1模式/gi和/cc路径/gi，/w需要/v在/p大量/m的/ude1数据/gi中/f通过/p更加/d灵活/a的/ude1方式/n进一步/d探索/v，/w通常/d通过/polap/gi和/cc即席/d查询/gi的/ude1方式/n完成/v。/wolap/gi在/p预先/d定义/gi的/ude1语义/n模型/gi上/f进行/vn进一步/d分析/gi;/nz即席/d查询/gi允许/v用户/gi在/p更加/d底层/n的/ude1明细/b数据/gi上/f通过/p编写/gisql语句/gi来/vf进行/vn分析/gi。/w数据/gi科学家/nnt所/usuo做/v的/ude1探索性/n数据分析/gi工作/gi则/d更加/d灵活/a，/w数据/gi的/ude1来源/gi可以/v是/vshi外部/f、/w非结构化/gi甚至/d半结构/nz化/v的/ude1数据/gi，/w数据处理/gi则/d可以/v采用/v各种/rz编程语言/gi，/w其/rz灵活度/nz远远/d超过/vsql语句/gi的/ude1承载能力/nz，/w其/rz分析/gi的/ude1主题/n甚至/d可以/v是/vshi事先/d没有/v设定/v的/ude1，/w从/p对/p各种/rz数据/gi的/ude1不断/d探索/v中/f寻找/v发现/v问题/gi的/ude1灵感/n。/w2./nz统一/vn与/cc独立/a：/w数据/gi基础/gi的/ude1不同/a要求/n很/d多用户/n希望/v在/p统一/vn的/ude1数据/gi基础上/nz进行/vn数据/gi应用/gi，/w这种/r方式/n的/ude1好处/gi体现/v在/p：/w用户/gi无需/v为/p来自/v不同/a系统/gi的/ude1数据/gi建立/gi关联关系/gm;/nz无需/v进行/vn数据/gi清洗/v和/cc转换/gi;/nz无需/v理解/gi每一个/nz数据源/gi系统/gi的/ude1结构/gi和/cc内部/f关系/gi;/nz从/p不同/a角度/n进行/vn分析/gi时/qt，/w可以/v得到/v不同/a的/ude1结果/n。/w与/cc之/uzhi对应/vi的/ude1是/vshi，/w统一/vn的/ude1数据/gi基础/gi通常/d为/p满足/v一/nz些/q应用/gi的/ude1共性/n要求/n对/p数据/gi进行/vn相应/vi的/ude1处理/vn，/w如/v数据/gi清洗/v、/w代码/gi标准化/vn或/c过滤/gi掉/v质量/gi不合/v的/ude1数据/gi。/w这种/r共性化/nz的/ude1处理/vn使得/vi一些/m需要/v使用/gi原始数据/gi的/ude1用户/gi无法/v使用/gi，/w一些/m代码/gi转换/gi可能/v丢失/v了/ule部分/n信息/gi，/w一/nz些/q整合/gi可能/v使得/vi数据/gi无法/v还原/gi。/w有些/rz用户/gi希望/v拥有/v自己/rr独立/a的/ude1基础/gi数据/gi，/w直接/ad使用/gi原始数据/gi，/w而/cc不是/c转换/gi后/f的/ude1数据/gi。/w在/p风险/gi管控/nz和/cc审计/vn领域/gi，/w这种/r需求/gi更加/d明显/a。/w　/nz3./nz稳定/an与/cc敏捷/gi：/w面对/v变化/gi的/ude1不同/a要求/n不同/a应用场景/gi和/cc不同/a业务/gi处理/vn系统对/l数据/gi的/ude1要求/n也/d不同/a，/w概括/v而言/uls，/w主要/b有/vyou两/nz类/gi：/w一是/nz希望/v能够/v通过/p数据架构/gi的/ude1设计/gi保持/v应用/gi稳定/an，/w尽量/d屏蔽/v各个/rz应用系统/gi的/ude1变化/gi对/p各类/r数据/gi应用/gi的/ude1影响/gi。/w二是/nz希望/v能够/v迅速/ad跟上/v系统/gi的/ude1变化/gi，/w保持/v敏捷/gi。/w两类/nz要求/n都/d有/vyou其/rz合理性/n，/w尽管/c并/cc不是/c每个/r应用/gi的/ude1使用者/n都/d关心源/nz应用系统/gi的/ude1变化/gi，/w但/c如果/c不/d对/p变化/gi进行/vn管理/gi，/w对/p所有/b应用/gi都会/n产生/v影响/gi。/w4./nz时效性/n的/ude1不同/a要求/n企业/gi内部/f的/ude1不同/a应用/gi，/w对/p时效性/n的/ude1要求/n也/d不尽相同/i。/w有些/rz应用/gi对/p数据/gi有/vyou准/a实时性/nz要求/n，/w如/v业务/gi监控/gi类/gi应用/gi、/w实时/n营销/gi类/gi应用/gi和/cc事件/gi侦测/v类/gi应用/gi等/udeng;/nz有些/rz应用/gi对/p数据/gi时效性/n要求/n为/p半日/mq//nz隔日/d;/nz有些/rz应用旬/nz和/cc月/n度/qv即可/v。/w针对/gi不同/a的/ude1时效性/n要求/n，/w数据/gi基础/gi、/w数据/gi加工/gi的/ude1路径/gi和/cc采用/v的/ude1技术/gi也/d不/d相同/a。/w随着/p企业/gi数据/gi应用/gi的/ude1成熟度/gi不断/d增加/v，/w数据/gi时效性/n要求/n的/ude1差异/n也/d会/v越来越/d明显/a。/w数据架构/gi就是/v要/v随着/p要求/n的/ude1不断/d变化/gi而/cc进行/vn调整/vn。/w下文/n从/p技术/gi角度/n分析/gi需求/gi差异/n对/p数据架构/gi提出/v的/ude1要求/n和/cc带来/v的/ude1挑战/gi。/w二/nz、/w两/nz种/q数据/gi架构设计/nz数据架构/gi及其/cc技术/gi实现/gi都/d是/vshi服务于/v数据/gi使用/gi需求/gi的/ude1，/w而/cc使用/gi需求/gi上/f的/ude1差异/n对于/p技术/gi实现/gi的/ude1要求/n不同/a，/w需要/v采用/v各种/rz变通/vi的/ude1技术/gi架构/gi满足要求/nz。/w本文/r重点/n分析/gi不同/a数据/gi使用/gi要求/n对/p技术/gi平台/gi的/ude1不同/a要求/n以及/cc两/nz种/q数据架构/gi的/ude1适用/vi场景/gi。/w1./nz固定/a、/w统一/vn的/ude1要求/n需要/v层次化/nz的/ude1数据架构/gi使用/gi模式/gi上/f，/w无论是/c固定/a报表/gi还是/c各种/rz形态/n的/ude1联机/vi分析/gi，/w从/p数据架构/gi的/ude1角度看/v，/w都/d可以/v采用/v层次化/nz的/ude1数据架构/gi满足要求/nz。/w这种/r模式/gi成本/n最低/a，/w基础/gi数据/gi和/cc应用/gi指标/gi的/ude1一致性/gi最好/d，/w以/p经典/gi三层/nz架构设计/nz为/p代表/nnt。/w第一层/nz为/p同源/vn//nz贴源/nz设计/gi：/w这一层/nz又/d称为/v“/w数据/gi缓冲/vn层/gi”/w、/w“/w临时/gi数据/gi区/n”/w或/c“/w数据/gi预处理/gi层”/nz，/w在/p这/rzv一/nz层/gi中/f保留/v最为/d原始/a的/ude1数据/gi。/w一/nz些/q设计/gi将/d部分/n数据/gi清洗/v和式/nz化/v工作/gi放在/v这一层/nz;/nz另一些/nz设计/gi不在/v该层/nz进行/vn哪怕/c最/d基本/a的/ude1数据/gi清洗/v和式/nz化/v工作/gi，/w目的/gi是/vshi满足用户/n对/p数据/gi清洗/v和式/nz化/v的/ude1不同/a要求/n。/w对于/p半结构/nz化/v数据/gi，/w应用/gi访问/gi日志/gi数据/gi在/p第一层/nz中/f是否/v需要/v式/k化为/v关系/gi表/n的/ude1方式/n，/w在/p不同/a的/ude1实践中/nz有/vyou不同/a的/ude1数理/n。/w而/cc结构化/n数据/gi，/w在/p从/p交易/gi处理/vn系统/gi中/f被/pbei抽取/v出来/vf后/f，/w不/d做/v任何/rz转换/gi直接/ad保存/gi在/p这/rzv一/nz层/gi中/f。/w第二层/nz为/p整合/gi设计/gi：/w包括/v多/a个/q数据/gi来源/gi的/ude1数据/gi整合/gi、/w代码/gi转换/gi和/cc标准化/vn、/w类型/gi及/cc式/k的/ude1统一/vn和/cc转换/gi以及/cc分类/gi体系/gi和/cc业务/gi实体/n的/ude1统一/vn、/w建立/gi来自/v不同/a系统/gi的/ude1数据/gi之间/f的/ude1关联关系/gm等/udeng。/w整合/gi消除/v了/ule多/a个/q数据源/gi的/ude1不/d一致/a、/w为/p数据/gi建立/gi连接/gi关系/gi，/w形成/v了/ule客户/n、/w交易/gi、/w合同/gi、/w产品/gi等/udeng不同/a的/ude1数据/gi主题/n，/w为/p后续/vn的/ude1数据/gi使用/gi奠定/v基础/gi。/w第三层/nz为/p面向/v应用/gi主题/n的/ude1设计/gi：/w通常/d在/p这/rzv一/nz层/gi中/f，/w建立/gi起/vf针对/gi某些/rz应用领域/l的/ude1分析/gi指标/gi和/cc体系/gi。/w如/v面向/v营销/gi和/cc客户/n分析/gi的/ude1各种类型/l的/ude1分析/gi指标/gi、/w客户/n特征/gi和/cc标签/gi;/nz面向/v风险/gi的/ude1各种/rz风险/gi指标/gi;/nz面向/v绩效/gi管理/gi的/ude1各种/rz业务/gi统计/gi指标/gi等/udeng。/w这一层/nz更加/d注重/v统计/gi指标/gi的/ude1标准化/vn，/w包括/v指标/gi口径/n和/cc定义/gi、/w指标/gi的/ude1一致性/gi等/udeng。/w　　/nz2./nz灵活/a、/w独立/a的/ude1要求/n需要/v扁平化/nz的/ude1数据架构/gi层次化/nz的/ude1数据架构/gi尽管/c带来/v了/ule诸/rz多/a优势/gi，/w但/c在/p面对/v灵活/a、/w独立/a的/ude1数据/gi使用/gi要求/n时/qt，/w也/d带来/v了/ule一/nz些/q问题/gi。/w首先/d，/w数据/gi整合/gi带来/v了/ule数据/gi使用/gi上/f的/ude1复杂性/gi。/w其次/c，/w可能/v丢失/v信息/gi。/w如/v在/p代码/gi标准化/vn的/ude1过程/gi中/f如果/c丢掉/v了/ule原始/a代码/gi，/w则/d可能/v造成/v信息/gi丢失/v。/w而/cc若/c保留/v原始/a代码/gi，/w则/d会/v带来/v大量/m的/ude1冗余/n。/w最后/f，/w整合/gi的/ude1设计/gi使得/vi数据/gi管理/gi变得/vi笨重/a，/w源/ng系统/gi变化/gi，/w涉及/v整合/gi规则/gi、/w数据模型/gg变化/gi以及/cc大量/m的/ude1数据/gi迁移/gi，/w使得/vi数据架构/gi难以/d快速/d调整/vn。/w而/cc数据湖/nz的/ude1思路/gi，/w正是/v把/pba上述/b问题/gi留给/v了/ule最终用户/nz，/w由/p最终用户/nz按照/p自己/rr的/ude1要求/n自行解决/l。/w某种程度/nz上/f，/w数据湖/nz并/cc不是/c一个/mq技术/gi概念/gi，/w而是/c数据/gi管理/gi的/ude1另一种/nz思路/gi，/w对于/pit/gi技能/gi较强/d、/w数据/gi使用/gi需求/gi灵活/a、/w习惯/n于/p不/d走/v寻常/a路/n自行/d钻研业务/n问题/gi的/ude1用户/gi来讲/uls，/w不失为/v一种/nz可/v借鉴/gi的/ude1方法/gi。/w3./nz两/nz类/gi数据架构/gi的/ude1比较/gi和/cc分析/gi两/nz种/q数据/gi架构设计/nz在/p面对/v不同/a的/ude1数据/gi使用/gi需求/gi时/qt所/usuo表现/v出来/vf的/ude1特点/n也/d不同/a。/w表/n1/nz为/p两/nz种/q设计/gi策略/gi的/ude1分析/gi对比/gi。/w通过/p表/n1/nz的/ude1分析/gi，/w不难看出/i，/w在/p面对/v不同/a的/ude1数据/gi使用/gi要求/n时/qt，/w不同/a的/ude1加工/gi设计/gi方法/gi有/vyou其/rz适用/vi的/ude1场景/gi和/cc特点/n，/w而/cc数据/gi架构设计/nz的/ude1思路/gi就是/v结合/v企业/gi内部/f不同/a要求/n的/ude1紧急/a和/cc重要/a程度/n进行/vn权衡/v与/cc选择/gi。/w三/nz、/w两/nz种/q数据/gi管理模式/nz谈到/v数据/gi架构设计/nz，/w有/vyou一个/mq无法/v回避/v的/ude1问题/gi是/vshi数据/gi管理模式/nz的/ude1设计/gi策略/gi。/w在/p关系型数据库/gi中/f，/w为了/p清晰/a地/ude2表达/gi一个/mq确定/v的/ude1业务/gi含义/n，/w采用/ve/nz-/nzr/nz模型/gi作为/p数据/gi管理/gi的/ude1基础/gi，/w通过/p模型/gi设计/gi的/ude1方法/gi建立/gi数据模型/gg，/w再/d通过/p应用程序/nz将/d数据/gi写入/gi预先/d定义/gi好/a的/ude1表/n结构/gi中/f。/w这种/r方法/gi虽然/c已为/d人/n所/usuo熟知/v，/w但/c却/d存在/v明显/a的/ude1缺点/gi：/w①/nz数据/gi在/p写入/gi之前/f就/d必须/d有/vyou其/rz明确/a的/ude1定义/gi。/w在/p关系型数据库/gi中/f，/w一个/mq明显/a的/ude1例子/gi是/vshi，/w必须/d有一个/nzcreate table/nz语句/gi建表/nz，/w才能/n有/vyouinsert/gi语句/gi写入/gi数据/gi。/w这个/rzcreate/gi语句/gi中/f，/w就是/v事先/d确定/v的/ude1数据/gi式/k。/w②/nz1/nz个/q表/n中的/v所有/b行都/n必须/d遵循/gi同样/d的/ude1式/k。/w为此/bl，/w关系型数据库/gi引入/v空/ng概念/gi表示/v某/rz条/q记录/gi没有/v某/rz一属性/nz。/w③/nz当/p某/rz条/q记录/gi增加/v一个/mq属性/gi时/qt，/w需要/v给/p已经/d在/p数据库/gi中的/v所有/b记录/gi增加/v该/rz属性/gi。/w上述/b缺点/gi在/p迅速/ad变化/gi和/cc事先/d不能/v确定/v数据式/nz的/ude1场景/gi下/f显得/v尤其/d突出/a。/w业界/n将/d这种/r方式/n归/v为/pschema on write/nz，/w即/v在/p数据/gi写入/gi时/qt就/d需要/v确定/v其/rz式/k。/w与此/c对应/vi的/ude1方式/n为/pschema on read/nz，/w即/v在/p数据/gi访问/gi时/qt，/w由/p数据/gi访问者/n来/vf解析/gi和/cc确定/v数据/gi的/ude1式/k，/w写入/gi者/k并不/d关心/v其/rz是否/v有/vyou一致/a、/w统一/vn的/ude1数据/gi式/k。/wschema on read /nz方式/n具有/v以下/f优点/gi：/w①/nz降低/v数据保存/gi的/ude1成本/n，/w无需/v开发/gi即可/v保存/gi。/w②降低/nz数据/gi产生/v和/cc使用/gi之间/f的/ude1延迟/v。/w③/nz给予/vn最终用户/nz最大/gm的/ude1灵活/a度/qv来/vf处理/vn数据/gi。/w④允许/nz用户/gi保存/gi非结构化/gi、/w半结构/nz化/v的/ude1数据/gi。/w⑤对于/nz现在/t不/d需要/v处理/vn或者/c无法/v处理/vn的/ude1数据/gi，/w保留/v原始数据/gi供/vi未来/t使用/gi。/w⑥/nz同一/b份/q原始数据/gi上/f，/w不同/a的/ude1用户/gi可能/v有/vyou不同/a的/ude1理解/gi。/wschema on read/nz方式/n的/ude1缺点/gi为/p：/w①不同/nz用户/gi多/a次/qv解析/gi数据/gi造成/v计算/gi资源/gi浪费/gi。/w②有些/nz数据/gi如果/c不在/v写入/gi的/ude1时候/n遵循/gi一定/b的/ude1式/k，/w在/p使用/gi时/qt不一定/nz能够/v解析/gi其/rz式/k。/w③/nz用户/gi在/p使用/gi时/qt，/w不得不/d先/d花/n时间/gi去/vf解析/gi数据/gi的/ude1式/k。/w以上/f分析/gi说明/v，/wschema on read/nz和/ccschema on write/nz两/nz种/q方式/n有/vyou其/rz不同/a的/ude1优缺点/gi。/w在/p两种/nz不同/a的/ude1数据/gi架构设计/nz策略/gi下/f，/w在/p什么样/ryv的/ude1场景/gi下/f使用/gi哪种/ry数据/gi管理模式/nz需要/v依据/n使用/gi要求/n决定/v。/w整体/n来讲/uls，/w针对/gi原始数据/gi，/w采用/vschema on read/nz管理模式/nz进行/vn数据保存/gi，/w针对/gi稳定性/n较高/ad，/w相对/d固定/a的/ude1应用/gi，/w采用/vschema on write/nz的/ude1方式/n将/d解析/gi后/f的/ude1数据/gi进行/vn保存/gi，/w两者/rzv方式/n相结合/nz是/vshi比较/gi可行/a的/ude1方式/n。/w本文/r从/p四个/nz不同/a角度/n分析/gi企业/gi内部/f数据/gi使用/gi需求/gi差异/n，/w从/p中/f可以/v看出/v，/w单一/gi的/ude1数据/gi架构设计/nz方法/gi难以/d满足/v所有/b的/ude1应用/gi要求/n。/w某种程度/nz上/f，/w企业/gi数据/gi架构设计/nz与/cc城市交通/nz规划/gi类/gi，/w既有/v出行/vi的/ude1共性化/nz需求/gi，/w也/d有点/d对/p点/gi的/ude1个性化/gi需求/gi，/w还有/v为/p特殊/a需求/gi而/cc设置/gi的/ude1应急/gi车道/n。/w城市交通/nz问题/gi需要/v地铁/n、/w公交/b、/w出租车/n、/w自行车/n、/w步行/vi等/udeng一系列/b的/ude1综合/vn手段/n来/vf解决/v。/w大数据时代/gi数据/gi架构设计/nz的/ude1方法/gi也/d大同小异/vl，/w采用/v层次化/nz与/cc扁平化/nz数据架构/gi相结合/nz的/ude1方式/n，/w制定/gi相应/vi的/ude1准入/vn原则/gi;/nz从/p企业/gi的/ude1实际/n情况/n出发/vi，/w分析/gi不同/a需求/gi的/ude1紧迫性/n和/cc能够/v带来/v的/ude1业务/gi价/n，/w实现/gi投入/v//nz产出/vn的/ude1最佳/z平衡/a