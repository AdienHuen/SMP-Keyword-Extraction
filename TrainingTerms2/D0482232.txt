#java设计模式/gi（/w二）---单例/nz模式/gi
java设计模式/gi（/w二）---单例/nz模式/gi一/nz、/w单例模式/gi（/w也/d叫/vi单态/nz模式/gi）/w如果/c把/pbajava/gi的/ude1构造方法/gi弄成/nzprivate/nz，/w那/rzv里面/f的/ude1成员/nnt属性/gi是不是/v只有/c通过/pstatic/gi来/vf访问/gi呢/y。/w如果/c构造方法/gi是/vshiprivate/nz的话/udh，/w那么/c有/vyou什么/ry好处/gi呢/y。/w如果/c构造方法/gi是/vshiprivate/nz的话/udh，/w会/v不/d更好/d的/ude1封装/gi该类/r呢/y。/w这/rzv就是/v单例模式/gi。/w构造函数/gi弄成/nzprivate /nz就是/v单例模式/gi，/w即/v不想/v让/v别人/rr用/pnew /nz方法/gi来/vf创建/gi多/a个/q对象/gi，/w可以/v在/p类/gi里面/f先生/n成/v一个/mq对象/gi，/w然后/c写/v一个/mqpublic static/nz方法/gi把/pba这个/rz对象/gireturn/nz出去/vf。/w单例模式/gi：/w保证/v一个/mq类/gi仅有/nz一个/mq实例/gi，/w并/cc提供/v一个/mq访问/gi它/rr的/ude1全局/n访问/gi点/gi。/w简单/a实例/gi：/w二/nz、/w单例/gi式/k概念/gi及/cc特点/njava/gi中/f单例模式/gi是/vshi一种/nz常见/a的/ude1设计模式/nz，/w单例模式/gi分/qt三种/nz：/w懒汉式/gi单例/gi、/w饿汉式单例/gi、/w登记/gi式/k单例/gi三种/nz。/w单例模式/gi有一下/nz特点/n：/w1./nz单例/gi类/gi只能/v有/vyou一个/mq实例/gi。/w2./nz单例/gi类/gi必须/d自己/rr自己/rr创建/gi自己/rr的/ude1唯一/b实例/gi。/w3./nz单例/gi类/gi必须/d给/p所有/b其他/rzv对象/gi提供/v这/rzv一/nz实例/gi。/w懒汉式/gi：/w饿汉式/gi：/w登记/gi式/k：/w登记/gi式/k实际/n对/p一/nz组/n单例模式/gi进行/vn的/ude1维护/gi，/w主要/b是/vshi在/p数量/n上/f的/ude1扩展/gi，/w通过/pmap/nz我们/rr把/pba单例/gi存/v进去/vf，/w这样/rzv在/p调用/gi时/qt，/w先/d判断/gi该/rz单例/gi是否/v已经/d创建/gi，/w是/vshi的话/udh直接/ad返回/v，/w不是/c的话/udh创建/gi一个/mq登记/gi到/vmap/nz中/f，/w再/d返回/v。/w对于/p数量/n又/d分为/v固定/a数量/n和/cc不/d固定/a数量/n的/ude1。/w下面/f采用/v的/ude1是/vshi不/d固定/a数量/n的/ude1方式/n，/w在/pgetinstance/nz方法/gi中/f加上/v参数/gi（/wstring name/nz）/w。/w然后/c通过/p子类/gm继承/gi，/w重写/gi这个/rz方法/gi将/dname/nz传/v进去/vf。/w三/nz、/w使用/gi时/qt注意事项/nz1./nz使用/gi时/qt不能/v用/p反射/gi模式/gi创建/gi单例/gi，/w否则/c会/v实例化/gi一个/mq新的/a对象/gi2./nz使用/gi懒/a单例模式/gi时/qt注意/v线程安全/gi问题/gi3./nz饿/v单例模式/gi和/cc懒/a单例模式/gi构造方法/gi都/d是/vshi私有/gi的/ude1，/w因而是/c不能/v被/pbei继承/gi的/ude1，/w有些/rz单例模式/gi可以/v被/pbei继承/gi（/w如/v登记/gi式/k模式/gi）/w