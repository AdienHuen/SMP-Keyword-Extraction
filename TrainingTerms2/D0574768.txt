#设计模式/nz（/w代理/gi模式--静态/nz代理/gi）/w
最近/t一段时间/nz在/p看/v设计模式/nz书籍/gi，/w学习/gi和/cc了解/v了/ule很/d多/a设计模式/nz。/w昨天下午/nz有/vyou公司/nis打电话/vi让/v我/rr去/vf面试/gi，/w聊天/gi中/f就/d被/pbei问到/v了/ule有/vyou没有/v自己/rr的/ude1博客/gi。/w我/rr想/v了/ule下/f这些/rz年/qt看/v了/ule些/q书籍/gi但/c确实/ad重来/v没有/v总结/gi自己/rr的/ude1学习/gi成果/gi，/w想着/v以后/f看完/v一/nz些/q书籍/gi要/v及时/ad写下/v学习/gi的/ude1知识点/gi同时/c也/d可以/v和/cc广大/b程序员/gi分享/gi。/w好/a了/ule废话/n不/d多/a说/v了/ule，/w今天/t来讲/uls讲/v代理模式/gi。/w /x代理模式/gi分为/v静态代理/gi和/cc动态代理/gi模式/gi两种/nz展现/v形式/gi。/w静态代理/gi模式/gi比较简单/l，/w总结/gi由/p代理/gi类/gi和/cc代理/gi对象/gi组成/gi，/w如下/vi代码/gi例子/gi：/w这样/rzv你/rr就/d可以/v实现/gi最简单/nz的/ude1对/p坦克/nrf类/gi的/ude1代理/gi了/ule，/w使用/gi代理/gi的/ude1好处/gi是/vshi可以/v在/p不/d改变/v坦克/nrf移动/vn的/ude1核心/n代码/gi前提/n下/f，/w在/p其/rz前后/f加上/v其它/rz的/ude1业务/gi处理/vn。/w上面/f的/ude1代理/gi使用/gi了/ule聚合/gi的/ude1方式/n来/vf实现/gi，/w还/d可以/v使用/gi继承/gi的/ude1方式/n来/vf实现/gi上述/b的/ude1代理/gi功能/gi。/w但是/c聚合/gi比/p继承/gi更/d灵活/a这里/rzs就/d不在/v描述/gi继承/gi的/ude1实现/gi了/ule。/w该/rz静态代理/gi的/ude1 /x优点/gi：/w该/rz代理/gi只/d需要/v关注/v自身/rr的/ude1可以/v重用性/nz的/ude1业务逻辑/gi缺点/gi：/w只能/v固定/a的/ude1代理/gi部分/n接口/gi实现/gi，/w如果/c实现/gi大量/m的/ude1接口/gi还/d不能/v胜任/vn。/w动态代理/gi可以/v说/v是/vshi对/p静态代理/gi的/ude1完美/a补充/vn，/w下次/t博客/gi就/d说说/v动态代理/gi的/ude1实现/gi。/w