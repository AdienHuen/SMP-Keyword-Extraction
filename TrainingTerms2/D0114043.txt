#nosql数据库/gi与/cc内存数据库/gi
1./nz nosqlnosql /nz=/nz not only sql/nz，/w泛指/v非/b关系型/b的/ude1数据库/gi。/wnosql数据库/gi的/ude1产生/v就是/v为了/p解决/v大规模/b数据/gi集合/gi多重/b数据/gi种类/n带来/v的/ude1挑战/gi，/w尤其/d是/vshi大数据/gi应用/gi难题/n。/wnosql数据库/gi没有/v标准/gi的/ude1查询/gi语言/gi(/nzsql/gi)/nz，/w许/v多/anosql数据库/gi都/d有/vyourest/gi式/k的/ude1数据/gi接口/gi或者/c查询/giapi/gi。/w使用场景/gi：/w1/nz、/w数据模型/gg比较简单/l；/w2/nz、/w需要/v灵活性/gi更/d强/a的/ude1it/gi系统/gi；/w3/nz、/w对/p数据库/gi性能/gi要求/n较高/ad；/w4/nz、/w不/d需要/v高度/d的/ude1数据/gi一致性/gi；/w5/nz、/w对于/p给定/gikey/gi，/w比较/gi容易/ad映射/gi复杂/a的/ude1环境/n。/w2./nz nosql /nz数据库/gi4/nz大/a分类/gi名称/n描述/gi优点/gi//nz缺点/gi键/n(/nzkey/gi-/nzvalue/nz)/nz存储/gi数据库/gi主要/b会/v使用/gi到/v一个/mq哈希表/nz如/vredis/gi场景/gi：/w内容/gi缓存/gi，/w主要/b用于/v处理/vn大量/m数据/gi的/ude1高/a访问/gi负载/gi，/w也/d用于/v一些/m日志/gi系统/gi等等/udeng。/w适用/vi于/p数据/gi变化/gi快/a且/c数据库/gi大小/n可/v遇见/v（/w适合/v内存容量/nz）/w的/ude1应用程序/nz。/w优点/gi：/w查询/gi速度快/nz缺点/gi：/w数据/gi无/v结构化/n，/w通常/d只/d被/pbei当作/v字符串/gi或者/c二进制/gi数据/gi列存储/gi数据库/gi通常/d是/vshi用来/v应对/v分布式存储/gi的/ude1海量数据/gi。/w键/n仍然/d存在/v，/w但是/c它们/rr的/ude1特点/n是/vshi指向/v了/ule多/a个/q列/v如/v：/whbase/gi场景/gi：/w分布式/gi的/ude1文件系统/gi适用/vi于/p偏好/gibigtable/nz:/w)/nz并且/c需要/v对/p大数据/gi进行/vn随机/b、/w实时/n访问/gi的/ude1场合/n查找/gi速度快/nz，/w可扩展性/gi强/a，/w更容易/nz进行/vn分布式/gi扩展/gi；/w功能/gi相对/d局限/gi文档/gi型/k数据库/gi可以/v看作/v是/vshi键/n数据库/gi的/ude1升级版/nz，/w允许/v之间/f嵌/v套键/nz。/w而且/c文档/gi型/k数据库/gi比键/nz数据库/gi的/ude1查询/gi效率/gi更高/d如/v：/wcouchdb/nz,/nz mongodb/nz./nz /x国内/s也/d有/vyou文档/gi型/k数据库/gisequoiadb/gi，/w已经/d开源/gi场景/gi：/wweb应用/gi（/w与/cckey/gi-/nzvalue/nz类/gi，/wvalue/nz是/vshi结构化/n的/ude1，/w不同/a的/ude1是/vshi数据库/gi能够/v了解/vvalue/nz的/ude1内容/gi）/w数据结构/gi要求/n不严/a，/w表/n结构/gi可变/vn，/w不/d需要/v像/v关系型数据库/gi一样/uyy需要/v预先/d定义/gi表/n结构/gi；/w查询/gi性能/gi不/d高/a，/w而且/c缺乏/v统一/vn的/ude1查询/gi语法/gi。/w图形/gi(/nzgraph/nz)/nz数据库/gi使用/gi灵活/a的/ude1图形/gi模型/gi，/w并且/c能够/v扩展到/v多/a个/q服务器/gi上/f。/w如/v：/wneo/nz4/nzj/nz,/nz infogrid/nz,/nz infinite graph/nz./nz场景/gi：/w社交/gi网络/gi，/w推荐系统/gi等/udeng。/w专注/vi于/p构建/gi关系/gi图谱/n利用/v图/gi结构/gi相关/vn算法/gi。/w比如/v最短路径/gi寻址/gi，/wn/nz度/qv关系/gi查找/gi等/udeng；/w很/d多/a时候/n需要/v对/p整个/b图/gi做/v计算/gi才能/n得出/v需要/v的/ude1信息/gi，/w而且/c这种/r结构/gi不太好/v做/v分布式/gi的/ude1集群/gi方案/gi。/w3./nz /x多/a种/qnosql数据库/gi对比/gi4./nz  /x内存数据库/gi内存数据库/gi，/w顾名思义/vl就是/v将/d数据/gi放在/v内存/gi中/f直接/ad操作/gi的/ude1数据库/gi。/w相对于/nz磁盘/gi，/w内存/gi的/ude1数据/gi读写/gi速度/n要/v高出/v几个/nz数量级/n，/w将/d数据保存/gi在/p内存/gi中/f相比/vi从/p磁盘/gi上访问/nz能够/v极大地提高/i应用/gi的/ude1性能/gi。/w内存数据库/gi从/p范型/nz上/f可以/v分为/v关系型/b内存数据库/gi和/cc键型/nz内存数据库/gi。/w在/p实际/n应用/gi中/f内存数据库/gi主要/b是/vshi配合/voracle/gi或/cmysql/gi等/udeng大型/b关系数据库/gi使用/gi，/w关注/v性能/gi。/w作用/gi类/gi于/p缓存/gi，/w并不/d注重/v数据完整性/gi和/cc数据/gi一致性/gi。/w基于/p键/n型/k的/ude1内存数据库/gi比/p关系型/b更加/d易于/vd使用/gi，/w性能/gi和/cc可扩展性/gi更好/d，/w因此/c在/p应用/gi上/f比/p关系型/b的/ude1内存数据库/gi使用/gi更多/ad。/w名称/n开源/gi或/c商业/n主要/b特点/noracle timesten/nz不/d开源/gi，/w商业/n使用/gi付费/v1./nz /x符合/vrdbms/gi标准/gi的/ude1独立/a内存数据库/gi服务/gi。/w2./nz支持/vsql/gi访问/gi，/w支持/vodbcjdbc/nz。/w3./nz本身/rz不/d支持/v与非/coracle数据库/gi的/ude1互操作/gi。/w4./nz高可靠性/n，/w支持/v完整/a日志/gi，/w支持/v镜像/gi复制/gi功能/gi。/w5./nz目前/t不/d支持/v存储过程/gi和/cc触发器/gi。/w6./nz内存/gi结构/gi简单/a，/w并/cc没有/v数据库/gi缓冲区/gi、/w保存/gi池/ng或/c丢弃/v池/ng的/ude1概念/gi。/w7./nz目前/t支持/v散列/nz索引/gi和/cct/nz树/gi索引/gi，/w前者/rzv仅/d支持/v余键-查找/nz，/w速度/n非常/d快/a，/w执行/v过程/gi与/cc底层/n表/n的/ude1数量/n无关/v，/w具有/v较高/ad的/ude1读取/gi扩展性/n和/cc很好/ad的/ude1并发性/nz；/wt/nz树/gi索引/gi读取/gi效率/gi很高/d，/w但是/c，/w在/p繁重/a写/v操作/gi时/qt，/w并发性/nz较差/d。/wase/nz-/nzimdb/nz不/d开源/gi、/w商业/n使用/gi付费/v1./nz被/pbei整合/gi到/vsysbase ase/nz平台/gi中/f（/wtimesten/nz则/d为/p一个/mq独立/a的/ude1数据库/gi）/w。/w2./nz /x基于/p经典/giase/nz数据库/gi模板/gi创建/gi。/w3./nz /x采用/v复制技术/n实现/gi读取/gi其他/rzv数据源/gi的/ude1数据/gi。/w4./nz /x完全/ad支持/vase/nz本身/rz的/ude1sql/gi语法/gi、/w安全性/gi和/cc加密/gi。/wibm soliddb/nz不/d开源/gi、/w商业/n使用/gi付费/v1./nz可以/v提供/v超/v快/a的/ude1速度/n和/cc超高/b的/ude1可用性/gi，/w可以/v提供/v每秒/d数/n万/nz至/p数/n十万/nz事务/gi的/ude1吞吐率/nz，/w并且/c始终/d可以/v获得/v微秒/q级/q的/ude1响应/v时间/gi。/w2./nz抛弃/v大数据/gi块/q结构/gi，/w表行/nz和/cc索引/gi节点/gi独立/a地/ude2存储/gi在/p内存/gi中/f，/w可以/v直接/ad添加/gi索引/gi，/w而/cc不必/d重新/d组织/gi大块/n结构/gi。/w3./nz放弃/gi使用/gi大块/n索引/gi，/w以/p精简/v结构/gi、/w增加/v索引层/nz数/n、/w将/d索引/gi节点/gi最小化/nz，/w从而/c避免/v节点/gi内/f处理/vn的/ude1成本/n。/w4./nz使用/gi一种/nz称作/vtrie/gi（/w前缀/n树/gi）/w的/ude1索引/gi方式/n，/w更/d适合/v现代/ntc处理器/gi缓存/gi，/w通过/p有效/gi促进/v缓存/gi的/ude1使用/gi来/vf提高/v处理器/gi的/ude1效率/gi，/w从而/c实现/gi性能/gi的/ude1最大化/v。/w5./nz使用/gi一种/nz获得/v专利/gi的/ude1检查点/n方法/gi来/vf加快/v数据处理/gi，/w查询/gi事务/gi的/ude1延时/v通常/d是/vshi10/nz到/v20/nz微秒/q，/w更新/gi事务/gi的/ude1延时/v通常/d小于/v100/nz微秒/q。/wvoltdb/nz开源/gi版本/n免费/vd商业/n版本/n需/v付费/v1./nz基于/p存储过程/gi的/ude1事务/gi提交/gi方式/n：/w用户/gi通过/p写/v存储过程/gi完成/v应用程序/nz的/ude1逻辑/n，/w作为/p一个/mq先置条件/nz将/d存储过程/gi提交/gi到/vvoltdb/nz，/w运行/gi时/qt，/w用户程序/n调用/gi存储过程/gi完成/v事务/gi操作/gi，/w所有/b事务/gi的/ude1运行/gi逻辑/n是/vshi由/pvoltdb/nz在/p服务器/gi进程/gi中/f完成/v。/w2．/nz基于/pshared nothing/nz结构/gi的/ude1数据分布/n，/w整个/b数据库/gi的/ude1数据/gi分散/a到/v集群/gi的/ude1多/a台/q机器/gi上/f。/w3./nz基于/p哈希/nrf的/ude1数据分布/n策略/gi，/w好处/gi是/vshi数据/gi分散/a的/ude1均匀/a，/w没有/v动态数据/n调整/vn的/ude1烦恼/an；/w缺点/gi是/vshi新增/v的/ude1机器/gi需要/v停止/gi服务/gi后/f重新/d分布/vi数据/gi。/w哈希/nrf方法/gi打乱/v了/ule数据/gi的/ude1连续性/n，/w使得/vivoltdb/nz对于/p范围/n查询/gi的/ude1处理/vn能力/gi显著/ad下降/vi。/w4./nz其/rz事务/gi并发/gi控制/vn需要/v依赖于/v集群/gi内/f所有/b机器/gi的/ude1时间/gi一致/a，/w其/rz数据/gi分片/gi规模/gi是/vshi按照/p集群/gi核数/nz来/vf划分/v，/w当/p整个/b系统/gi压力/n比较/gi大/a时/qt，/w可以/v使/v事务/gi的/ude1时/qt延/vg有效/gi降低/v。/wextremedb/nz不/d开源/gi的/ude1商业/n数据库/gi，/w测试/gi版本/n在/p功能/gi上/f与/cc正式版/nz没有/v区别/gi，/w但是/c，/w对/p连接/gi次数/gi做/v了/ule限制/vn1./nz高性能/gi和/cc高效/b的/ude1存储/gi效率/gi，/w为了/p提高/v性能/gi方便/a程序/gi使用/gi，/wextremedb/nz中的/v数据/gi未/d做/v任何/rz压缩/gi。/w2./nz不仅/c开源/gi建立/gi完全/ad运行/gi在/p主/ag内存/gi的/ude1内存数据库/gi，/w更/d可以/v建立/gi磁盘/gi//nz内存/gi混合/vn介质/gi的/ude1数据库/gi。/w3./nz嵌入式数据库/nz：/w其/rz内核/gi以/p链接库/n的/ude1形式/gi包含/v在/p应用程序/nz之中/f，/w开销/n只有/c50/nzkb/nz-/nz130/nzkb/nz；/w避免/v了/ule进程/gi间/f的/ude1通信/gi，/w从而/c剔除/v了/ule进程/gi间通信/n的/ude1开销/n和/cc不确定性/gm；/w其/rz独特/a的/ude1数据/gi式/k方便/a程序/gi直接/ad使用/gi，/w剔除/v了/ule数据/gi复制/gi及/cc数据/gi翻译/gi的/ude1开销/n，/w缩短/v了/ule应用程序/nz的/ude1代码执行/n路径/gi。/w4./nz由/p应用/gi定制/n的/ude1api/gi，/w应用程序/nz对/pextremedb/nz数据库/gi的/ude1操作/gi接口/gi是/vshi根据/p应用/gi数据库设计/gi而/cc自动/d产生/v，/w剔除/v了/ule通用/gi接口/gi所/usuo必不可少/vl的/ude1动态内存/nz分配/gi。/w5./nz其/rz独特/a的/ude1体系结构/gi，/w保证/v了/ule数据/gi管理/gi的/ude1可预测性/n。/wsqlite/gi开源/gi，/w免费/vd使用/gi商业/n目的/gi的/ude1分发/v版/n免费/vd1./nz需要/v专业/n支持/v则/d需要/v购买/gi。/w2./nz /x在/p并发/gi（/w包括/v多/a进程/gi和/cc多线程/gi）/w读写/gi方面/n的/ude1性能/gi一直/d不/d太/d理想/n。/w数据库/gi可能会/nz被/pbei写/v操作/gi独占/v，/w从而/c导致/gi其它/rz读写操作/n阻塞/vn或/c出错/gi。/w3.3264/nz位/q主流/gi操作系统/gi均/d支持/v。/w4./nz不/d支持/vodbc/nz连接/gi，/w需/v通过/p第三方/nz驱动/gi支持/vjdbc/gi连接/gi。/w5./nz支持/vsqlh/nz2/nz开源/gi，/w免费/vd使用/gi商业/n目的/gi的/ude1分发/v版/n免费/vd1./nz需要/v专业/n支持/v则/d需要/v购买/gi。/w2./nz /x并发性/nz较好/d（/w在/p模拟器/n中/f有/vyou使用/gi，/w支持/v50/nz个/q并发/gi查询/gi没问题/nz）/w，/w数据量/n少/a的/ude1情况/n，/w查询/gi速度/n很好/ad。/w3.3264/nz位/q主流/gi操作系统/gi均/d支持/v，/w但/c需/vjava/gi平台/gi支持/v。/w4./nz支持/vodbcjdbc/nz5./nz支持/vsql/gi更多/ad参考/gi：/w