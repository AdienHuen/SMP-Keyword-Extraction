#最大优先队列/gi
最大优先队列/gi前言/gi堆排序/gi是/vshi一/nz种/q集/q插入排序/gi和/cc选择排序/gi的/ude1有点/d于/p一身/n的/ude1排序算法/gi，/w但是/c在/p后面/f能/v学习/gi到/v更加/d好/a的/ude1快速排序/gi算法/gi，/w性能/gi优于/v堆排序/gi。/w堆/gi这/rzv钟/n数据结构/gi还有/v许多其他/nz的/ude1用处/n，/w例如/v作为/p高效/b的/ude1优先队列/gi。/w优先队列/gi分为/v最大优先队列/gi和/cc最小/a优先队列/gi，/w今天/t学习/gi了/ule如何/ryv用/p最大/gm堆/gi来/vf实现/gi最大优先队列/gi。/w优先队列/gi是/vshi一种/nz用来/v维护/gi由/p一/nz组/n元素/gi构成/v的/ude1集合/gis/nz的/ude1数据结构/gi，/w其中/rz的/ude1每一个/nz元素/gi都/d有/vyou一个/mq相关/vn的/ude1值/n，/w称为/v关键字/gi。/w一个/mq最大优先队列/gi应该/v支持/v下面/f的/ude1四种/nz操作/gi：/wmaximum/nz(/nzs/nz)/nz：/w将/d集合/gis/nz中的/v最大/gm关键字/gi的/ude1元素/gi返回/v。/wextract/nz_/nzmax/nz(/nzs/nz)/nz：/w返回/v并/cc去掉/vs/nz中/f最大/gm的/ude1元素/gi。/wincrease/nz_/nzkey/gi(/nzs/nz,/nzx/nz,/nzk/nz)/nz：/w将/d集合/gis/nz中的/vx/nz元素/gi关键字/gi的/ude1值/n提升/gi至/pk/nz，/w假设/gik/nz不/d小于/v原/bx/nz的/ude1关键字/gi值/n。/winsert/gi(/nzs/nz,/nzx/nz)/nz：/w将/d元素/gix/nz插入/gi集合/gis/nz中/f。/w原理/gi最大优先队列/gi是/vshi建立/gi在/p最大/gm堆上/v的/ude1，/w在/p中/f已经/d学习/gi到/v了/ule关于/p最大/gm堆/gi的/ude1一/nz些/q知识/gi。/w在/p进行/vn上述/b的/ude1四种/nz操作前/l需要/v建立/gi一个/mq最大/gm堆/gi。/w对/p四种/nz操作/gi的/ude1解析/gi如下/vi：/wmaximum/nz(/nzs/nz)/nz /x:/w /x根据/p最大/gm堆/gi的/ude1性质/n，/w拥有/v最大/gm关键字/gi值/n的/ude1一项/nz永远/d在/p索引/gi为/p0/nz的/ude1地方/n，/w所以/c直接/ad返回/v即可/v。/wextract/nz_/nzmax/nz(/nzs/nz)/nz /x:/w /x将/d最大/gm项/q和/cc堆/gi中的/v最后/f一项/nz交换值/nz，/w并/cc返回/v最大/gm项/q，/w需要/v删除/gi最大/gm项/q，/w可以/v将/d整个/b堆/gi的/ude1大小/n缩小/v一项/nz，/w不用/d理会/v最后/f一/nz项/q(/nz最后/f一项/nz即/v交换/gi成/v了/ule最大/gm项/q)/nz，/w第一项/nz变化/gi后/f需要/v对/p最大/gm堆/gi进行/vn调整/vn，/w也/d就是/v上篇/b博客/gi中/f提到/v的/ude1向下/vf调整/vn。/wincrease/nz_/nzkey/gi(/nzs/nz,/nzx/nz,/nzk/nz)/nz /x：/w /x将/d元素/gix/nz的/ude1关键字值/nz提升/gi到/v了/ulek/nz之后/f，/wx/nz下面/f的/ude1子树/gm肯定/v是/vshi没有/v被/pbei破坏/v的/ude1，/w向上/vi不断/d和/ccx/nz的/ude1父/ng节点/gi比较/gi关键字/gi值/n，/w如果/ckey/gi(/nzx/nz)/nzkey/gi(/nzparent/nz(/nzx/nz)/nz)/nz，/w则/d交换值/nz。/w insert/nz(/nzs/nz,/nzkey/gi)/nz /x:/w /x在/p最大/gm堆/gi的/ude1最后/f一项/nz后面/f加上/v一项/nz。/w赋值/v为/pkey/gi，/w之后/f需要/v进行/vn的/ude1就是/v对/p整个/b堆/gi的/ude1调整/vn，/w即/v从/p最后/f一项/nz开始/v进行/vn上面/f的/ude1第三步/nz操作/gi（/wincrease/nz_/nzkey/gi(/nzs/nz,/nzx/nz,/nzk/nz)/nz）/w。/wc语言/gi实现/gi