#OSI/nz七层/nz模式/gi简单/a通俗/a理解/gi
这个/rz模型/gi学/v了/ule好/a多/a次/qv，/w总是/d记不住/v。/w今天/t又/d看/v了/ule一/nz遍/qv，/w发现/v用/p历史/n推演/v的/ude1角度/n去/vf看/v问题/gi会/v更/d有/vyou逻辑/n，/w更好/d记/v。/w本文/r不一定/nz严谨/a，/w可能/v有/vyou错漏/nz，/w主要/b是/vshi抛砖引玉/vl，/w帮助/v记性/n不好/a的/ude1人/n。/w总体/n来说/uls，/wosi模型/gi是从/v底层/n往/p上层/f发展/gi出来/vf的/ude1。/w这个/rz模型/gi推出/v的/ude1最/d开始/v，/w是/vshi是因为/c美国人/nz有/vyou两/nz台/q机器/gi之间/f进行/vn通信/gi的/ude1需求/gi。/w需求/gi1/nz：/w科学家/nnt要/v解决/v的/ude1第一个/gi问题/gi是/vshi，/w两/nz个/q硬件/gi之间/f怎么/ryv通信/gi。/w具体/a就是/v一/nz台/q发/v些/q比特流/nz，/w然后/c另一台/nz能/v收到/v。/w于是/cc，/w科学家/nnt发明/v了/ule物理层/gi：/w主要/b定义/gi物理/n设备/gi标准/gi，/w如/v网线/n的/ude1接口类型/nz、/w光纤/n的/ude1接口类型/nz、/w各种/rz传输/gi介质/gi的/ude1传输速率/nz等/udeng。/w它/rr的/ude1主要/b作用/gi是/vshi传输/gi比特流/nz(/nz就是/v由/p1/nz、/w0/nz转化/gi为/p电流/gi强弱/n来/vf进行/vn传输/gi，/w到达/v目的地/n后/f在/p转化/gi为/p1/nz、/w0/nz，/w也/d就是/v我们/rr常/d说/v的/ude1数模转换/gp与/cc模数转换/gi)/nz。/w这一层/nz的/ude1数据/gi叫做/v比特/q。/w需求/gi2/nz：/w现在/t通过/p电线/n我/rr能/v发/v数据/gi流/gi了/ule，/w但是/c，/w我/rr还/d希望/v通过/p无线电波/n，/w通过/p其它/rz介质/gi来/vf传输/gi。/w然后/c我/rr还要/d保证/v传输/gi过去/vf的/ude1比特流/nz是/vshi正确/a的/ude1，/w要/v有/vyou纠错/vn功能/gi。/w于是/cc，/w发明/v了/ule数据链/n路层/nz：/w定义/gi了/ule如何/ryv让/v式/k化/v数据/gi以/p进行/vn传输/gi，/w以及/cc如何/ryv让/v控制/vn对/p物理介质/gi的/ude1访问/gi。/w这一层/nz通常/d还/d提供/v错误/gi检测/gi和/cc纠正/v，/w以/p确保/v数据/gi的/ude1可靠/a传输/gi。/w需求/gi3/nz：/w现在/t我/rr能/v发/v正确/a的/ude1发/v比特流/nz数据/gi到/v另一台/nz计算机/gi了/ule，/w但是/c当/p我/rr发大量/nz数据/gi时候/n，/w可能/v需要/v好长时间/n，/w例如/v一个/mq视频/gi式/k的/ude1，/w网络/gi会/v中断/gi好/a多/a次/qv（/w事实上/bl，/w即使/c有/vyou了/ule物理层/gi和/cc数据链/n路/n层/gi，/w网络/gi还是/c经常/d中断/gi，/w只是/d中断/gi的/ude1时间/gi是/vshi毫秒/q级别/n的/ude1）/w。/w那么/c，/w我/rr还/d须要/v保证/v传输/gi大量文件/n时/qt的/ude1准确性/gi。/w于是/cc，/w我/rr要/v对/p发出/v去/vf的/ude1数据/gi进行/vn封装/gi。/w就/d像/v发/v快递/gi一样/uyy，/w一个/mq个/q地/ude2发/v。/w于是/cc，/w先/d发明/v了/ule传输层/nz（/w传输层/nz在/posi模型/gi中/f，/w是/vshi在/p网络层/gi上面/f）/w例如/vtcp/gi，/w是/vshi用于/v发大量/nz数据/gi的/ude1，/w我/rr发/v了/ule1/nz万/nz个/q包/v出去/vf，/w另一台/nz电脑/gi就要/d告诉/v我/rr是否/v接受/gi到/v了/ule1/nz万/nz个/q包/v，/w如果/c缺/v了/ule3/nz个/q包/v，/w就/d告诉/v我/rr是/vshi第/mq1001/nz，/w234/nz，/w8888/nz个/q包/v丢/v了/ule，/w那/rzv我/rr再/d发/v一次/nz。/w这样/rzv，/w就/d能/v保证/v对方/n把/pba这个/rz视频/gi完整/a接收/gi了/ule。/w例如/vudp/gi，/w是/vshi用于/v发送/gi少量/mq数据/gi的/ude1。/w我/rr发/v20/nz个/q包/v出去/vf，/w一般/ad不会/v丢包/nz，/w所以/c，/w我/rr不管/c你/rr收到/v多少/ry个/q。/w在/p多/a人/n互动/gi游戏/gi，/w也/d经常/d用/pudp/gi协议/gi，/w因为/c一般/ad都/d是/vshi简单/a的/ude1信息/gi，/w而且/c有/vyou广播/gi的/ude1需求/gi。/w如果/c用/ptcp/gi，/w效率/gi就/d很低/d，/w因为/c它/rr会/v不停/v地/ude2告诉/v主机/gi我/rr收到/v了/ule20/nz个/q包/v，/w或者/c我/rr收到/v了/ule18/nz个/q包/v，/w再/d发/v我/rr两/nz个/q！/w如果/c同时/c有/vyou1/nz万/nz台/q计算机/gi都/d这样/rzv做/v，/w那么/c用/ptcp/gi反而/d会/v降低/v效率/gi，/w还/d不如/v用/pudp/gi，/w主机/gi发出/v去/vf就算/d了/ule，/w丢/v几/d个/q包/v你/rr就/d卡一下/nz，/w算了/v，/w下次/t再/d发包/vi你/rr再/d更新/gi。/wtcp/gi协议/gi是/vshi会/v绑定/giip/gi和/cc端口/gi的/ude1协议/gi，/w下面/f会/v介绍/giip/gi协议/gi。/w需求/gi4/nz：/w传输层/nz只是/d解决/v了/ule打包/vi的/ude1问题/gi。/w但是/c如果/c我/rr有/vyou多台计算机/n，/w怎么/ryv找到/v我/rr要/v发/v的/ude1那/rzv台/q？/w或者/c，/wa/nz要/v给/pf/nz发/v信息/gi，/w中间/f要/v经过/pb/nz，/wc/nz，/wd/nz,/nze/nz，/w但是/c中间/f还有/v好/a多/a节点/gi如/vk/nz./nzj/nz./nzz/nz./nzy/nz。/w我/rr怎么/ryv选择/gi最佳/z路径/gi？/w这/rzv就是/v路由/gi要/v做/v的/ude1事/n。/w于是/cc，/w发明/v了/ule网络层/gi。/w即/v，/w那些/rz具有/v寻址/gi功能/gi的/ude1设备/gi所/usuo实现/gi的/ude1功能/gi。/w这一层/nz定义/gi的/ude1是/vshiip/gi地址/gi，/w通过/pip/gi地址/gi寻址/gi。/w所以/c产生/v了/uleip/gi协议/gi。/w需求/gi5/nz：/w现在/t我们/rr已经/d保证/v给/p正确/a的/ude1计算机/gi，/w发送/gi正确/a的/ude1封装/gi过后/v的/ude1信息/gi了/ule。/w但是/c用户/gi级别/n的/ude1体验/v好不好/l？/w难道/d我/rr每次/r都/d要/v调用/gitcp/gi去/vf打包/vi，/w然后/c调用/giip/gi协议/gi去找/v路由/gi，/w自己/rr去/vf发/v？/w当然/d不行/a，/w所以/c我们/rr要/v建立/gi一个/mq自动/d收发/vn包/v，/w自动/d寻址/gi的/ude1功能/gi。/w于是/cc，/w发明/v了/ule会话层/gi。/w会话层/gi的/ude1作用/gi就是/v建立/gi和/cc管理应用程序/n之间/f的/ude1通信/gi。/w需求/gi6/nz：/w现在/t我/rr能/v保证/v应用程序/nz自动/d收发/vn包/v和/cc寻址/gi了/ule。/w但是/c我/rr要用/vlinux/gi给/pwindow/nz发包/vi，/w两/nz个/q语法/gi不/d一致/a，/w就/d像/v安装包/nz一样/uyy，/wexe/nz是/vshi不能/v在/plinux/gi下/f用/p的/ude1，/wshell/gi在/pwindow/nz下/f也/d是/vshi不能/v直接/ad运行/gi的/ude1。/w于是/cc需要/v表示层/n（/wpresentation/nz）/w，/w帮/v我们/rr解决/v不同/a系统/gi之间/f的/ude1通信/gi语法/gi问题/gi。/w需求/gi7/nz：/wok/nz，/w现在/t所有/b必要条件/n都/d准备好/nz了/ule，/w我们/rr可以/v写/v个/qandroid/gi程序/gi，/wweb/gi程序/gi去/vf实现需求/n了/ule。/w补充/vn：/wsocket/gi：/w这/rzv不是/c一个/mq协议/gi，/w而是/c一个/mq通信模型/n。/w其实/d它/rr最初/d是/vshi伯克利/nrf加州/ns分校/nis软件/gi研究所/nis，/w简称/vbsd/nz发明/v的/ude1，/w主要/b用来/v一台/nz电脑/gi的/ude1两/nz个/q进程/gi间通信/n，/w然后/c把/pba它/rr用/p到/v了/ule两/nz台/q电脑/gi的/ude1进程/gi间通信/n。/w所以/c，/w可以/v把/pba它/rr简单理解/gi为/p进程/gi间通信/n，/w不是/c什么/ry高级/a的/ude1东西/n。/w主要/b做/v的/ude1事情/n不/d就是/v：/wa/nz发包/vi：/w发/v请求/gi包给/v某个/rz已经/d绑定/gi的/ude1端口/gi（/w所以/c我们/rr经常/d会/v访问/gi这样/rzv的/ude1地址/gi182.13.15.16/nz:/w1235/nz，/w1235/nz就是/v端口/gi）/w；/w收到/vb/nz的/ude1允许/v；/w然后/c正式/ad发送/gi；/w发送/gi完了/vi，/w告诉/vb/nz要/v断开/gi链接/gi；/w收到/v断开/gi允许/v，/w马上/d断开/gi，/w然后/c发送/gi已经/d断开/gi信息/gi给/pb/nz。/wb/nz收包/nz：/w绑定/gi端口/gi和/ccip/gi；/w然后/c在/p这个/rz端口/gi监听/gi；/w接收/gi到/va/nz的/ude1请求/gi，/w发/v允许/v给/pa/nz，/w并/cc做好/v接收/gi准备/v，/w主要/b就是/v清理/gi缓存/gi等待/gi接收/gi新/a数据/gi；/w然后/c正式/ad接收/gi；/w接受/gi到/v断开/gi请求/gi，/w允许/v断开/gi；/w确认/v断开/gi后/f，/w继续/v监听/gi其它/rz请求/gi。/w可见/c，/wsocket/gi其实/d就是/vi/nz//nzo/nz操作/gi。/wsocket/gi并/cc不仅/c限于/v网络通信/gi。/w在/p网络通信/gi中/f，/w它/rr涵盖/v了/ule网络层/gi、/w传输层/nz、/w会话层/gi、/w表示层/n、/w应用层/gi―/w―/w其实/d这/rzv都/d不/d需要/v记/v，/w因为/csocket/gi通信/gi时候/n用/p到/v了/uleip/gi和/cc端口/gi，/w仅/d这/rzv两/nz个/q就/d表明/v了/ule它/rr用/p到/v了/ule网络层/gi和/cc传输层/nz；/w而且/c它/rr无视/v多/a台/q电脑/gi通信/gi的/ude1系统/gi差别/n，/w所以/c它/rr涉及/v了/ule表示层/n；/w一般/adsocket/gi都/d是/vshi基于/p一个/mq应用程序/nz的/ude1，/w所以/c会/v涉及/v到/v会话层/gi和/cc应用层/gi。/w