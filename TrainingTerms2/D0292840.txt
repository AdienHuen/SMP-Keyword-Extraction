#edusoho/gi引发/v的/ude1DAO/nz层/gi，/wService/nz层/gi，/wController/nz层/gi、/wView/nz层/gi的/ude1思考/gi
edusoho/gi的/ude1结构/gi和/ccjava/gi的/ude1三大/j框架/gi比价/n相/d：/wdao/gi层/gi：/wdao/gi层/gi主要/b是/vshi做/v数据/gi持久/a层/gi的/ude1工作/gi，/w负责/v与/cc数据库/gi进行/vn联络/vn的/ude1一些/m任务/gi都/d封装/gi在/p此/rzs，/wdao/gi层/gi的/ude1设计/gi首先/d是/vshi设计/gidao/gi的/ude1接口/gi，/w然后/c在/pspring/gi的/ude1配置文件/gi中/f定义/gi此/rzs接口/gi的/ude1实现/gi类/gi，/w然后/c就/d可/v在/p模块/gi中/f调用/gi此/rzs接口/gi来/vf进行/vn数据业务/nz的/ude1处理/vn，/w而/cc不用/d关心/v此/rzs接口/gi的/ude1具体/a实现/gi类/gi是/vshi哪个/ry类/gi，/w显得/v结构/gi非常/d清晰/a，/wdao/gi层/gi的/ude1数据源/gi配置/gi，/w以及/cc有关/vn数据库/gi连接/gi的/ude1参数/gi都/d在/pspring/gi的/ude1配置文件/gi中/f进行/vn配置/gi。/w service/nz层/gi：/wservice/gi层/gi主要/b负责/v业务/gi模块/gi的/ude1逻辑/n应用/gi设计/gi。/w同样/d是/vshi首先/d设计/gi接口/gi，/w再/d设计/gi其/rz实现/gi的/ude1类/gi，/w接着/c再/dspring/gi的/ude1配置文件/gi中/f配置/gi其/rz实现/gi的/ude1关联/vn。/w这样/rzv我们/rr就/d可以/v在/p应用/gi中/f调用/giservice/gi接口/gi来/vf进行/vn业务/gi处理/vn。/wservice/gi层/gi的/ude1业务/gi实现/gi，/w具体/a要/v调用/gi到/v已/d定义/gi的/ude1dao/gi层/gi的/ude1接口/gi，/w封装/giservice/gi层/gi的/ude1业务逻辑/gi有利于/v通用/gi的/ude1业务逻辑/gi的/ude1独立性/gi和/cc重复/gi利用性/nz，/w程序/gi显得/v非常/d简洁/gi。/w controller/nz层/gi:/wcontroller/gi层/gi负责/v具体/a的/ude1业务/gi模块/gi流程/gi的/ude1控制/vn，/w在/p此/rzs层/gi里面/f要/v调用/giserice/nz层/gi的/ude1接口/gi来/vf控制/vn业务流程/nz，/w控制/vn的/ude1配置/gi也/d同样/d是/vshi在/pspring/gi的/ude1配置文件/gi里面/f进行/vn，/w针对/gi具体/a的/ude1业务流程/nz，/w会/v有/vyou不同/a的/ude1控制器/n，/w我们/rr具体/a的/ude1设计/gi过程/gi中/f可以/v将/d流程/gi进行/vn抽象/gi归纳/v，/w设计/gi出/vf可以/v重复/gi利用/v的/ude1子/ng单元/n流程/gi模块/gi，/w这样/rzv不仅/c使/v程序结构/n变得/vi清晰/a，/w也/d大大减少/i了/ule代码/gi量/n。/w view/nz层/gi此/rzs层/gi与/cc控制/vn层/gi结合/v比较/gi紧密/ad，/w需要/v二者/rzv结合/v起来/vf协同工/nz发/v。/wview/gi层/gi主要/b负责/v前台/njsp/gi页面/gi的/ude1表示/v，/w dao/nz层/gi，/wservice/gi层/gi这/rzv两/nz个/q层次/n都/d可以/v单独/d开发/gi，/w互相/d的/ude1耦合度/gp很低/d，/w完全/ad可以/v独立/a进行/vn，/w这样/rzv的/ude1一种/nz模式/gi在/p开发/gi大/a项目/gi的/ude1过程/gi中/f尤其/d有/vyou优势/gi，/wcontroller/gi，/wview/gi层/gi因为/c耦合度/gp比较/gi高/a，/w因而/c要/v结合/v在/p一起/s开发/gi，/w但是/c也/d可以/v看作/v一个/mq整体/n独立/a于/p前/f两/nz个/q层/gi进行/vn开发/gi。/w这样/rzv，/w在/p层/gi与/cc层/gi之前/f我们/rr只/d需要/v知道/v接口/gi的/ude1定义/gi，/w调用/gi接口/gi即可/v完成/v所/usuo需要/v的/ude1逻辑/n单元/n应用/gi，/w一切/rz显得/v非常/d清晰/a简单/a。/w dao/nz设计/gi的/ude1总体规划/nz需要/v和/cc设计/gi的/ude1表/n，/w和/cc实现/gi类/gi之间/f一一对应/gm。/w dao/nz层/gi所/usuo定义/gi的/ude1接口/gi里/f的/ude1方法/gi都/d大同小异/vl，/w这/rzv是/vshi由/p我们/rr在/pdao/gi层/gi对/p数据库/gi访问/gi的/ude1操作/gi来/vf决定/v的/ude1，/w对/p数据库/gi的/ude1操作/gi，/w我们/rr基本/a要用/v到/v的/ude1就是/v新增/v，/w更新/gi，/w删除/gi，/w查询/gi等/udeng方法/gi。/w因而/cdao/gi层/gi里面/f基本上/d都/d应该/v要/v涵盖/v这些/rz方法/gi对应/vi的/ude1操作/gi。/w除此之外/al，/w可以/v定义/gi一/nz些/q自定义/nz的/ude1特殊/a的/ude1对/p数据库/gi访问/gi的/ude1方法/gi。/w service/nz逻辑/n层/gi设计/gi service/nz层/gi是/vshi建立/gi在/pdao/gi层/gi之上/f的/ude1，/w建立/gi了/uledao/gi层/gi后/f才/d可以/v建立/giservice/gi层/gi，/w而/ccservice/gi层/gi又是/c在/pcontroller/gi层/gi之下/f的/ude1，/w因而/cservice/gi层/gi应该/v既/c调用/gidao/gi层/gi的/ude1接口/gi，/w又/d要/v提供/v接口/gi给/pcontroller/gi层/gi的/ude1类/gi来/vf进行/vn调用/gi，/w它/rr刚好/d处于/v一个/mq中间层/nz的/ude1位置/gi。/w每个/r模型/gi都/d有/vyou一个/mqservice/gi接口/gi，/w每个/r接口/gi分别/d封装/gi各自/rr的/ude1业务/gi处理方法/gi。/w /x在/pdao/gi层/gi定义/gi的/ude1一些/m方法/gi，/w在/pservice/gi层/gi并/cc没有/v使用/gi，/w那/rzv为什么/ryv还要/d在/pdao/gi层/gi进行/vn定义/gi呢/y？/w这/rzv是/vshi由/p我们/rr定义/gi的/ude1需求/gi逻辑/n所/usuo决定/v的/ude1。/wdao/gi层/gi的/ude1操作/gi经过/p抽象/gi后/f基本上/d都/d是/vshi通用/gi的/ude1，/w因而/c我们/rr在/p定义/gidao/gi层/gi的/ude1时候/n可以/v将/d相关/vn的/ude1方法/gi定义/gi完毕/vi，/w这样/rzv的/ude1好处/gi是/vshi在/p对/pservice/gi进行/vn扩展/gi的/ude1时候/n不/d需要/v再/d对/pdao/gi层/gi进行/vn修改/gi，/w提高/v了/ule程序/gi的/ude1可扩展性/gi。/w