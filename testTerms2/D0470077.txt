#设计/gi模式之-----抽象/nz工厂模式/gi
今天/t来/vf学习/gi抽象工厂模式/gi，/w所谓/v的/ude1抽象工厂/gi，/w其实/d和/cc工厂模式/gi有/vyou相/d之处/r，/w在/p介绍/gi抽象工厂/gi之前/f，/w先/d了解/v两/nz个/q概念/gi：/w产品族/nz和/cc产品/gi等级/n我/rr不要/d官方/gi的话/udh解释/gi，/w那样/rzv太/d晦涩/a难懂/a，/w我/rr先/d给/p大家/rr看/v一/nz张/q图/gi，/w看完/v之后/f我/rr想/v大家/rr能/v对/p这个/rz概念/gi有/vyou个/q了解/v。/w这/rzv是/vshi我/rr用/pvisio/nz画/v的/ude1，/w从/p这个/rz图/gi看/v，/w是不是/v很/d直观/a的/ude1看出/v他们/rr的/ude1定义/gi呢/y？/w由/p不同/a的/ude1产品/gi等级/n的/ude1产品/gi构成/v了/ule一个/mq产品组/n。/w他们/rr之间/f大概/d就是/v这个/rz关系/gi。/w然后/c回到/v抽象工厂模式/gi，/w我们/rr根据/p代码/gi，/w来看/u一/nz看/v是/vshi一个/mq怎样/ryv的/ude1步骤/gi，/w用/p文字/gi叙述/v半天/mq也/d不如/v直接/ad看/v代码/gi来/vf的/ude1快/a。/w我/rr还是/c用/p上边/f的/ude1例子/gi。/w先/d看/v包/v结构/gi：/w我们/rr首先/d要/v做/v的/ude1，/w就是/v新建/v一个/mq抽象类/gi（/w接口/gi也/d可以/v）/w因为/c这个/rz例子/gi有/vyou四个/nz实际/n的/ude1产品/gi，/w那么/c我们/rr新建/v四个类/nz，/w继承/gi上边/f的/ude1抽象类/gi（/w或/c实现/gi接口/gi）/w好/a了/ule，/w四个类/nz写完/v了/ule，/w之后/f我们/rr在/p建/v一个/mq抽象类/gi（/w接口/gi也/d可以/v）/w然后/c，/w根据/p产品/gi族/ng，/w来/vf将/d四个/nz实例/gi划分/v一下/m到/v现在/t，/w抽象工厂/gi已经/d写完/v了/ule，/w是不是/v很/d简单/a啊/y？/w最后/f来/vf个/q测试/gi类/gi最后/f结果/n：/w那么/c我们/rr回头/vi思考/gi一下/m，/w这个/rz模式/gi有/vyou没有/v缺点/gi呢/y？/w当然/d有/vyou，/w假设/gi一下/m，/w现在/t我们/rr新增/v了/ule一个/mq西瓜/n，/w怎么/ryv修改/gi呢/y？/w我们/rr肯定/v要/v修改/gi之前/f的/ude1productcreater/nz抽象工厂/gi，/w可是/c这样一来/dl，/w就/d违反/v了/ule开闭/nz原则/gi。/w再/d来看/u，/w我们/rr新增/v一个/mq产品/gi族/ng，/w广东/ns，/w这个/rz时候/n，/w我们/rr不必/d修改/gi任何/rz代码/gi，/w只/d需要/v增加/v广东/ns的/ude1相关/vn实现/gi即可/v，/w这个/rz方面/n，/w又/d很好/ad的/ude1实现/gi了/ule开闭/nz原则/gi。/w所以/c我们/rr在/p选择/gi这个/rz模式/gi的/ude1时候/n，/w一定/b要/v有/vyou一个/mq明确/a的/ude1，/w长远/a的/ude1考虑/v，/w如果/c我们/rr要/v频繁/a增加/v产品/gi等级/n，/w建议/gi还是/c不要/d使用/gi这个/rz模式/gi。/w反之亦然/vl。/w