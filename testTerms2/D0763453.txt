#N/nz皇后/nnd问题/gi与/cc回溯法/gi
八皇后/gi问题/gi，/w快/a三个月/nz了/ule，/w原来/d不会/v写/v现在/t还是/c不会/v，/w感觉/gi递归/gi还是/c不/d理解/gi，/w每次/r看/v别人/rr的/ude1代码/gi都/d要/v想/v一下/m，/w更/d不/d讲/v自己/rr写/v了/ule这里/rzs明显/a用/p到/v了/ule回溯法/gi，/w这种/r递归/gi我/rr看看/v是/vshi没问题/nz的/ude1，/w可以/v说/v比较简单/l，/w但/c自己/rr写就/v难/a了/ule回溯法/gi要/v注意/v一个/mq问题/gi就是/v：/w如果/c在/p回溯法/gi中用/a了/ule辅助/vn的/ude1全局变量/gi，/w则/d一定/b要/v把/pba它们/rr恢复原状/nz，/w特别/d的/ude1，/w如果/c函数/gi有/vyou多/a个/q出口/vn，/w每个/r出口/vn都/d要/v及时/ad恢复/gi被/pbei修改/gi的/ude1这/rzv也/d是/vshi比较/gi好/a理解/gi的/ude1，/w如果/c递归/gi不/d成功/a返回/v的/ude1时候/n原本/d的/ude1要/v恢复/gi，/w否则/c会/v造成/v干扰/gi，/w就/d像/v这个/rzn/nz皇后/nnd问题/gi，/w如果/ci/nz=/nz0/nz搜索/gi完了/vi，/w那么/c递归/gi回来/v时/qt要/v将/d原本/d修改/gi的/ude1全/a改回来/i代码/gi如下/vi：/w