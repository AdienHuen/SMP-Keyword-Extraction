#Redis/gi学习笔记/gi（/w五）--排序/nz
1/nz、/wsort/gi命令/gi  sort/nz命令/gi可以/v对/p列表/vi类型/gi、/w集合/gi类型/gi和/cc有序/gi集合/gi类型/gi键/n进行/vn排序/gi，/w并且/c可以/v完成/v与/cc关系数据库/gi中的/v连接/gi查询/gi类似/a的/ude1任务/gi。/w2/nz、/wby/nz参数/gi  by/nz参数/gi的/ude1语法/gi为/pby /nz参考/gi键/n，/w其中/rz参考/gi键/n可以/v是/vshi字符串/gi类型键/nz或者/c是/vshi散列/nz类型/gi键/n的/ude1某个/rz字段/gi（/w表示/v为/p键名-字/nz段名/nz）/w./nz。/w如果/c提供/v了/uleby/nz参数/gi，/wsort/gi命令/gi将/d不再/d依据/n元素/gi自身/rr的/ude1值/n进行/vn排序/gi，/w而是/c对/p每个/r元素/gi使用/gi元素/gi的/ude1值/n替换/v参考/gi键/n中的/v第一个/gi“/w*/nz”/w并/cc获取/gi其/rz值/n，/w然后/c一句/nz该/rz值/n对/p元素/gi排序/gi。/w3/nz、/wget/gi参数/gi  get/nz参数/gi不/d影响/gi排序/gi，/w它/rr的/ude1作用/gi是/vshi使/vsort/gi命令/gi的/ude1返回/v结果/n不再/d是/vshi元素/gi自身/rr的/ude1值/n，/w而是/cget/gi参数/gi中/f指定/v的/ude1键值/n。/wget/gi参数/gi的/ude1规则/gi和/ccby/nz参数/gi一样/uyy，/wget/gi参数/gi也/d支持/v字符串/gi类型/gi和/cc散列/nz类型/gi的/ude1键/n，/w并/cc适应/v“/w*/nz”/w作为/p占位/v符/v。/w4/nz、/wstore/gi参数/gi默认/v情况下/nzsort/gi命令/gi直接/ad返回/v排序/gi结果/n，/w如果/c希望/v保存/gi排序/gi结果/n，/w则/d可以/v通过/pstore/gi参数/gi实现/gi。/w5/nz、/w性能优化/gisort/gi命令/gi是/vshiredis/gi中/f最/d强大/a的/ude1最/d复杂/a的/ude1命令/gi之一/rz，/w如果/c使用/gi不好/a很容易/nz成为/v性能/gi瓶颈/gi。/wsort/gi命令/gi的/ude1时间复杂度/gi是/vshio/nz(/nzn/nz+/nzmlog/nz(/nzm/nz)/nz)/nz，/w其中/rzn/nz表示/v要/v排序/gi的/ude1列表/vi（/w集合/gi、/w有序/gi集合/gi）/w中的/v元素/gi个数/n，/wm/nz表示/v要/v返回/v的/ude1元素/gi个数/n。/w当/pn/nz较大/d的/ude1时候/nsort/gi命令/gi的/ude1性能/gi相对/d较低/d，/w并且/credis/gi在/p排序/gi前/f会/v建立/gi一个/mq长度/gi为/pn/nz的/ude1容器/gi来/vf存储/gi待/vi排序/gi的/ude1元素/gi，/w虽然/c是/vshi一个/mq临时/gi过程/gi，/w但/c如果/c同时/c进行/vn较多/d的/ude1大数据量/gi排序/gi操作/gi则/d会/v严重影响/v性能/gi。/w尽可能减少/i待/vi排序/gi键/n中的/v元素/gi的/ude1数量/n。/w使用/gilimit/gi参数/gi只/d获取/gi需要/v的/ude1数据/gi。/w如果/c要/v排序/gi的/ude1数据量/n较大/d，/w尽可能/d使用/gistore/gi参数/gi将/d结果/n缓存/gi。/w