#用/pPython/gi实现/gi基本/a排序算法/gi03/nz―/w―/w插入排序/gi
一/nz、/w插入排序/gi的/ude1思路/gi回顾/v前面/f提到/v过/uguo的/ude1冒泡排序/gi、/w选择排序/gi，/w我们/rr发现/v这/rzv两/nz种/q算法/gi的/ude1思路/gi还是/c比较/gi直观/a的/ude1。/w然而/c现在/t即将/d隆重推出/nz的/ude1插入排序/gi算法/gi则/d显得/v有些/rz抽象/gi了/ule。/w总体而言/c，/w插入排序/gi是/vshi把/pba待/vi排序/gi的/ude1元素/gi全体/n看成/v由/p两/nz部分/n组成/gi―/w―/w已/d排序/gi完成/v的/ude1部分/n（/w有/vyou序子串/nz）/w和/cc尚未/d排序/gi的/ude1部分/n（/w无序子串/nz）/w。/w（/w以/p从小到大/nz排序/gi为/p例/n，/w假设/gi共计/vn/nz个/q元素/gi）/w：/wstep/nz1./nz /x在/p一/nz开始/v，/w有序/gi子串/gi只/d包含/v一个/mq元素/gi，/w即/v第一个/gi元素/gi（/wpython/gi中/f记为/v[/nz0/nz]/nz）/w。/wstep/nz2.0/nz /x从/p无序子串/nz中/f取出/v第一个/gi元素/gi（/w这里/rzs为/p[/nz1/nz]/nz）/w，/w与/cc有/vyou序子串/nz中的/v元素/gi作/v比较/gi。/wstep/nz2.1/nz /x从/p有序/gi子串/gi中/f最后/f一个/mq元素/gi开始/v比较/gi，/w若/c新/a取出/v的/ude1元素/gi大于/v有/vyou序子串/nz的/ude1当前/t数/n，/w则/d新/a取出/v的/ude1元素/gi放在/v当前/t位置/gi即可/v，/w有/vyou序子串/nz的/ude1长度/gi1/nz，/w无序子串/nz的/ude1长度-/nz1/nzstep/nz2.2/nz /x若/c新/a取出/v的/ude1元素/gi小于/v有/vyou序子串/nz的/ude1当前/t数/n，/w则/d有/vyou序子/nz串/q长度/gi1/nz，/w并且/c将/d有/vyou序子串/nz当前/t数/n后/f移/v一/nz位/q（/w同时/c也/d就是/v把/pba当前/t数/n的/ude1原来/d位置/gi让/v出来/vf了/ule）/w，/w取出/v数/n继续/v与/cc有序/gi子串/gi前/f一位/nz的/ude1元素/gi进行/vn比较/gi。/wstep/nz2.3/nz /x重复/gi2.1/nz和/cc2.2/nz，/w直到/v将/d新取/nz的/ude1元素/gi放到/v合适/a的/ude1位置/gi。/w若/c有/vyou序子串/nz所有/b元素/gi均/d大于/v新/a取数/nz，/w则/d将/d其/rz放在/v有序/gi子串/gi的/ude1最/d前面/f。/w完成/vstep/nz2/nz之后/f，/w有/vyou序子串/nz扩充/v一个数/nz，/w但/c仍/d保持/v有序/gi。/wstep/nz3/nz  /x重复/gistep/nz2/nz，/w直到/v无序子串/nz为/p空二/nz、/w程序/gi实例/gi用/ppython/gi实现/gi以上/f思路/gi非常/d直观/a和/cc优雅/a，/w下面/f结合/v例程/gi中的/v注释/gi进一步/d分析/gi插入排序/gi算法/gi