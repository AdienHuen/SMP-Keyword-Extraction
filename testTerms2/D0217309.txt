#Android/gi中的/v软件/gi安全/gi和/cc逆向/b分析/gi[/nz二/nz]/nz―/wapk/nz反/vi破解/gi技术/gi与/cc安全/gi保护/gi机制/gi
　　/nz在/pandroid/gi应用开发/gi中/f，/w当/p我们/rr开发/gi完/vi软件/gi之后/f，/w我们/rr不/d希望/v别人/rr能够/v反编译/nz破解/gi我们/rr的/ude1应用程序/nz，/w不能/v修改/gi我们/rr的/ude1代码/gi逻辑/n。/w实际上/d，/w在/p应用程序/nz的/ude1安全/gi机制/gi考虑/v中/f，/w我们/rr希望/v自己/rr的/ude1应用程序/nz安全性/gi高/a，/w通过/p各种/rz加密/gi操作/gi等/udeng来/vf增大/v竞争对手/nz的/ude1反编译/nz破解/gi成本/n。/w设想/vn，/w竞争对手/nz开发/gi一个/mq同样/d的/ude1应用程序/nz需要/v10/nz天/qt，/w而/cc破解/gi我们/rr的/ude1软件程序/nz需要/v100/nz天/qt，/w那么/c势必会/n打消/v黑客/gi程序员/gi破解/gi我们/rr应用程序/nz的/ude1念头/n。/w如何/ryv增加/v对手/n的/ude1破解/gi成本/n，/w就/d需要/v考验/vn我们/rr应用程序/nz的/ude1安全性/gi有/vyou多/a高/a，/w加密技术/nz有/vyou多/a强/a。/w一个/mq优秀/gi的/ude1应用程序/nz，/w不仅/c能/v为/p用户/gi带来/v利益/n，/w同时/c也/d能/v保护/gi自己/rr的/ude1核心技术/nz。/w　　/nz本文/r主要/b从/p以下/f几个/nz方面/n简单/a介绍/gi下/fandroid/gi应用程序/nz的/ude1保护/gi机制/gi。/w一/nz、/w不让/v程序安装/n到/v模拟器/n上/f　　/nz在/p上/f一篇/nz文章/gi中/f /x里面/f介绍/gi了/ule的/ude1大多/d数/n操作/gi是/vshiandroid/gi里/f的/ude1静态/gi反编译/nz破解/giapk/nz文件/gi。/w有些/rz应用程序/nz作/v了/ule一/nz些/q混淆/v，/w从/psdk/nz2.3/nz开始/v我们/rr可以/v看到/v在/pandroid/gi-/nzsdk/nz-/nzwindows/gi\/nztools/nz\/nz下面/f多/a了/ule一个/mqproguard/nz文件夹/n，/wproguard/nz是/vshi一个/mqjava/gi代码/gi混淆/v的/ude1工具/gi，/w具体/a介绍/gi参考/gi，/w使/v的/ude1代码/gi逻辑/n比较复杂/l，/w此时/r我们/rr如果/c还要/d静态/gi反编译/nz破解/gi的话/udh，/w就/d需要/v插入/gi一/nz些/qsmali/nz代码/gi动态/gi的/ude1去/vf调试/gi观察/giapk/nz的/ude1逻辑/n。/w那么/c如何/ryv保护/gi自己/rr的/ude1应用程序/nz免受/v反编译/nz破解/gi？/w我们/rr需要/v阻止/v别的/rzv程序员/gi反编译/nz，/w动态/gi调试/gi我/rr的/ude1应用/gi。/w换句话说/c，/w就是/v需要/v阻止/v黑客/gi程序员/gi安装/gi我/rr的/ude1应用/gi到/v模拟器/n上/f。/w /x　　/nz一种/nz方式/n是/vshi不让/v自己/rr的/ude1应用程序/nz运行/gi在/p模拟器/n上/f，/w当/p应用程序/nz发现自己/l安装/gi到/v模拟器/n上/f的/ude1时候/n就/d会/v自杀/vi。/w　　/nz上述/b应用程序/nz部署/gi到/v真/a机上/s是/vshi可以/v运行/gi的/ude1，/w /x但是/c在/p模拟器/n上/f是/vshi打不开/v的/ude1，/w这样/rzv就/d防止/gi了/ule黑客/gi程序员/gi动态/gi调试/gi我们/rr的/ude1应用/gi程序。二/nz、/w检测/gi应用程序/nz的/ude1完整性/gi　/nz　/nz第二种/nz保护/gi应用程序/nz的/ude1安全/gi机制/gi是/vshi检测/gi应用程序/nz的/ude1完整性/gi，/w我们/rr可以/v用/p，/w也/d可以/v利用/v数字签名/gi的/ude1方式/n来/vf检测/gi应用程序/nz的/ude1完整性/gi。/w我们/rr知道/v当/p一个/mqapk/nz文件/gi被/pbei反编译/nz破解/gi、/w修改/gi完/vi代码/gi逻辑/n之后/f，/w要/v使用/gijarsigner/nz工具/gi来/vf重新/d给/papk/nz签名/gi，/w才能/n运行/gi修改/gi后/f的/ude1apk/nz文件/gi。/w一个/mq应用程序/nz的/ude1签名/gi，/w是/vshi识别/gi一个/mq开发者/gi的/ude1唯一/b标识/n，/w如果/c一个/mq应用程序/nz被/pbei别人/rr反编译/nz，/w那么/c这个/rz应用程序/nz的/ude1签名/gi肯定/v会/v改变/v。/w当/p发现/v程序/gi的/ude1签名/gi改变/v时/qt，/w我们/rr使/v之/uzhi自杀/vi就/d可以/v避免/v程序/gi带来/v损失/n。/w下面/f我们/rr来/vf介绍/gi下/f数字签名/gi的/ude1方式/n检测/gi应用程序/nz的/ude1完整性/gi。/w　　/nz上述/b简单/a实例/gi代码/gi获取/gi到/v的/ude1应用程序/nz的/ude1数字签名/gi为/p，/w /x　　/nz /x　　/nz任何/rz一个/mq对/p原/bapk/nz的/ude1操作/gi都会/n修改/gi原/bapk/nz的/ude1数字签名/gi，/w为了/p在/p程序/gi中/f判断/gi方便/a，/w我们/rr取/v数字签名/gi的/ude1md/nz5/nz哈希值/nz来/vf判断/gi。/w /x　　/nz　　/nz /x　　/nz我们/rr在/p应用程序/nz运行/gi时/qt，/w判断/gi当前/t的/ude1数字签名/gi的/ude1md/nz5/nz哈希值/nz是否/v等于/v上述/b图片/gi中的/v哈希值/nz，/w如果/c等于/v，/w合法/a运行/gi，/w如果/c不/d等于/v，/w就/d能够/v证明/vapk/nz文件/gi被/pbei反编译/nz破解/gi过/uguo，/w这个/rz时候/n我们/rr1.5/nzs/nz后/f自杀/vi程序/gi。/w /x　/nz　/nz　/nz　/nz具体/a的/ude1反编译/nz过程/gi可以/v参见/v上/f一篇/nz文章/gi  /x，/w当/p反编译/nzapk/nz，/w修改/gismali/nz代码/gi，/w重新/d给/papk/nz签名/gi后/f，/w部署/gi到/v模拟器/n上/f运行/gi，/w发现/v1.5/nzs/nz后/f程序/gi自杀/vi。/w /x　　/nz检测/gi包名/nz，/w版本名/nz和/cc版本号/gi，/w然后/c做/v判断/gi，/w与/cc检测/gi数字签名/gi方法/gi大同小异/vl。/w有兴趣/v的/ude1可以/v自己/rr研究/gi研究/gi。/w三/nz、/w动态/gi字/n节码/nz技术/gi　　/nz应用程序/nz的/ude1运行/gi字/n节码/nz不在/v本地/gi，/w而是/c在/p网络/gi端/v，/w就是说/c我们/rr的/ude1应用程序/nz的/ude1关键性/n核心/n代码/gi不要/d放在/v本地/gi，/w应该/v放在/v网络/gi服务器端/gi上/f。/w而/cc在/p网络/gi端的/z字/n节码/nz如何/ryv获取/gi呢/y？/w我们/rr通过/purlclassloader/nz从/p服务器/gi上/f把/pba字/n节码/nz下载/gi到/v本地/gi，/w然后/c编译/gi运行/gi。/w这种/r动态/gi从/p网络/gi获取/gi字/n节码/nz的/ude1技术/gi可以/v防止/gi黑客/gi程序员/gi本地/gi静态/gi的/ude1反编译/nz我们/rr的/ude1应用/gi程序。四/nz、/wzip/nz包/v加密五/nz、/w花/n指令/gi加壳/nz技术/gi　　/nz开发/gi程序员/gi先/d做/v一个/mqso/nz的/ude1壳/ng，/w当做/v应用程序/nz的/ude1运行/gi环境/n，/w壳/ng里面/f运行/gi着/uzhe我们/rr的/ude1程序代码/nz，/w相当于/v在/pjava/gi虚拟机/gi的/ude1上层/f加/v了/ule一个/mq代码/gi监视器/n。/w也/d可以/v说/v是/vshi在/p加密/gi后/f的/ude1虚拟机/gi里/f运行/gi我们/rr的/ude1应用程序/nz，/w增加/v了/ule安全性/gi。/w六/nz、/w参考/gi引用/gi未完待续/nz。。。/w