#【/w软工/gi7/nz】/w软件工程/gi中的/v文档/gi
导读/vn：/w在/p学习/gic/nz//nzs/nz部分/n，/w结构化/n的/ude1程序开发/gi中/f，/w我们/rr基本上/d是/vshi以/p文档/gi驱动/gi的/ude1形式/gi在/p做/v开发/gi。/w那么/c，/w在/p软件工程/gi中/f，/w文档/gi有着/v什么样/ryv的/ude1意义/n呢/y？/w文档/gi是从/v哪里/rys来/vf的/ude1，/w为什么/ryv要/v有/vyou文档/gi呢/y？/w（/w每次/r给/p徒弟/n验收/vn，/w就/d陪着/v徒弟/n，/w这/rzv样子/n乎/y也/d挺好/nz）/w一/nz、/w文档/gi从/p哪里/rys来/vf在/p最/d开始/v的/ude1软件开发/nz过程/gi中/f，/w事实上/bl是/vshi没有/v文档/gi这/rzv一/nz概念/gi的/ude1。/w那么/c文档/gi究竟/d是从/v哪里/rys来/vf的/ude1？/w从/p广义/n上/f说/v，/w文档/gi的/ude1产生/v，/w是/vshi伴随/v着/uzhe软件工程/gi而来/c /x的/ude1。/w在/p初期/f的/ude1软件开发/nz过程/gi中/f，/w对/p程序/gi的/ude1设计/gi和/cc管理/gi还/d不足/an，/w所以/c极大/a程度/n上/f导致/gi了/ule后续/vn的/ude1软件/gi危机/n。/w文档/gi作为/p一个/mq交流/gi和/cc设计/gi的/ude1结晶/n，/w在/p文档/gi驱动/gi的/ude1程序开发/gi中/f，/w应用/gi的/ude1最为/d显著/ad。/w二/nz、/w文档/gi是/vshi什么/ry软件/gi文档/gi（/w源代码/gi文档/gi）/w：/w是/vshi指/v与/cc软件系统/gi及其/cc软件工程/gi过程/gi有/vyou关联/vn的/ude1文本/gi实体/n。/w包括/v开发/gi过程/gi中/f填写/v的/ude1各种/rz图表/gi，/w以及/cc编制/vn的/ude1技术/gi资料/gi和/cc技术/gi管理/gi资料/gi。/w附/v：/w软件工程/gi文档/gi注/v：/w此/rzs文档/gi分类/gi是/vshi以/p文档/gi的/ude1产生/v和/cc使用/gi范围/n作为/p依据三/nz、/w文档/gi的/ude1作用/gi1/nz，/w工具/gi：/w文档/gi可以/v作为/p整个/b软件/gi生命周期/nz中的/v一个/mq重要/a的/ude1交通工具/nz，/w并/cc将/d交通/n结果/n记录下来/l。/w2/nz，/w检验/gi点/gi：/w利于/v管理者/nnt对/p开发/gi过程/gi进行/vn评估/gi（/w进度/gi、/w质量/gi等/udeng）/w。/w3/nz，/w组成/gi部分/n：/w软件/gi=/nz程序/gi数据/gi文档/gi，/w文档/gi是/vshi整个/b软件开发/nz的/ude1一/nz部分/n，/w为/p维护/gi和/cc扩充/v提供/v依据/n。/w四/nz、/w文档/gi的/ude1参与者/gi参与/gi文档/gi的/ude1，/w有/vyou编写者/nnd和/cc阅读者/n。/w事实上/bl，/w软件工程/gi发展/gi到/v现阶段/t，/w对于/p具体/a的/ude1每个/r文档/gi的/ude1编写者/nnd和/cc阅读者/n已经/d没有/v具体/a的/ude1界限/n了/ule。/w从/p开发/gi文档/gi、/w用户文档/gi和/cc管理/gi文档/gi这三类/l的/ude1划分/v来看/u，/w那么/c乎/y是/vshi管理/gi文档/gi应该/v由/p项目/gi组长/nnt或者/c经理/gi来/vf写/v，/w可是/c事实上/bl，/w一个/mq软件开发/nz的/ude1文档/gi，/w是/vshi可以/v全部/m交付给/vn第三方/nz或者/c是/vshi机器/gi实施/gi编写/gi的/ude1。/w而/cc对于/p文档/gi的/ude1阅读者/n，/w这/rzv也/d没有/v一定/b的/ude1界限/n，/w比如说/vl用户手册/nz，/w难道/d就/d仅仅只是/i用户/gi才/d可以/v阅读/gi吗/y？/w文档/gi的/ude1参与者/gi，/w没有/v绝对/d的/ude1划分/v定义/gi，/w最多/ad不过/c是/vshi一个/mq主要/b对象/gi而已/y。/w五/nz、/w缺点/gi和/cc补救/vn缺点/gi：/w文档/gi在/p软件工程/gi中的/v地位/n是/vshi不可/v被/pbei颠覆/v的/ude1，/w但是/c，/w一份/nz精美/a的/ude1文档/gi将/d是/vshi一项/nz巨大/a的/ude1工程/n。/w它/rr的/ude1迭代/gi工作/gi是/vshi非常/d繁重/a的/ude1，/w而/cc文档/gi的/ude1形成/v是/vshi建立/gi在/p需求/gi的/ude1基础/gi之上/f，/w一旦/d需求/gi不/d明确/a或者/c需要/v变动/vn，/w那么/c文档/gi必须/d得/ude3同步/gi变动/vn。/w在/p这/rzv一/nz过程/gi中/f，/w开发人员/n不得不/d花费/v巨大/a的/ude1精力/n去/vf进行/vn文档/gi的/ude1编写/gi，/w这项/r工作/gi将/d非常/d不利于/v需求/gi不/d明确/a，/w复杂/a的/ude1系统开发/gi。/w补救/vn：/w以/p需求/gi为/p驱动/gi，/w原型/gi为/p辅助/vn，/w先/d进行/vn项目/gi的/ude1实施/gi，/w在/p整个/b项目/gi完成/v之后/f，/w对于/p系统/gi文档/gi进行/vn补充/vn。/w六/nz、/w感受/gi总结一个/nz正常/a的/ude1逻辑乎/nz该是/r先写/nz文档/gi，/w再/d编码/gi实现/gi。/w即使/c是/vshi在/p需求/gi变动/vn的/ude1情况下/nz，/w也/d应该/v是/vshi在/p文档/gi本身/rz上/f进行/vn迭代/gi更替/vn。/w开发/gi和/cc文档/gi同步进行/j，/w但是/c在/p现实/n开发/gi中/f，/w文档/gi的/ude1编写/gi任务/gi往往/d比/p开发/gi任务/gi更为/d的/ude1繁杂/a。/w于是/cc类/gi于/pxp/nz的/ude1开发模式/gi衍生/vn，/w具体情况/nz具体分析/nz！/w什么/ry时候/n写/v文档/gi，/w或许/d仅仅只是/i文档/gi迭代/gi的/ude1颗粒度/nz不同/a罢了/y。/w但是/c，/w保证/v文档/gi的/ude1版本/n和/cc系统/gi版本/n维持/v一致/a，/w我/rr认为/v这/rzv也/d是/vshi一种/nz最/d基本/a的/ude1要求/n！/w