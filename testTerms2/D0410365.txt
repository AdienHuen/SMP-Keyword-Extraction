#Android/gi设计模式/nz之/uzhi建造者模式/gibuilder/gi
今天/t小/a编/v来说/uls一/nz下/fandroid/gi中的/v一种/nz设计/gi模式--建造者/nz模式/gibuilder/gi绪论/n：/w   /x那么/c对于/pandroid/gi初级/b来说/uls，/wbuilder/gi设计模式/nz可能/v在/p我们/rr开发/gi中用/a过/uguo的/ude1很少/ad，/w但是/c我们/rr可能/v见过/v，/w我们/rr经常/d用/p的/ude1alterdialog/nz./nzbuilder/gi就是/v一种/nz建造者模式/gi。/w那么/c到底/d什么/ry是/vshi建造者模式/gi呢/y？/w下面/f我们/rr来/vf看看/v它/rr的/ude1标准/gi定义/gi：/w定义/gi：/w将/d一个/mq复杂/a对象/gi的/ude1构建/gi与/cc它/rr的/ude1表示/v分离/vi，/w使得/vi同样/d的/ude1构建/gi过程/gi可以/v创建/gi不同/a的/ude1表示/v，/w同时/c可以/v分步/vd的/ude1构造/n每/rz一/nz部分/n。/w看起来/v比较/gi抽象/gi，/w也/d不/d知道/v具体/a是/vshi什么/ry意思/n？/w下面/f我/rr举一个/nz例子/gi，/w通过/p代码/gi来/vf看看/v什么/ry是/vshi建造者模式/gi举例/gi：/w我们/rr定义/gi了/ule一个/mqimagebean/nz实体/n，/w里面/f包含/vid/nz、/wpath/nz、/wsize/nz、/wtype/nz属性/gi，/w其中/rz还/d包含/v空/ng的/ude1构造方法/gi和/cc一个/mq包含/v参数/gi的/ude1构造/n。/w这样/rzv我们/rr在/p声明/gi这个/rz实体/n的/ude1时候/n可以/v给/p这个/rz实体/n赋/ng。/wimagebean ib /nz=/nz new imagebean/nz(/nz1/nz,/nzxxxx/nz,/nz54321/nz,/nzjpg/gi)/nz;/nz实体/n的/ude1参数/gi个数/n少/a点/gi还好/v，/w我们/rr能/v记住/v构造/n的/ude1参数/gi，/w如果/c这个/rz实体/n有/vyoun/nz个/q参数/gi呢/y？/w我们/rr怎样/ryv知道/v参数/gi的/ude1顺序/gi呢/y？/w代码/gi的/ude1可读性/n并不/d高/a，/w如果/c不是/c你/rr自己/rr写/v的/ude1，/w别人/rr根本/a看不懂/v，/w即便/c是/vshi自己/rr写/v的/ude1，/w时间/gi长/a了/ule的话/udh恐怕/d我们/rr也/d都/d忘了/v。/w那么/cbuilder/gi模式/gi就/d可以/v解决/v这种/r情况/n。/w我们/rr可以/v给/pimagebean/nz建立/gi一个/mqbuilder/gi：/w可以/v看到/vimagebean/nz的/ude1构造/n参数/gi改成/v了/ule这个/rzbuilder/gi，/w然后/c定义/gi了/ule一个/mq和/ccimagebean/nz一样/uyy的/ude1builder/gi，/w返回/v都/d是/vshibuilder/gi对象/gi。/w这/rzv就是/v定义/gi里面/f说/v的/ude1构造/n和/cc表示/v分离/vi，/w构造/n是/vshiimagebean/nz中/f来/vf构造/n，/w而/cc显示/gi则/d在/pbuilder/gi中/f显示/gi。/w也/d就是/v分布/vi构造/n每/rz一/nz部分/n。/w以上/f只是/dbuilder/gi设计模式/nz的/ude1一种/nz用法/gi总结/gi：/w在/p以下/f情况/n使用/gibuild/nz模式/gi：/w1/nz /x当/p创建/gi复杂/a对象/gi的/ude1算法/gi应该/v独立/a于/p该/rz对象/gi的/ude1组成/gi部分/n以及/cc它们/rr的/ude1装配/vn方式/n时/qt。/w2/nz /x当/p构造/n过程/gi必须/d允许/v被/pbei构造/n的/ude1对象/gi有/vyou不同/a的/ude1表示/v时/qt。/w3/nz builder/nz模式/gi要/v解决/v的/ude1也/d正是/v这样/rzv的/ude1问题/gi：/w　　/nz当/p我们/rr要/v创建/gi的/ude1对象/gi很复杂/nz的/ude1时候/n（/w通常/d是/vshi由/p很/d多/a其他/rzv的/ude1对象/gi组合而成/l）/w，/w　　/nz我们/rr要/v复杂/a对象/gi的/ude1创建/gi过程/gi和/cc这个/rz对象/gi的/ude1表示/v（/w展示/gi）/w分离/vi开来/v，/w　　/nz这样/rzv做/v的/ude1好处/gi就是/v通过/p一步步/nz的/ude1进行/vn复杂/a对象/gi的/ude1构建/gi，/w　　/nz由于/p在/p每一步/d的/ude1构造/n过程/gi中/f可以/v引入/v参数/gi，/w使得/vi经过/p相同/a的/ude1步骤/gi创建/gi最后/f得到/v的/ude1对象/gi的/ude1展示/gi不/d一样/uyy。/w