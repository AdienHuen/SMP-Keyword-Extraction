#算法/gi学习/gi之/uzhi路-交换/nz排序/gi
交换排序/gi主要/b有/vyou两/nz种/q：/w冒泡排序/gi和/cc快速排序/gi冒泡排序/gi：/w基本/a思想/gi：/w在/p要/v排序/gi的/ude1一/nz组/n数/n中/f，/w对/p当前/t还/d未/d排好/nz序/n的/ude1范围内/nz的/ude1全部/m数/n，/w自上而下/al对/p相邻/vi的/ude1两/nz个/q数/n依次/d进行/vn比较/gi和/cc调整/vn，/w让/v较大/d的/ude1数/n往下沉/v，/w较小/d的/ude1往/p上/f冒/v。/w即/v：/w每当/p两/nz相邻/vi的/ude1数/n比较/gi后/f发现/v它们/rr的/ude1排序/gi与/cc排序/gi要求/n相反/vi时/qt，/w就/d将/d它们/rr互换/v。/w上/f关键/n部分/n代码/gi待/vi排/vint/nz数组/gi为/pa/nz，/w下同/vi。/w冒泡排序/gi是/vshi稳定/an的/ude1排序/gi，/w若/c文件/gi初状/nz为/p正序/nz，/w则/d一/nz趟/qv起泡/vi就/d可/v完成/v排序/gi，/w排序码/nz的/ude1比较次数/gi为/pn/nz-/nz1/nz，/w且/c没有/v记录/gi移动/vn，/w时间复杂度/gi是/vshio/nz(/nzn/nz)/nz。/w若/c文件/gi初态/nz为/p逆序/nz，/w则/d需要/vn/nz-/nz1/nz趟/qv起泡/vi，/w每/rz趟/qv进行/vnn/nz-/nzi/nz次/qv排序码/nz的/ude1比较/gi，/w且/c每次/r比较/gi都/d移动/vn三次/nz，/w比较/gi和/cc移动/vn次数/gi均/d达到/v最大/gm∶/wo/nz(/nzn/nz^/nz2/nz)/nz。/w平均/a时间复杂度/gi为/po/nz(/nzn/nz^/nz2/nz)/nz快速排序/gi：/w基本/a思想/gi：/w选择/gi一个/mq基准/gi元素/gi,/nz通常/d选择/gi第一个/gi元素/gi或者/c最后/f一个/mq元素/gi,/nz通过/p一/nz趟/qv扫描/gi，/w将/d待/vi排序列/nz分成/vi两/nz部分/n,/nz一/nz部分/n比/p基准/gi元素/gi小/a,/nz一/nz部分/n大于/v等于/v基准/gi元素/gi,/nz此时/r基准/gi元素/gi在/p其/rz排好/nz序/n后/f的/ude1正确/a位置/gi,/nz然后/c再/d用/p同样/d的/ude1方法/gi递归/gi地/ude2排序/gi划分/v的/ude1两/nz部分/n。/w关键/n部分/n代码/gi如下/vi：/w快速排序/gi是/vshi不/d稳定/an的/ude1排序/gi。/w快速排序/gi的/ude1时间复杂度/gi为/po/nz(/nznlogn/gi)/nz，/w与/cc数组/gi内部/f数字/gi的/ude1顺序/gi没有/v很大/d关系/gi。/w当/pn/nz较大/d时/qt使用/gi快排/nz比较/gi好/a，/w当/p序列/gi基本/a有序/gi时/qt用/p快/a排/v反而/d不好/a。/w