#重学/njava/gi23/nz种/q设计模式/nz（/w1/nz）/w工厂方法模式/gi
跟着/v《/w软件/gi秘笈---设计/nz模式/gi那/rzv点/gi事/n》/w学习/gi定义/gi：/w工厂方法模式/gi（/wfactory method pattern/nz）/w  /x定义/gi一个/mq创建/gi产品/gi对象/gi的/ude1工厂/gi接口/gi，/w让子/nz类/gi决定/v实例化/gi哪/ry一种/nz实例/gi对象/gi，/w也/d就是/v将/d创建/gi实例/gi对象/gi的/ude1工作/gi推迟/v到/v子类/gm当中/f，/w核心/n工厂/gi类/gi不在/v负责/v具体/a产品/gi的/ude1创建/gi。/w  /x工厂方法模式/gi是/vshi对/p简单工厂模式/gi进行/vn了/ule抽象/gi。/w如此一来/dl核心/n类/gi成为/v一个/mq抽象工厂/gi角色/gi，/w仅/d负责/v具体/a工厂子/nz类/gi必须/d实现/gi的/ude1接口/gi，/w这/rzv一样/uyy进一步/d抽象化/nz的/ude1好处/gi是/vshi使得/vi工厂方法模式/gi可以/v使/v系统/gi在/p不/d修改/gi工厂/gi角色/gi的/ude1情况下/nz引进/v新的/a产品/gi，/w工厂方法模式/gi完全/ad实现/gi“开-闭”/nz原则/gi，/w对/p扩展/gi开房/v，/w对/p修改/gi关闭/gi。/w角色/gi：/w抽象工厂/gi抽象/gi产品/gi具体/a工厂/gi具体/a产品/gi类图/gi：/w实例/gi：/w使用/gi场合/n：/w当子/n类型/gi可能会/nz有/vyou很/d多/a，/w以后/f需要/v不断/d增添/v不同/a的/ude1子类/gm实现/gi时/qt。/w一句话/l总结/gi：/w用/p继承/gi的/ude1方式/n实现/gi解耦/gi。/w