#高性能/giAES/nz256/nz对称/gi加/v解密/gi，/w兼容/viJava/gi、/wIOS/nz、/wAndroid/gi
最近/t在/p设计/gi一个/mq给/pios/gi和/ccandroid/gi提供/v接口/gi的/ude1项目/gi框架/gi，/w在/p接口/gi安全/gi上/f准备/v使用/gi常规/n的/ude1加密技术/nz，/w确保/v在/p非法/b访问/gi接口/gi的/ude1情况下/nz拿到/v的/ude1数据/gi一时半会/l也/d没用/vi。/w查/v了/ule相关/vn的/ude1资料/gi，/w用/p的/ude1最多/ad的/ude1几/d种/q加密/gi算法/gi，/wdes/nz、/waes/nz、/w3/nzdes/nz等/udeng，/w考虑到/v手机/gi端的/z兼容/vi，/w先用/n了/uledes/nz。/w但/c我/rr遇到/v一个/mq现象/n后/f，/w让/v我/rr决定/v放弃/gides/nz，/w不/d知道/v有/vyou没有/v大神/nz也/d遇到/v过/uguo，/w就是/v我/rr用/pdes/nz加密/gi后/f，/w再/d用/paes/nz加密/gides/nz解密/gi后/f的/ude1内容/gi。/w拿到/v密文/gi后/f使用/giaes/nz反过来/d解密/gi，/w结果/naes/nz一次/nz解密/gi后/f就/d得到/v了/ule两/nz次/qv加密/gi前/f的/ude1明文/n。/w为了/p排除/gi是/vshi内存/gi的/ude1问题/gi，/w我/rr特地/d在/pa/nz机器/gi上/f加密/gi，/wb/nz机器/gi上/f解密/gi，/w结果/n还是/c坑爹/nz的/ude1一样/uyy。/w为了/p节省时间/nz就/d没有/v细细/d的/ude1研究/gi了/ule，/w有/vyou时间/gi了/ule再/d细细/d研究/gi。/w最后/f决定/v选用/vaes/nz，/w密钥/gi长度/gi为/p128/nz位/q作为/p加/v解密/gi工具/gi，/w在/p与/cc前端/gi联调/v的/ude1发现/v了/ule个/q问题/gi，/w就是/v服务器/gi加密/gi的/ude1数据/gi，/w客户端/gi无法/v解密/gi。/w经过/p研究/gi发现/v，/w是/vshi由于/pios/gi加密/gi填充/v方式/n是/vshipkcs/nz7/nzpadding/nz和/cc而/cc服务器/gi使用/gi的/ude1加密/gi填充/v方式/n是/vshipkcs/nz5/nzpadding/nz，/w只/d支持/v56/nz位/q密钥/gi。/w查询/gi资料/gi后/f发现/v使用/giaes/nz密钥/gi为/p256/nz位/q加密/gi后/f在/p客户端/gi可以/v正常/a的/ude1解密/gi。/w但有/c个/q问题/gi，/w就是/v我/rr使用/gi的/ude1jdk/gi1.6/nz自带/n的/ude1security/nz是/vshi不/d支持/v256/nz位/q的/ude1。/w这个/rz使用/gi可以/v使用/gibouncy castle/nz，/w它/rr支持/vpkcs/nz7/nzpadding/nz的/ude164位/gi算法/gi。/w下面/f说说/v具体/a的/ude1实现/gi办法/gi：/w1/nz、/w声明/gi密钥/gi算法/gi2/nz、/w声明/gi加密/gi填充/v方式/n3/nz、/w生成/v密钥/gi，/w生成/v的/ude1密钥/gi原本/d是/vshibyte/nz[/nz]/nz类型/gi，/w为了/p对/p密钥/gi进行/vn在/p加工/gi，/w这里/rzs我/rr用/pbase64/gi加密/gi了/ule一次/nz，/w如果/c不要/d的/ude1这里/rzs可以/v直接/ad返回/vbyte/nz[/nz]/nz /x4/nz、/w密钥/gi转换/gi /x5/nz、/w加密/gi方法/gi，/w跟/p生成/v密钥/gi一样/uyy，/w对/p传参/nz部分/n进行/vn了/ule处理/vn /x5/nz、/w解密/gi数据/gi /x6/nz、/wmain/gi方法/gi测试/gi到/v这里/rzs，/w一个/mq简单/a的/ude1加解/nz密算法/nz就算/d实现/gi了/ule，/w这里/rzs有点/d要/v注意/v：/wjdk/gi自带/n的/ude1security/nz不能/v生成/v64位/gi密钥/gi，/w需要/v替换/v原/bjdk/gi下/fsecurity/nz的/ude1两/nz个/q文件/gi。/w以上/f代码/gi仅供/nz大家/rr研究/gi测试/gi，/w完整/a代码/gi可以/v在/p这里/rzs下载/gi！/w下载/gi地址/gi：/w