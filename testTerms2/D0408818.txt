#mongodb/gi
1./nzmongodb/gi介绍/gi  mongodb /nz(/nz名称/n来自/vhumongous/nz)/nz /x是/vshi一个/mq可扩展/nz的/ude1高性能/gi，/w开源/gi，/w模式自由/gi，/w面向文档/gi的/ude1数据库/gi。/w它/rr使用/gic/nz编写/gi。/wmongodb/gi特点/n:/w a/nz./nz面向/v集合/gi的/ude1存储/gi：/w适合/v存储/gi对象/gi及/ccjson/gi形式/gi的/ude1数据/gi。/w b/nz./nz动态/gi查询/gi：/wmongo/gi支持/v丰富/a的/ude1查询/gi表达方式/nz，/w查询/gi指令/gi使用/gijson/gi形式/gi的/ude1标记/gi，/w可/v轻易/d查询/gi文档/gi中的/v内嵌/v的/ude1对象/gi及/cc数组/gi。/w c/nz./nz完整/a的/ude1索引/gi支持/v:/w包括/v文档/gi内嵌/v对象/gi及/cc数组/gi。/wmongo/gi的/ude1查询/gi优化器/nz会/v分析/gi查询/gi表达式/gi，/w并/cc生成/v一个/mq高效/b的/ude1查询/gi计划/gi。/w d/nz./nz查询/gi监视/v：/wmongo/gi包含/v一个/mq监视/v工具/gi用于/v分析/gi数据库操作/gi性能/gi。/w e/nz./nz复制/gi及/cc自动/d故障/gi转移/v：/wmongo/gi数据库/gi支持/v服务器之间/n的/ude1数据/gi复制/gi，/w支持/v主-从/nz模式/gi及/cc服务器之间/n的/ude1相互/d复制/gi。/w复制/gi的/ude1主要/b目的/gi是/vshi提供/v冗余/n及/cc自动/d故障/gi转移/v。/w f/nz./nz高效/b的/ude1传统/n存储/gi方式/n：/w支持/v二进制/gi数据/gi及/cc大型/b对象/gi（/w如/v照片/n或/c图片/gi）/w。/w g/nz./nz自动/d分片/gi以/p支持/v云级/nz别的/rzv伸缩性/gi：/w自动/d分片/gi功能/gi支持/v水平/n的/ude1数据库/gi集群/gi，/w可/v动态/gi添加/gi额外/b的/ude1机器/gi。/w2./nzmongo/gi使用/gi场合/n  mongodb/nz的/ude1主要/b目标/gi是/vshi在/p键/n//nz存储/gi方式/n（/w提供/v了/ule高性能/gi和/cc高度/d伸缩性/gi）/w以及/cc传统/n的/ude1rdbms/gi系统/gi（/w丰富/a的/ude1功能/gi）/w架起/v一座/nz桥梁/n，/w集/q两者/rzv的/ude1优势/gi于/p一身/n。/wmongo/gi适用/vi于/p以下/f场景/gi：/w a/nz./nz网站/gi数据/gi：/wmongo/gi非常适合/i实时/n的/ude1插入/gi，/w更新/gi与/cc查询/gi，/w并/cc具备/v网站/gi实时/n数据存储/gi所需/nz的/ude1复制/gi及/cc高度/d伸缩性/gi。/w b/nz./nz缓存/gi：/w由于/p性能/gi很高/d，/wmongo/gi也/d适合/v作为/p信息/gi基础设施/gi的/ude1缓存/gi层/gi。/w在/p系统/gi重启/gi之后/f，/w由/pmongo/gi搭建/v的/ude1持久化/nz缓存/gi可以/v避免/v下层/f的/ude1数据源/gi过载/vn。/w c/nz./nz大/a尺寸/gi、/w低价/n的/ude1数据/gi：/w使用/gi传统/n的/ude1关系数据库/gi存储/gi一/nz些/q数据/gi时/qt可能会/nz比较/gi贵/a，/w在此之前/i，/w很/d多/a程序员/gi往往/d会/v选择/gi传统/n的/ude1文件/gi进行/vn存储/gi。/w d/nz./nz高/a伸缩性/gi的/ude1场景/gi：/wmongo/gi非常适合/i由/p数/n十或者/nz数/n百台/nz服务器/gi组成/gi的/ude1数据库/gi。/w e/nz./nz用于/v对象/gi及/ccjson/gi数据/gi的/ude1存储/gi：/wmongo/gi的/ude1bson/nz数据/gi式/k非常适合/i文档/gi式/k化/v的/ude1存储/gi及/cc查询/gi。/w不/d适合/v的/ude1场景/gi：/w a/nz./nz高度/d事物/n性/ng的/ude1系统/gi：/w例如/v银行/gi或/c会计/nnt系统/gi。/w传统/n的/ude1关系型数据库/gi目前/t还是/c更适/nz用于/v需要/v大量/m原子/gi性/ng复杂/a事务/gi的/ude1应用程序/nz。/w b/nz./nz传统/n的/ude1商业智能/nz应用/gi：/w针对/gi特定/b问题/gi的/ude1bi/gi数据库/gi会/v对/p产生/v高度/d优化/gi的/ude1查询/gi方式/n。/w对于/p此类/r应用/gi，/w数据仓库/gi可能/v是/vshi更/d合适/a的/ude1选择/gi。/w c/nz./nz需要/vsql/gi的/ude1问题/gi。/w