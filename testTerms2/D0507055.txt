#java /nz数据源/gi和/cc连接池/nz的/ude1区别/gi
数据源/gi是/vshi一种/nz数据库/gi对/p编程/gi提供/v的/ude1一个/mq接口/gi，/w每个/r数据源/gi对应/vi一个/mq数据库/gi。/w连接池/nz只是/d存放/v数据库/gi连接/gi对象/gi的/ude1一个/mq缓冲池/nz，/w需要/v数据/gi连接/gi的/ude1时候/n从/p缓冲池/nz中/f取/v就行了/l。/w连接池/nz可以/v管理/gi数据源/gi。/w首先/d不存在/ns数据库连接池/gi的/ude1情况下/nz，/w界面/gi逻辑/n直接/ad访问/gi的/ude1是/vshi数据库/gi。/w每/rz一个/mq请求/gi就/d会/v访问/gi数据库/gi从而/c会/v去/vf占用/v一个/mq数据库/gi连接/gi，/w访问/gi连接/gi过多/d时/qt，/w就/d会/v严重/a导致/gi访问/gi的/ude1效率/gi问题/gi。/w这/rzv是/vshi两层/nz结构/gi！/w这个/rz问题/gi的/ude1存在/v才/d引发/v了/ule数据库连接池/gi存在/v的/ude1价/n！/w连接池/nz就是/v一个/mq介于/v数据库/gi和/cc界面/gi请求/gi数据/gi的/ude1中间层/nz。/w形成/v三层/nz结构/gi，/w对/p用于/v访问/gi数据库/gi连接/gi进行/vn有效/gi管理/gi，/w也/d就是/v连接池/nz里面/f准备/v预定义/v连接/gi数据库/gi的/ude1连接/gi，/w访问/gi数据库/gi时候/n，/w先/d从/p连接池/nz里/f去拿/nz连接/gi，/w（/w连接池/nz中/f可以/v配置/gi最低/a连接数/nz，/w最多/ad的/ude1连接数/nz，/w和/cc连接/gi的/ude1时间/gi等/udeng.../w）/w连接池/nz里/f存在/v有/vyou空闲/gi连接/gi就/d去/vf给/p它/rr连接/gi去/vf访问/gi数据库/gi，/w如果/c没有/v就/d去/vf等待/gi其他/rzv连接/gi关闭/gi之后/f，/w再/d给/p它/rr进行/vn连接/gi访问/gi数据库/gi，/w访问/gi完/vi连接/gi关闭/gi之后/f，/w连接池/nz就/d会/v自动/d回收/vn数据库/gi连接/gi。/w等待/gi下一个/nz请求/gi去/vf调用/gi。/w数据库连接池/gi负责/v分配/gi、/w管理/gi和/cc释放/gi数据库/gi连接/gi，/w它/rr允许/v应用程序/nz重复使用/l一个/mq现有/v的/ude1数据库/gi连接/gi，/w而/cc不再/d不是/c重新/d建立/gi一个/mq；/w释放/gi空闲/gi时间/gi超过/v最大/gm空闲/gi时间/gi的/ude1数据库/gi连接/gi来/vf避免/v因为/c没有/v释放/gi数据库/gi连接/gi而/cc引起/v的/ude1数据库/gi连接/gi遗漏/v。/w这项/r技术/gi能/v明显/a提高/v对/p数据库操作/gi的/ude1性能/gi。/w