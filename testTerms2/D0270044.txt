#【/w面向对象/gi】/w初步/d接触/v三层架构/gi
三层架构/gi  /x三层架构/gi(/nz3/nz-/nztier architecture/nz)/nz /x通常/d意义/n上/f的/ude1三层架构/gi就是/v将/d整个/b业务/gi应用/gi划分/v为/p：/w界面/gi层/gi（/wuser interface layer/nz）/w  /x、/w业务/gi逻辑层/nz（/wbusiness logic layer/nz）/w /x、/w数据访问层/gi（/wdata access layer/nz）/w /x。/w区分/v层次/n的/ude1目的/gi即/v为了/p“高/nz内聚/nz低/a耦合”/nz的/ude1思想/gi。/w    /x在/p软件/gi体系/gi架构设计/nz中/f，/w分层/v式/k结构/gi是/vshi最/d常见/a，/w也/d是/vshi最重要/nz的/ude1一种/nz结构/gi。/w    /x微软/ntc推荐/gi的/ude1分层/v式/k结构/gi一般/ad分为/v三层/nz，/w从/p下/f至上/vi分别为/v：/w数据访问层/gi、/w业务/gi逻辑层/nz（/w又/d或/c称为/v领域/gi层/gi）/w、/w表示层/n。/w   /x三层/nz原理/gi3/nz个/q层次/n中/f，/w系统/gi主要/b功能/gi和/cc业务逻辑/gi都/d在/p业务/gi逻辑层/nz进行/vn处理/vn。/w所谓/v三层/nz体系结构/gi，/w是/vshi在/p客户端/gi与/cc数据库/gi之间/f加入/v了/ule一个/mq“/w中间层/nz”/w，/w也/d叫/vi组件/gi层/gi。/w这里/rzs所说/c的/ude1三层/nz体系/gi，/w不是/c指/v物理/n上/f的/ude1三层/nz，/w不是/c简单/a地/ude2放置/gi三台/nz机器/gi就是/v三层/nz体系结构/gi，/w也/d不仅/c仅有/nzb/nz//nzs/nz应用/gi才/d是/vshi三层/nz体系结构/gi，/w三层/nz是/vshi指/v逻辑上/nz的/ude1三层/nz，/w即/v把/pba这/rzv三个层/nz放置/gi到/v一台/nz机器/gi上/f。/w通常/d情况下/nz，/w客户端/gi不/d直接/ad与/cc数据库/gi进行/vn交互/gi，/w而是/c通过/pcom/nz//nzdcom/nz通讯/gi与/cc中间层/nz建立/gi连接/gi，/w再/d经由/p中间层/nz与/cc数据库/gi进行/vn交互/gi。/w各/rz层/gi对比/gi  /x各/rz层/gi  /x作用/gi  /x重要性/n  ui/nz层/gi  /x提供/v界面/gi，/w输入输出/gi指令/gi或/c数据/gi  /x※※/nz※※/nz  /x业务/gi层/gi  /x传达/v数据/gi，/w分析/gi结果/n  /x※/nz※/nz※/nz※/nz※/nz  /x数据/gi层/gi  /x操纵/gi数据库/gi，/w增删/v改查/nz  /x※※/nz※※/nz优缺点/gi优点/gi  /x1./nz明确/a了/ule“/w高/a内聚/nz低/a耦合”/nz的/ude1思想/gi；/w    /x2./nz操作员/gi只/d需要/v关注/v整个/b项目/gi中的/v一/nz层/gi；/w    /x3./nz降低/v层/gi与/cc层/gi之间/f的/ude1依赖/v；/w     /x4./nz有利于/v标准化/vn；/w    /x5./nz利于/v各/rz层/gi逻辑/n的/ude1复用/gi；/w    /x6./nz结构/gi更加/d的/ude1明确/a；/w     /x7./nz在/p后期/f维护/gi的/ude1时候/n，/w极大/a地/ude2降低/v了/ule维护/gi成本/n和/cc维护/gi时间/gi；/w缺点/gi1/nz、/w降低/v了/ule系统/gi的/ude1性能/gi。/w  /x这/rzv是/vshi不言而喻/vl的/ude1。/w如果/c不/d采用/v分层/v式/k结构/gi，/w很/d多/a业务/gi可以/v直接/ad造访/v数据库/gi，/w以此/d获取/gi相应/vi的/ude1数据/gi，/w如今/t却/d必须/d通过/p中间层/nz来/vf完成/v。/w  /x2/nz、/w有时/d会/v导致/gi级联/n的/ude1修改/gi。/w  /x这种/r修改/gi尤其/d体现/v在/p自上而下/al的/ude1方向/gi。/w如果/c在/p表示层/n中/f需要/v增加/v一个/mq功能/gi，/w为/p保证/v其/rz设计/gi符合/v分层/v式/k结构/gi，/w可能/v需要/v在/p相应/vi的/ude1业务逻辑/gi层/gi和/cc数据访问层/gi中都/ns增加/v相应/vi的/ude1代码/gi。/w  /x3/nz、/w增加/v了/ule开发成本/nz。/w  /x通过/p分层/v设计/gi，/w就/d会/v增加/v各个部门/l的/ude1精英/n人数/n，/w更加/d细致/a的/ude1划分/v人员/gi，/w使得/vi开发/gi费用/n增加/v。/w例子/gi展示/gi例子/gi说明/v  /x利用/v三层/nz实现/gi以下/f功能/gi：/w1./nz登陆/vi窗体/gi，/w判断/gi登陆/vi是否/v成功/a；/w2./nz登陆/vi成功/a增加/v10/nz点/gi积分/n；/w程序设计/gi思考/gi思考/gi  /x要/v利用/v三层架构/gi实现/gi登陆/vi窗体/gi，/w首先/d要/v熟悉/v登陆/vi的/ude1流程/gi，/w要/v建立/gi各个/rz层/gi，/w然后/c要/v确定/v每层/d的/ude1主要/b功能/gi是/vshi什么/ry，/w最后/f代码实现/gi。/w登陆/vi流程图/gi关键/n代码/gi展示/gi首先/d要/v从/pui/gi层/gi开始/v；/w然后/c要到/v业务/gi层/gi，/w判断/gi用户/gi是否/v登陆/vi成功/a；/w接下来/vl是/vshi到/v数据层/nz，/w判断/gi用户名/n和/cc密码/gi是否/v正确/a；/w在/p数据层/nz对比/gi后/f，/w将/d结果/n返还/v给/p业务/gi层/gi，/w再/d传给/vui/gi层/gi，/wui/gi层/gi将/d结果/n输出/gi给/p用户/gi。/w如果/c成功/a，/w在/p业务/gi层/gi判断/gi后/f，/w需要/v为此/bl用户/gi添加/gi积分/n，/w就要/d再次/d到/v数据层/nz，/w为/p用户/gi增加/v积分/n；/w温馨/a提示/gi：/w在/p三层/nz数据传递/gi的/ude1过程/gi中/f，/w会/v涉及/v到/v一个/mq上传/v下/f蹦/v作用/gi的/ude1实体/n，/w帮助/v我们/rr传输数据/n；/w（/w具体/a作用/gi看/v链接/gi学习心得/n  /x刚刚/d接触/v了/ule三层架构/gi，/w初步/d感觉/gi运用/v三层架构/gi是/vshi比较/gi麻烦/an的/ude1，/w但是/c从/p后期/f维护/gi、/w长久/a的/ude1使用/gi来/vf想/v，/w三层/nz确实/ad是/vshi要/v发展/gi的/ude1趋势/gi。/w通过/p这个/rz例子/gi的/ude1学习/gi，/w我/rr也/d初步/d了解/v了/ule实体/n的/ude1概念/gi，/w很/d多/a情况下/nz我们/rr都/d需要/v开放/gi自己/rr，/w让/v自己/rr接受/gi新/a知识/gi。/w加油/vi吧/y！/w骚/a年/qt！/w更多/ad了解/v：/w /x【/w作者/nnt：/w王雷/nr /x】/w