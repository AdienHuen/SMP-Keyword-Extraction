#设计模式/nz之/uzhi /x-/nz /x备忘录模式/gi
一/nz、/w定义/gi    /x备忘录模式/gi：/w在/p不/d破坏/v封装/gi性/ng的/ude1前提/n下/f，/w捕获/v一个/mq对象/gi的/ude1内部/f状态/gi，/w并/cc在/p该/rz对象/gi之外/f保存/gi这个/rz状态/gi。/w这样/rzv以后/f就/d可/v将/d该/rz对象/gi恢复/gi到/v原先/d保存/gi的/ude1状态/gi。/w举/v个/q简单/a的/ude1例子/gi，/w我们/rr玩游戏/n时/qt都会/n保存/gi进度/gi，/w所/usuo保存/gi的/ude1进度/gi以/p文件/gi的/ude1形式/gi存在/v。/w这样/rzv下次/t就/d可以/v继续/v玩/v，/w而/cc不用/d从头开始/nz。/w这里/rzs的/ude1进度/gi其实/d就是/v游戏/gi的/ude1内部/f状态/gi，/w而/cc这里/rzs的/ude1文件/gi相当/d于是/cc在/p游戏/gi之外/f保存/gi状态/gi。/w这样/rzv，/w下次/t就/d可以/v从文件/l中/f读入/gi保存/gi的/ude1进度/gi，/w从而/c恢复/gi到/v原来/d的/ude1状态/gi。/w这/rzv就是/v备忘录模式/gi。/w二/nz、/w结构/gi1/nz)/nz /x备忘录/gi（/w memento/nz）/w角色/gi：/w备忘录/gi角色/gi存储/gi“/w备忘/nz发起/v角色/gi”/w的/ude1内部/f状态/gi。/w“备/nz忘/v发起/v角色/gi”/w根据/p需要/v决定/v备忘录/gi角色/gi存储/gi“/w备忘/nz发起/v角色/gi”/w的/ude1哪些/ry内部/f状态/gi。/w为了/p防止/gi“/w备忘/nz发起/v角色/gi”/w以外/f的/ude1其他/rzv对象/gi访问/gi备忘录/gi。/w备忘录/gi实际上/d有/vyou两/nz个/q接口/gi，/w“/w备忘录/gi管理者/nnt角色/gi”/w只能/v看到/v备忘录/gi提供/v的/ude1窄/a接口/gi―/w―/w对于/p备忘录/gi角色/gi中/f存放/v的/ude1属性/gi是/vshi不/d可见/c的/ude1。/w“备/nz忘/v发起/v角色/gi”/w则/d能够/v看到/v一个/mq宽/a接口/gi―/w―/w能够/v得到/v自己/rr放入/v备忘录/gi角色/gi中/f属性/gi。/w2/nz)/nz /x备忘/nz发起/v（/w originator/nz）/w角色/gi：/w“备/nz忘/v发起/v角色/gi”/w创建/gi一个/mq备忘录/gi，/w用以/d记录/gi当前/t时刻/n它/rr的/ude1内部/f状态/gi。/w在/p需要/v时/qt使用/gi备忘录/gi恢复/gi内部/f状态/gi。/w3/nz)/nz /x备忘录/gi管理者/nnt（/w caretaker/nz）/w角色/gi：/w负责/v保存/gi好/a备忘录/gi。/w不能/v对/p备忘录/gi的/ude1内容/gi进行/vn操作/gi或/c检查/gi。/w三/nz、/w实现/gi四/nz、/w适用/vi场合/n   gof /nz在/p《/w设计模式/nz》/w中/f总结/gi了/ule使用/gi备忘录模式/gi的/ude1前提/n：/w1/nz)/nz /x必须/d保存/gi一个/mq对象/gi在/p某/rz一个/mq时刻/n的/ude1(/nz部分/n)/nz状态/gi,/nz /x这样/rzv以后/f需要/v时/qt它/rr才能/n恢复/gi到/v先前/t的/ude1状态/gi。/w2/nz)/nz /x如果/c一个/mq用/p接口/gi来/vf让/v其它/rz对象/gi直接/ad得到/v这些/rz状态/gi，/w将/d会/v暴露/v对象/gi的/ude1实现/gi细节/gi并/cc破坏/v对象/gi的/ude1封装/gi性/ng。/w