#非关系型数据库/gi是/vshiSaaS/nz最佳/z存储介质/nz
　　/nzsaas/gi以/p租赁/vn的/ude1方式/n向/p用户/gi提供/v软件/gi服务/gi。/w中小型/b企业/gi在/p资金/n和/cc信息化/gi人才/gi缺乏/v的/ude1情况下/nz，/w可/v通过/p向/psaas/gi购买/gi帐号/n，/w可以/v迅速/ad实现/gi信息化/gi，/w节约/v成本/n。/wsaas/gi虽然/c在/p国内/s普及/v度/qv不够/a高/a，/w但/c随着/p云计算/gi宣传/gi力度/n增大/v，/w市场/gi广度/n会/v越来越/d大/a。/w　　/nz对于/p软件/gi提供商/n，/w在/p设计/gisaas/gi平台/gi时/qt，/w难度/n会/v比/p传统/n的/ude1应用/gi模式/gi大/a的/ude1多/a。/w因为/c提供/v的/ude1服务平台/n，/w而/cc不是/c一个/mq软件应用/l，/w在/p多/a企业/gi共用/b平台/gi的/ude1背景/n下/f，/w必然/d会/v带来/v数据/gi的/ude1压力/n。/w而/cc数据/gi压力/n不仅/c体现/v在/p数据量/n，/w并发性/nz增大/v，/w还/d体现/v在/p可扩展性/gi的/ude1需求/gi加大/v。/w数据量/n并发性/nz增大/v不难理解/l，/w由于/p是/vshi为/p多/a企业/gi提供/v服务/gi，/w就/d需要/v在/p服务端/nz部署/gi所有/b企业/gi的/ude1数据/gi，/w数据量/n自然而然/al就/d会/v增大/v。/w可扩展性/gi的/ude1需求/gi加大/v是因为/csaas/gi提供/v的/ude1共有/v功能/gi，/w不能/v像/v传统/n应用软件/gi可/v进行/vn定制/n开发/gi，/w所以/c只能/v提供/v一/nz些/q灵活/a的/ude1配置/gi来/vf供/vi企业/gi实现/gi个性/n需求/gi。/w而/cc个性/n需求/gi功能/gi越大/d，/w越/d能/v体现/vsaas/gi平台/gi的/ude1优势/gi。/w综上所述/c，/w在/p设计/gisaas/gi数据库/gi需要/v解决/v以下/f三方面/nz的/ude1问题/gi：/w　　/nz１。/nz海量数据/gi　　/nz２。/nz高/a并发性/nz　　/nz３。/nz高/a扩展性/n下面/f介绍/gi下/f关系型数据库/gi对于/psaas/gi的/ude1设计模式/nz。/w提供/v以下/f三种/nz方式/n：/w　　一/nz、/w多/a数据库/gi，/w多/a结构/gi。/w这种/r方式/n为/p企业/gi提供/v独立/a的/ude1数据库/gi，/w企业/gi拥有/v自己/rr的/ude1数据库/gi服务/gi。/w这种/r方式/n可以/v解决/v以上/f三个/nz问题/gi，/w但/c带来/v了/ule另一个/nz问题/gi：/w随着/p企业/gi用户/gi越来越/d多/a，/w维护/gi的/ude1难度/n越来越/d大/a。/w数据库/gi需要/v备份/gi，/w更新/gi程序/gi后/f，/w需要/v更新/gi数据库/gischema/nz,/nz想想成千上万/nz的/ude1数据库/gi更新/gi是/vshi多么/d繁琐/a的/ude1事情/n。/w所以/c这种/r方式/n只/d适合/v较大/d规模/gi的/ude1企业/gi，/w例如/v政府/nis，/w国企/n，/w可以/v提供/v持续/vd资金/n来/vf弥补/v维护/gi成本/n的/ude1增加/v。/w这/rzv就/d又/d与/ccsaas/gi的/ude1宗旨/n背道而驰/vl了/ule，/w所以/c这种/r方式/n不是/c很/d理想/n。/w　　二/nz、/w单/b数据库/gi，/w多/a结构/gi。/w这种/r方式/n是/vshi为/p不同/a的/ude1企业/gi提供/v独立/a的/ude1表/n，/w共用/b一个/mq数据库/gi。/w这种/r方式/n也/d可以/v解决/v以上/f三个/nz问题/gi，/w但/c也/d有/vyou自身/rr的/ude1问题/gi。/w与/cc上/f一个/mq方式/n问题/gi一样/uyy就是/v维护/gi起来/vf相当/d麻烦/an，/w但/c这种/r方式/n可以/v节约/v一定/b的/ude1服务器/gi成本/n，/w不会/v因为/c用户/gi增加/v而/cc增加/v数据库/gi，/w从而/c迫使/vi增加/v服务器/gi。/w所以/c这种/r方式/n有/vyou一定/b的/ude1改进/gi。/w　　三/nz、/w单/b数据库/gi，/w单/b结构/gi。/w企业/gi数据/gi全部/m存储/gi到/v同一/b张/q表/n中/f。/w这种/r方式/n虽然/c对/p后期/f维护/gi成本/n大大的/nz降低/v，/w但/c对于/p海量数据/gi高并发/gi解决不了/v。/w随着/p不可/v预期/gi的/ude1数据量/n持续/vd增大/v，/w性能/gi会/v大大的/nz降低/v。/w也/d不/d理想/n。/w在/p使用/gi关系型/b数据/gi，/w需要/v选择/gi以上/f三种/nz适合/v自己/rr的/ude1方式/n，/w就/d有/vyou了/ule一定/b的/ude1局限性/n。/w所以/c可以/v考虑/v采用/v非关系型数据库/gi，/w下面/f分析/gi下/f非关系型数据库/gi的/ude1好处/gi。/w　　/nz非/b关系型/b数据/gi没有/vschema/nz的/ude1约束/gi，/w可以/v将/d原/b数据存储/gi起来/vf。/w例如/v文档/gi型/k数据库/gimongodb/gi就是/v一个/mq不错/a的/ude1选择/gi，/w不论/c在/p海量数据/gi及/cc高/a并发性/nz都/d优于/v关系型数据库/gi。/w因为/c去除/v了/ule许多/m约束/gi与/cc事务/gi。/w一/nz张/q表里/n没有/v了/uleschema/nz的/ude1约束/gi，/w每行/r数据/gi的/ude1字段/gi可以/v允许/v不同/a。/w在/p这种/r情况下/nz，/w扩展性/n就/d变得/vi相当/d容易/ad。/w当然/d，/w有利/a就/d有/vyou弊/ng。/w由于/p事务性/n降低/v，/w为了/p保证数据/n完整性/gi，/w开发/gi难度/n会/v增大/v些/q。/w　　/nz但/c任何/rz软件设计/nz都/d要/v有/vyou个/q利弊/n的/ude1比较/gi，/w找到/v一个/mq最佳/z的/ude1实现/gi方式/n。/w前期/f开发/gi上/f投入/v些/q力度/n，/w后期/f维护/gi大大降低/n。/w非关系型数据库/gi必定/d是/vshisaas/gi数据存储/gi方式/n。/w