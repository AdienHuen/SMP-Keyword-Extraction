#OpenCms/nz二次开发/nz团队/gi协作/gi之/uzhi系统/gi平台/gi结构/gi
一/nz操作系统/gi：/wwindows/gi,/nzlinuxjdk/nz：/wjdk/gi-/nz6/nzu/nz5/nz-/nzwindows/gi-/nzi/nz586/nz-/nzp/nz./nzexe/nz(/nz1.6.0.26/nz)/nz应用服务器/gi：/wjboss/nz（/wjboss/nz-/nzas/nz-/nzdistribution/nz-/nz6.1.0./nzfinal/gi）/w开发工具/nz：/wmyeclipse/nz（/wmyeclipse/nz-/nz8.5.0/nz-/nzwin/nz32./nzexe/nz）/w版本/n工具/gi：/wsvn/gi（/wvisualsvn/nz-/nzserver/gi-/nz2.5.4./nzmsi tortoisesvn/nz-/nz1.6.10.19898/nz-/nzwin/nz32/nz-/nzsvn/gi-/nz1.6.12./nzmsi/gi）/w二/nzopencms/nz内容/gi管理/gi，/w基于/p浏览器/gi的/ude1开发模式/gi，/w改变/v了/ule我们/rr传统/n的/ude1使用/gi工具/gi开发/gi的/ude1习惯/n。/w但是/c内容/gi管理/gi的/ude1各项/r优势/gi，/w给/p我们/rr页面/gi静态/gi内容/gi的/ude1管理/gi带来/v很大/d的/ude1便捷/a。/w决定/v，/w集成/vn开发/gi，/w各尽其/i能/v，/w综合/vn使用/gi。/w问题/gi：/w1./nz怎样/ryv集成/vn，/w开发环境/gi怎么/ryv搭建/v？/w /x2./nz怎样/ryv协同/vd开发/gi？/w /x3./nz怎样/ryv维护/gi，/w管理/gi整个/b站点/gi？/w4./nz怎样/ryv部署/gi，/w发布/gi项目/gi？三/nz（/w二./nz1/nz问题/gi）/w解决方案/gi：/wa/nz./nzmyeclipse/nz新/a建立/gi一个/mqweb应用/gi，/w确定/v该/rz项目/gi需用/v到/v的/ude1框架/gi，/w先/d集成/vn到/v项目/gi应用/gi中/f。/w b/nz./nz选择/giopencms/nz版本/n，/w安装/gi，/w搭建/vopencms/nz开发环境/gi。/w c/nz./nz下载/giopencms/nz版本/n对应/vi的/ude1源码/gi。/wd/nz./nz将/d下载/gi的/ude1源码/gi(/nzsrc/nz中/fjava/gi类/gi文件/gi)/nz放入/vweb应用/gi中/fsrc/nz目录/gi。/we/nz./nzopencms/nz安装/gi成功/a后/f将/dopencms/nz项目/gi下/f所有/b文件/gi复制到/v或/c是/vshi替换/vweb应用/gi下/f的/ude1相应/vi文件/gi（/wclass/nz目录/gi下面/f配置文件/gi相应/vi的/ude1放到/vsrc/nz目录/gi下/f）/w。/w本地/gi部署/gi该/rzweb应用/gi，/w启动/gi服务/gi，/w测试/gi成功/a（/w二./nz2/nz问题/gi）/w解决方案/gi：/w opencms/nz的/ude1开发/gi还是/c有/vyou很大/d区别/gi我们/rr的/ude1传统开发/gi模式/gi，/w这时候/rzt我们/rr就/d需要/v是否/v选用/voc/gi技术/gi做/v个/q探讨/v。/w总结/gi了/ule三种/nz情况/n：/w一/nz是/vshi，/w当/p一个/mq项目/gi只是/d作为/p一个/mq信息/gi的/ude1发布/gi平台/gi(/nz新闻网/n)/nz，/w纯/a属于/v信息/gi之类/rz的/ude1，/w没有/v牵涉/v其他/rzv的/ude1后台/gi交互/gi业务/gi。/w我们/rr直接/ad就/d可以/v用/popencms/nz实现/gi，/w全/a放在/vopencms/nz框架/gi下/f开发/gi。/w二是/nz，/w整个/b项目/gi以/p静态/gi信息/gi为主/vi，/w但/c又/d会/v涉及/v到/v一/nz些/q简单/a的/ude1业务/gi。/w诸如/v，/w我/rr站/vi的/ude1信息/gi需要/v和/cc其他/rzv信息/gi平台/gi的/ude1数据/gi同步/gi之类/rz。/w这时候/rzt我们/rr可以/v还是/c以/popencms/nz为主/vi，/w只是/d需要/v将/d数据/gi同步/gi的/ude1业务/gi处理/vn集成/vn到/vopencms/nz就/d可以/v。/w三是/nz，/w一个/mq项目/gi中/f既有/v业务性/n很强/d的/ude1，/w也/d有/vyou静态/gi信息量/n很大/d的/ude1模块/gi。/w比如说/vl，/w我/rr的/ude1一个/mq电子商务/gi站点/gi里面/f有/vyou产品/gi信息/gi的/ude1发布/gi，/w交易/gi，/w产品/gi评论/gi，/w论坛/gi，/w行业/gi内/f类/gi该/rz产品/gi的/ude1信息/gi，/w商家/gi信息/gi等等/udeng。/w此时/r，/w我们/rr不妨/d以/p合作/vn的/ude1形式/gi来/vf搭建/v我们/rr的/ude1整个/b开发环境/gi。/w论坛/gi，/w行业/gi产品/gi信息/gi，/w商家/gi信息/gi之类/rz的/ude1交给/vopencms/nz做/v来/vf完成/v，/w其他/rzv业务/gi复杂度/gi较高/ad的/ude1还是/c采用/v我们/rr以往/t的/ude1开发模式/gi来/vf进行/vn开发/gi。/w同一个/bweb应用/gi下面/f来/vf做/v我们/rr所有/b的/ude1功能/gi，/w包括/v业务/gi性/ng的/ude1还是/c静态/gi性/ng的/ude1。/w这里/rzs就/d会/v涉及/v到/v开发人员/n的/ude1安排/v，/w我/rr是/vshi这样/rzv想/v的/ude1，/w假如/c现在/t有/vyou两/nz个/q开发人员/na/nz（/w做/v网站/gi业务/gi开发/gi）/w和/ccb/nz（/wopencms/nz开发/gi）/w。/w第一步/nz，/wa/nz，/wb/nz俩人/n先/d从/p资源库/nz中/f把/pba我们/rr已经/d搭建/v好/a的/ude1环境/n更新/gi到/v本地/gi，/w部署/gi，/w测试/gi。/w第二步/nz，/wa/nz，/wb/nz俩人/n在/p这/rzv同一个/bweb应用/gi下面/f建立/gi自己/rr任务/gi所/usuo需要/v的/ude1架构/gi，/w这/rzv之间/f会/v出现/v，/w配置文件/gi的/ude1冲突/gi，/wjar/nz包/v文件/gi冲突/gi什么/ry之类/rz的/ude1。/w这/rzv就/d需要/va/nz，/wb/nz进行/vn良好/a的/ude1沟通/gi，/w资源/gi提交/gi，/w更新/gi，/w部署/gi，/w测试/gi来/vf搭建/v好/a集成/vn了/uleopencms/nz的/ude1框架/gi。/w第三步/nz，/w到/v了/ule这一步/nz就/d简单/a了/ule，/w业务/gi做/v业务/gi的/ude1开发/gi，/wopencms/nz做/v静态/gi内容/gi的/ude1开发/gi，/w互不/d影响/gi。/w然后/c再/d通过/p版本/n工具/gi的/ude1管理/gi，/w这样/rzv，/w开发人员/n就/d可以/v更好/d的/ude1团队/gi沟通/gi，/w掌握/v自己/rr对/p项目/gi的/ude1开发/gi进程/gi。/w（/w二./nz3/nz问题/gi）/w解决方案/gi：/w /x这里/rzs所说/c的/ude1站点/gi维护/gi，/w管理/gi都/d是/vshi狭义/b上/f的/ude1。/w也/d就是说/c只是/d对/p整个/b站点/gi的/ude1业务/gi数据/gi及/cc静态数据/n的/ude1维护/gi。/wopencms/nz有/vyou自己/rr的/ude1平台/gi架构/gi，/w对/p自身/rr的/ude1数据/gi维护/gi也/d有/vyou其/rz独立/a，/w独特/a的/ude1方式/n。/w鉴于/p此/rzs，/w当/p我们/rr集成/vn其他/rzv框架/gi建设/gi大型网站/gi时候/n，/w怎样/ryv进行/vn整个/b网站/gi的/ude1维护/gi。/w个人/n认为/v，/w具体情况/nz还是/c要/v根据/p站点/gi的/ude1性质/n，/w及其/cc站点/gi结构/gi来/vf确定/v。/w一/nz是/vshi，/w对/p该/rz网站/gi增设/v两/nz个/q后台/gi维护/gi，/wopencms/nz本身/rz自带/n的/ude1工作区/n(/nz静态数据/n维护/gi)/nz和/cc后台/gi业务/gi维护/gi平台/gi(/nz针对/gi业务性/n很强/d的/ude1数据/gi维护/gi)/nz。/w二是/nz，/w业务/gi维护/gi平台/gi嵌入/vopencms/nz工作区/n，/w或/c是/vshi工作区/n嵌入/v业务/gi维护/gi平台/gi。/w第二种/nz情况/n，/w需要/v说明/v一点/m，/w整个/b站点/gi的/ude1后台/gi维护/gi相当于/v就/d集成/vn在/p一起/s了/ule，/w所以/c，/w站点/gi的/ude1用户/gi权限/gi机制/gi和/ccopencms/nz提供/v的/ude1用户/gi权限/gi机制/gi要/v一致/a，/w还有/v就是/v要/v保证/v两者之间/nz数据/gi的/ude1协调性/n。/w说/v到/v了/ule这里/rzs，/w我们/rr也/d对/p编辑/gi人员/gi使用/gi这样/rzv的/ude1数据/gi维护/gi平台/gi会/v出现/v的/ude1情况/n唠叨/v唠叨/v。/w假如/c编辑/gi人员/gi对/popencms/nz框架/gi有所/v了解/v，/w熟悉/v这个/rz自然/n没/d话说/vn。/w但是/c，/w不/d清楚/a那/rzv就/d会/v问题/gi多多的/z咯/y。/w因为/c，/w这/rzv和/cc我们/rr传统/n的/ude1维护/gi平台/gi有/vyou大大的/nz不同/a。/w解决方法/gi，/w要么/c就是/v培训/gi编辑/gi人员/gi使用/gi工作区/n，/w要么/c就是/v针对/gi工作区/n，/wopencms/nz静态数据/n建立/gi一个/mq类/gi传统/n维护/gi的/ude1后台/gi编辑/gi平台/gi。/w（/w二./nz4/nz问题/gi）/w解决方案/gi：/w /x我们/rr在/p新建/v项目/gi时候/n就是/v在/pmyecplise/nz中/f建立/gi的/ude1web应用/gi。/w协同/vd开发/gi，/w数据/gi更新/gi，/w版本控制/gi，/w本地/gi测试/gi等/udeng一切/rz的/ude1项目/gi操作/gi都/d是/vshi在/p该/rzweb/gi项目/gi下面/f完成/v的/ude1。/w所有/b说/v当/p我们/rr部署/gi该/rz应用/gi时候/n，/w像/v我们/rr以前/f的/ude1方式/n做/v就/d可以/v咯/y。/w