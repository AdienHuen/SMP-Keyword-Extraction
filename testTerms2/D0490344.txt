#对比/gi关系型数据库/gi，/w什么/ry情况下/nz使用/gi非关系型数据库/gi（/wmongodb/gi）/w
你/rr期望一个/nz更高/d的/ude1写/v负载/gi  /x默认/v情况下/nz，/w对比/gi事务/gi安全/gi，/wmongodb/gi更/d关注/v高/a的/ude1插入/gi速度/n。/w如果/c你/rr需要/v加载/gi大量/m低价/n的/ude1业务/gi数据/gi，/w那么/cmongodb/gi将/d很/d适合/v你/rr的/ude1用例/nz。/w但是/c必须/d避免/v在/p要求/n高/a事务/gi安全/gi的/ude1情景/n下/f使用/gimongodb/gi，/w比如/v一个/mq1000/nz万/nz美元/q的/ude1交易/gi。/w不/d可靠/a环境/n保证/v高可用性/n  /x设置/gi副本/n集/q（/w主-从/nz服务器/gi设置/gi）/w不仅/c方便/a而且/c很快/d，/w此外/c，/w使用/gimongodb/gi还/d可以/v快速/d、/w安全/gi及/cc自动化/gi的/ude1实现/gi节点/gi（/w或/c数据中心/gi）/w故障/gi转移/v。/w未来/t会/v有/vyou一个/mq很大/d的/ude1规模/gi  /x数据库/gi扩展/gi是/vshi非常/d有/vyou挑战性/n的/ude1，/w当/p单/b表/n大小/n达到/v5/nz-/nz10/nzgb/nz时/qt，/wmysql/gi表/n性能/gi会/v毫无疑问/dl的/ude1降低/v。/w如果/c你/rr需要/v分片/gi并且/c分割/gi你/rr的/ude1数据库/gi，/wmongodb/gi将/d很容易/nz实现/gi这一点/nz。/w使用/gi基于/p位置/gi的/ude1数据/gi查询/gi  mongodb/nz支持/v二维空间/nz索引/gi，/w因此/c可以/v快速/d及/cc精确/gi的/ude1从/p指定/v位置/gi获取数据/l。/w非结构化/gi数据/gi的/ude1爆发/v增长/gi  /x给/prdbms/gi增加/v列/v在/p有些/rz情况下/nz可能/v锁定/v整个/b数据库/gi，/w或者/c增加/v负载/gi从而/c导致/gi性能/gi下降/vi，/w这个/rz问题/gi通常/d发生/v在/p表/n大于/v1/nzgb/nz（/w更是/d下文/n提到/vbillrun/nz系统/gi中的/v痛点/n―/w―/w单表/nz动辄/d几/dgb/nz）/w的/ude1情况下/nz。/w鉴于/pmongodb/gi的/ude1弱/a数据结构/gi模式/gi，/w添加/gi1/nz个/q新/a字段/gi不会/v对/p旧表/n有/vyou任何/rz影响/gi，/w整个/b过程/gi会/v非常/d快速/d；/w因此/c，/w在/p应用程序/nz发生/v改变/v时/qt，/w你/rr不/d需要/v专门/d的/ude11/nz个/qdba/gi去/vf修改/gi数据库/gi模式/gi。/w缺少/v专业/n的/ude1数据库管理员/nnt  /x如果/c你/rr没有/v专业/n的/ude1dba/gi，/w同时/c你/rr也/d不/d需要/v结构化/n你/rr的/ude1数据/gi及/cc做/vjoin/nz查询/gi，/wmongodb/gi将/d会/v是/vshi你/rr的/ude1首选/vn。/wmongodb/gi非常适合/i类/gi的/ude1持久化/nz，/w类/gi可以/v被/pbei序列化/gi成/vjson/gi并/cc储存/gi在/pmongodb/gi。/w需要/v注意/v的/ude1是/vshi，/w如果/c期望/vn获得/v一个/mq更大/d的/ude1规模/gi，/w你/rr必须/d要/v了解/v一/nz些/q最佳/z实践/gi来/vf避免/v走入/vf误区/gi。/w  /x摘自/v：/w