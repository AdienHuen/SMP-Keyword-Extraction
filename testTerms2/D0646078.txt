#设计模式/nz /x之/uzhi /x单例模式/gi
1./nz单例模式/gi概念/gi:/w单例模式/gi是/vshi一种/nz常用/a的/ude1设计模式/nz,/nz通过/p单例模式/gi在/p内存/gi中/f只能/v存在/v一个/mq该类/r对象/gi,/nz即/v只能/v有/vyou一个/mq实例/gi,/nz并且/c该/rz实例/gi易于/vd外界/n访问/gi./nz2./nz什么/ry时候/n使用/gi单例模式/gi第一/mq、/w控制/vn资源/gi的/ude1使用/gi，/w通过/p线程同步/gi来/vf控制/vn资源/gi的/ude1并发访问/gi；/w /x第二/mq、/w控制/vn实例/gi产生/v的/ude1数量/n，/w达到/v节约资源/n的/ude1目的/gi。/w /x第三/nz、/w作为/p通信/gi媒介/n使用/gi，/w也/d就是/v数据共享/gi，/w它/rr可以/v在/p不/d建立/gi直接/ad关联/vn的/ude1条件/n下/f，/w让/v多/a个/q不相关/nz的/ude1两/nz个/q线程/gi或者/c进程/gi之间/f实现/gi通信/gi3./nz常用/a单例模式/gi:/w4./nz饿汉式单例/gi模式/gi的/ude1代码实现/gi:/w5./nz懒汉式/gi单例模式/gi代码实现/gi:/w6./nz懒汉式/gi单例模式/gi中的/v线程安全/gi问题/gi懒汉式/gi单例模式/gi需要/v考虑/v线程安全/gi问题/gi,/nz否则/c并发/gi情况下/nz可能会/nz出现/v多/a个/qsingleton/gi实例/gi,/nz解决/v方式/n有/vyou两/nz种/q./nz /x(/nz1/nz)/nz./nz在/pgetinstance/nz方法/gi上/f加锁/gi(/nz2/nz)/nz双重/b检查/gi锁定/v主函数/nz中/f进行/vn测试/gi}/nz /x结果/n:/w7./nz结论/gi:/w单例模式/gi为/p程序/gi提供/v一个/mq唯一/b的/ude1对象/gi,/nz不管/c它/rr实现/gi什么/ry功能/gi,/nz程序/gi会/v同时/c共享/gi该/rz唯一/b对象/gi./nz