#《/w剑指/nzoffer/gi》/w―/w―/w平衡二叉树/gi
t/nz:/w  /x题目/gi描述/gi    /x输入/v一/nz棵/q二叉树/gi，/w判断/gi该/rz二叉树/gi是否是/l平衡二叉树/gi。/w /x该/rz题目/gi我/rr想/v了/ule好/a久/a，/w总是/d想/v在/p一个/mq递归函数/gm内/f解决/v这个/rz问题/gi，/w最后/f没能/v找出/v解决方案/gi。/w本题/n的/ude1关键在于/n两/nz个/q部分/n的/ude1求解/gi：/w要/v计算/gi每个/r节点/gi的/ude1深度/gi（/w或者/c计算/gi该/rz节点/gi两/nz个/q孩子/gi节点/gi的/ude1深度/gi）/w；/w根据/p两个子/nz节点/gi的/ude1深度/gi差/a判断/gi该/rz以/p该/rz节点/gi为/p子树/gm的/ude1结构/gi是否/v为/p平衡二叉树/gi。/w第一个/gi问题/gi的/ude1求解/gi，/w就/d需要/v递归/gi解决/v，/w第二个/nz问题/gi，/w也/d要/v递归/gi解决/v。/w比如/v：/w  /x节点/gia/nz的/ude1两个子/nz节点/gi的/ude1深度/gi差/a小于/v等于/v1/nz，/w还要/d继续/v看/v两个子/nz节点/gi是否/v各自/rr满足/v这个/rz条件/n，/w即/v对/p每个/r子/ng节点/gi来说/uls，/w其/rz两个子/nz节点/gi是否/v也/d满足/v深度/gi差/a小于/v等于/v1/nz，/w如此/rzv递归/gi下去/vf，/w直到/v叶节点/nz。/w两/nz个/q问题/gi，/w就/d需要/v两/nz个/q递归函数/gm，/w各自/rr执行/v各自/rr的/ude1功能/gi，/w而/cc问题/gi2/nz的/ude1求解/gi依赖于/v问题/gi1/nz的/ude1答案/gi。/wcode/gi:/w