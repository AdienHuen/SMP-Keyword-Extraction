#thinkphp/gi模型/gi
初次/d接触/vthinkphp/gi模型/gi可能/v不/d知道/v模型/gi到底/d能/v用来/v干/v啥/ry，/w下面/f就/d从/p几个/nz问题/gi介绍/githinkphp/gi模型/gi /x1/nz、/wthinkphp/gi模型/gi用来/v干/v啥/ry？/w thinkphp/nz在/p控制器/n和/cc数据库/gi之间/f建立/gi了/ule一个/mq中间/f模块/gi，/w那/rzv就是/v模型/gi。/w /x一方面/c、/w用来/v保证/v插入/gi数据库/gi中/f数据/gi的/ude1合法性/n，/w这/rzv部分/n功能/gi由/p自动/d验证/v和/cc自动/d完成/v实现/gi。/w /x另一方面/c、/w用来/v规范/gi开发人员/n编写/gisql语句/gi的/ude1格式/gi，/w以及/cc提高/v访问/gi数据库/gi的/ude1效率/gi。/w该/rz功能/gi主要/b是/vshi通过/p在/p模型/gi中/f定义/gi规范/gi数据/gi，/w以及/cc编写/gi常用/a和/cc逻辑/n复杂/a的/ude1sql语句/gi（/w一次/nz编写/gi多/a次/qv使用/gi，/w不用/d写/v大量/m重复/gi的/ude1sql语句/gi）/w实现/gi。/w     /x示例/gi：/w自动/d验证/v和/cc自动/d完成/v常用/asql语句/gi：/w2/nz、/w既然/c数据/gi的/ude1验证/v可以/v通过/p其他/rzv方式/n实现/gi，/w为什么/ryv还要/d模型/gi？/w /x其/rz一/nz、/w虽然/c可以/v通过/p其他/rzv方式/n实现/gi数据/gi的/ude1验证/v，/w但是/c其他/rzv方式/n都/d不免/d会/v有缺陷/nz，/w譬如/v，/w每次/r更改/gi都/d需要/v找/v相应/vi的/ude1js/gi或/cphp/gi验证/v函数/gi，/w而且/c所处/nz的/ude1位置/gi也/d不尽相同/i，/w不/d便于/v统一/vn管理/gi。/w而/cc模型/gi就/d提供/v了/ule很大/d的/ude1便利/an，/w一劳永逸/vl。/w /x其/rz二/nz、/w模型/gi的/ude1自动/d验证/v提供/v了/ule非常/d强大/a的/ude1功能/gi，/w再/d不断/d的/ude1深入/ad学习/gi中会/j发现/v其/rz优点/gi。/w /x3/nz、/w模型/gi是/vshi必要/a的/ude1吗/y？/w /x对于/p一/nz易/ad维护/gi的/ude1系统/gi来说/uls，/w模型/gi是/vshi很/d必要/a的/ude1。/w /x模型/gi中/f集成/vn了/ule数据库/gi的/ude1curd/nz操作/gi，/w相信/v这些/rz函数/gi绝对/d好/a多/a大部分/n人/n自己/rr编写/gi的/ude1函数/gi，/w而且/c支持/v链式/nz操作/gi，/w增加/v了/ule安全性/gi。/w最后/f附上/v我/rr自己/rr编写/gi的/ude1一个/mq简单/a模型/gi，/w可/v做/v参考/gi。/w其中/rz有/vyou几/d点/gi需要/v强调/v，/w /x1/nz、/w在/p使用/gi自动/d完成/v时/qtadd/nz(/nz)/nz,/nzsave/nz(/nz)/nz等/udeng函数/gi不能/v传入/gi$/nzdata/nz=/nzarray/nz(/nz…/w./nz)/nz,/nz因为/c在/pcreate/gi时/qt已经/d传入/gi了/ule参数/gi，/w如果/c再次/d传入/gi自动/d完成/v会/v失效/vi。/w /x2/nz、/w使用/gi自动/d完成/v时/qt最好/d将/dcreate/gi的/ude1第二个/nz参数/gi也/d写/v上/f，/w因为/c系统/gi自动检测/nz只有/c在/p更新/gi或/c插入/gi的/ude1数据/gi没有/v主键/nz的/ude1情况/n是/vshi正确/a的/ude1，/w否则/c会/v出错/gi。/w /x系统/gi默认/v有/vyou主键/nz时/qt为/p更新/gi，/w没有/v主键/nz为/p插入/gi