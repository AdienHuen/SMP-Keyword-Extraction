#Hadoop/gi中/f使用/gi正则/n匹配/gi的/ude1效率/gi问题/gi
正则表达式/gi一直/d以来/f都/d是/vshi比较/gi难/a掌握/v的/ude1，/w并且/c正则/n匹配/gi的/ude1效率/gi一直/d不/d高/a，/w特别/d是/vshijava/gi语言/gi。/w大数据/gi还没来/nz之前/f，/w正则/n匹配/gi的/ude1效率/gi问题/gi还/d不算/v程序/gi的/ude1大/a问题/gi。/w正则/n匹配/gi比较/gi常用/a与/ccurl/gi的/ude1匹配/gi，/w正巧/d网络流量/nz日志/gi是/vshi典型/n大/a数据文件/nz。/w当/p大数据/gi遇上/v正则/n匹配/gi，/w抓狂/nz的/ude1事情/n就/d发生/v了/ule，/w效率/gi极低/d。/w笔者/n做/v了/ule一个/mq简单/a的/ude1测试/gi，/w对比/gi了/ule最简单/nz的/ude1正则/n匹配/gi（/w直接/ad匹配/gi某个/rz字符串/gi，/w没有/v任何/rz通配符/gi）/w和/ccstring/gi的/ude1indexof/nz方法/gi的/ude1效率/gi下图/n是/vshi随着/p匹配/gi次数/gi的/ude1增加/v，/w时间/gi的/ude1增长/gi情况/n，/w正则/n匹配/gi呈/v指数/n增长/gi。/w（/w横坐标/n是/vshi匹配/gi次数/gi，/w底数/n为/p10/nz；/w纵坐标/n为/p时间/gi，/w单位/n为/p秒/qt）/whadoop/gi进行/vn批量/d处理/vn，/w不/d太/d适合/v逻辑/n太/d复杂/a的/ude1处理/vn，/w有违/vhadoop/gi的/ude1机制/gi。/w如何/ryv设计/gi处理/vn逻辑/n需要/v全面/ad的/ude1考虑/v。/w