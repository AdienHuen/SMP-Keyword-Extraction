#Python/gi-/nzScrapy /nz个人兴趣/nz教程/gi(/nz三/nz）/w：/w扫尾/vn
上/f一/nz篇/q博文/nz已经/d完成/v了/ule代理/giip/gi抓取/gi的/ude1核心/n部分/n，/w这/rzv一篇/nz主要/b讲/v一下/m代理/giip/gi的/ude1检测/gi。/w所谓/vhttp/gi代理/gi，/w检测/gi方法/gi很/d简单/a，/w就是/v用/p代理/gi去/vf请求/gi一个/mq网址/gi，/w看看/v是否/v能够/v拿到/v正确/a回应/vn。/w因为/c我们/rr抓取/giip/gi是/vshi周期/n进行/vn的/ude1，/w所以/c代理/giip/gi的/ude1验证/v也/d要/v不停/v的/ude1进行/vn，/w简单/a说来/v就是/v一个/mq队列/gi的/ude1形式/gi，/w抓取/gi系统/gi不停/v往/p队列/gi里/f扔/vip/gi，/w检测/gi进程/gi不停/v取出/vip/gi进行/vn检测/gi，/w检测/gi合/v的/ude1ip/gi放入/v另一个/nz队列/gi，/w不合/v的/ude1直接/ad丢弃/v。/w当然/d，/w因为/c代理/giip/gi的/ude1时效性/n，/w存放/v检测/gi合/v的/ude1代理/giip/gi的/ude1队列/gi，/w自身/rr也/d需要/v进行/vn检测/gi维护/gi。/w实现/gi方法/gi很/d简单/a，/wpython/gi就是/v个/q工具库/nz，/w利用/vurllib/nz2/nz的/ude1绑定/gi代理/gi功能/gi，/w可以/v很/d简单/a的/ude1完成/v这个/rz工作/gi，/w稍微/d注意/v一点/m的/ude1就是/v和/ccmongodb/gi的/ude1交互/gi，/wpython/gi上/f使用/gipymongo/nz库/n和/ccmongodb/gi交互/gi，/wapi/gi比较简单/l。/w为了/p提高/v检测/gi效率/gi，/w我/rr选择/gi了/ule多线程/gi模式/gi。/w检测/giip/gi看做/v一个/mq任务/gi，/w这些/rz任务/gi完全/ad可以/v并行/vn进行/vn，/w唯一/b需要/v注意/v的/ude1就是/v取/vip/gi和/cc放/vip/gi。/w利用/vmongodb/gi里/f一/nz些/q线程安全/gi的/ude1api/gi（/wfind/nz_/nzand /nz_/nzdelete/nz)/nz，/w可以/v避开/v线程/gi锁/v的/ude1使用/gi。/w(/nz当然/d，/w我/rr没有/v严验证/nz是否/v存在/v数据/gi冲突/gi，/w作为/p练手/nz，/w这个/rz实现/gi方式/n足以/d，/w而且/c错误/gi的/ude1代价/gi基本/a忽略/v）/w这个/rz检测/gi的/ude1进程/gi不停/v读取/giip/gi队列/gi里/f的/ude1数据/gi，/w如果/c读/v不到/v了/ule，/w则/dsleep/nz一些/m时间/gi，/w然后/c继续/v尝试/v读取/gi。/w这样一套/nz方案/gi搭建/v好/a之后/f，/wmongodb/gi里/f时刻/n都/d存有/v当前/t30/nz分钟/qt内/f搜索/gi到/v代理/giip/gi资源/gi，/w这/rzv可以/v作为/p其他/rzvscrapy/nz的/ude1准备/v资源/gi，/w妈妈/n再也/d不用/d担心/v我/rr的/ude1ip/gi-/nz /x-/nz。/w。/w我/rr在/p测试/gi代理/giip/gi的/ude1时候/n，/w把/pba测试/gi用/p的/ude1网页/gi链接/gi设置成/n了/ule上/f一/nz篇/q博客/gi的/ude1地址/gi。。。/w于是乎/c。。。/w。/w这个/rz博客/gi的/ude1阅读/gi量/n就/d飞/vi起来/vf了/ule。。。/w我/rr没有/v恶意/n刷/v点击量/nz的/ude1意思/n。/w。/w求别/nz封/q我/rr的/ude1博客- -。。附上/nz部分/n源码/gi：/wscan/nz./nzpyscan/nz./nzpy/nz严说/nz起来/vf只是/d一个/mq死活/n不/d愿意/v退出/gi的/ude1脚本/gi，/w并/cc不是/c一个/mqdaemon/nz，/w这里/rzs我/rr用/psupervisord/nz来/vf管理/giscan/nz./nzpy/nz，/w把/pba它/rr变向/v作为/p一个/mqdaemon/nz，/w即使/c出/vf了/ule什么/ry差错/n退出/gi了/ule，/w还/d能/v自动/d重启/gi。/w关于/psupervisor/nz的/ude1使用/gi，/w请/v自行/dgoogle/nz。/w至此/d，/w这个/rz练手/nz的/ude1小/a方案/gi就/d完成/v了/ule，/w我/rr时刻/n都/d有/vyou新鲜/a的/ude1代理/giip/gi使用/gi啦/y。/w。/w大家/rr有兴趣/v也/d可以/v做/v类/gi的/ude1事情/n，/w然后/c用/p这些/rz代理/giip/gi绕开/v大部分/n网站/gi对/p频繁/a抓取/gi的/ude1限制/vn。/w不过/c别/d高兴/a太早/nz，/w数据/gi抓取/gi有/vyou很/d多/a问题/gi需要/v攻克/v，/w绕开/vip/gi限制/vn只是/d第一步/nz，/w而且/c是/vshi很/d简单/a的/ude1一步/nz，/w后面/f还/d会/v碰到/v很/d多/a具体/a问题/gi，/w例如/v：/w身份验证/nz，/w验证码/gi，/w如何/ryv获取/gijavascript/gi生成/v的/ude1页面/gi，/w如何/ryv处理/vn大数据存储/gi，/w如何/ryv提高/v服务器/gi效率/gi，/w额/n，/w后面/f的/ude1是/vshi进阶/gi了/ule。。。/w有/vyou问题/gi欢迎/v留言- -。/nz。/w。/w不/d知道/v我/rr还有/v没有/v兴致/n继续/v搞/v抓取/gi了/ule，/w下面/f会/v很忙/nz。。。/w