#《/w剑指/nzOffer/nz》/w学习/gi笔记--面试/nz题/n36/nz：/w数组/gi中的/v逆序/nz对/p
题目/gi：/w在/p数组/gi中的/v两/nz个/q数字/gi如果/c前面/f一个/mq数字/gi大于/v后面/f的/ude1数字/gi，/w则/d这/rzv两/nz个/q数字/gi组成/gi一个/mq逆序/nz对/p。/w输入/v一个/mq数组/gi，/w求出/v这个/rz数组/gi中的/v逆序/nz对/p的/ude1总数/n。/w例如/v在/p数组/gi{/nz7/nz,/nz5/nz,/nz6/nz,/nz4/nz}/nz中/f，/w一共/d存在/v5/nz个/q逆序/nz对/p，/w分别/d是/vshi(/nz7/nz,/nz6/nz)/nz,/nz(/nz7/nz,/nz5/nz)/nz,/nz(/nz7/nz,/nz4/nz)/nz,/nz(/nz6/nz,/nz4/nz)/nz,/nz(/nz5/nz,/nz4/nz)/nz。/w看到/v这个/rz题目/gi，/w我们/rr的/ude1第一个/gi反应/vn是/vshi顺序/gi扫描/gi整个/b数组/gi。/w每/rz扫描/gi到/v一个/mq数字/gi的/ude1时候/n，/w逐个/d比较/gi该/rz数字/gi和/cc它/rr后面/f的/ude1数字/gi的/ude1大小/n。/w如果/c后面/f的/ude1数字/gi比/p它/rr小/a，/w则/d这/rzv两/nz个/q数字/gi就/d组成/gi了/ule一个/mq逆序/nz对/p。/w假设/gi数组/gi中/f含有/vn/nz个/q数字/gi。/w由于/p每个/r数字/gi都/d要/v和/cco/nz(/nzn/nz)/nz个/q数字/gi做/v比较/gi，/w因此/c这个/rz算法/gi的/ude1时间复杂度/gi是/vshio/nz(/nzn/nz^/nz2/nz)/nz。/w我们/rr在/p尝试/v找找/nz更快/d的/ude1算法/gi。/w我们/rr以/p数组/gi{/nz7/nz,/nz5/nz,/nz6/nz,/nz4/nz}/nz为/p例/n来/vf分析/gi统计/gi逆序/nz对/p的/ude1过程/gi。/w每次/r扫描/gi到/v一个/mq数字/gi的/ude1时候/n，/w我们/rr不能/v拿/v它/rr和/cc后面/f的/ude1每一个/nz数字/gi作/v比较/gi，/w否则/c时间复杂度/gi就是/vo/nz(/nzn/nz^/nz2/nz)/nz，/w因此/c我们/rr可以/v考虑/v先/d比较/gi两/nz个/q相邻/vi的/ude1数字/gi。/w我们/rr先用/n两/nz个/q指针/gi分别/d指向/v两/nz个/q子数组/gi的/ude1末尾/n，/w并/cc每次/r比较/gi两/nz个/q指针/gi指向/v的/ude1数字/gi。/w如果/c第一个子/nz数组/gi中的/v数字/gi大于/v第二个子/nz数组/gi中的/v数字/gi，/w则/d构成/v逆序/nz对/p，/w并且/c逆序/nz对/p的/ude1数目/gi等于/v第二个子/nz数组/gi中/f剩余/vn数字/gi的/ude1个数/n。/w如果/c第一个/gi数组/gi中的/v数字/gi小于/v或者/c等于/v第二个数/nz组/n中的/v数字/gi，/w则/d不/d构成/v逆序/nz对/p。/w每一次/d比较/gi的/ude1时候/n，/w我们/rr都/d把/pba较大/d的/ude1数字/gi从/p后/f往/p前/f复制到/v辅助/vn数组/gi中/f去/vf，/w确保/v辅助/vn数组/gi中的/v数字/gi是/vshi递增/vi排序/gi的/ude1，/w在/p把/pba较大/d的/ude1数字/gi复制到/v辅助/vn数组/gi之后/f，/w把/pba对应/vi的/ude1指针/gi向前/gi移动/vn一位/nz，/w接下来/vl进行/vn下/f一轮/nz比较/gi。/w经过/p前面/f的/ude1讨论/gi，/w我们/rr可以/v总结/gi出/vf统计/gi逆序/nz对/p的/ude1过程/gi：/w先/d把/pba数字/gi分隔/vi成子/nz数组/gi，/w先/d统计/gi出子/nz数组/gi内部/f的/ude1逆序/nz对/p的/ude1数目/gi，/w然后/c再/d统计/gi出/vf两/nz个/q相邻/vi子数组/gi之间/f的/ude1逆序/nz对/p的/ude1数目/gi，/w在/p统计/gi逆序/nz对/p的/ude1过程/gi中/f，/w还/d需要/v对/p数字/gi进行/vn排序/gi。/w如果/c对/p排序算法/gi很/d熟悉/v，/w我们/rr不难/d发现/v这个/rz排序/gi的/ude1过程/gi实际上/d就是/v归并排序/gi。/w我们/rr可以/v基于/p归并排序/gi写出/v如下/vi代码/gi：/w我们/rr知道/v归并排序/gi的/ude1时间复杂度/gi是/vshio/nz(/nznlon/nz)/nz,/nz比/p最/d直观/a的/ude1o/nz(/nzn/nz^/nz2/nz)/nz要/v快/a，/w但/c同时/c归并排序/gi需要/v一个/mq长度/gi为/pn/nz的/ude1辅助/vn数组/gi，/w相当于/v我们/rr用/p算法/gio/nz(/nzn/nz)/nz的/ude1空间/n消耗/gi换来/v了/ule时间/gi效率/gi的/ude1提升/gi，/w因此/c这/rzv是/vshi一种/nz用/p空间/n换/v时间/gi的/ude1算法/gi。/w