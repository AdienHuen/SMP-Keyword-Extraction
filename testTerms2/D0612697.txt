#MVC/gi设计模式/nz
今天/t，/w在读/b《/wobjective-c/gi编程/gi》/w，/w看到/v作者/nnt对/pmvc/gi的/ude1解释/gi非常/d地/ude2简单/a易懂/gi。/wmodel/gi-/nzview/gi-/nzcontroller/gi（/w模型-视图-控制器/nz，/w简称/vmvc/gi）/w是/vshi一种/nz设计模式/nz，/w核心理念/nz是/vshi：/w开发/gi程序/gi时/qt所/usuo创建/gi的/ude1类/gi，/w都/d应该/v可以/v归类/vi为/p模型/gi、/w视图/gi或/c控制器/n这/rzv三种/nz类型/gi。/w模型/gi负责/v保存/gi自己/rr的/ude1数据/gi，/w并能/v让/v其他/rzv对象/gi访问/gi这些/rz数据/gi。/w模型/gi不/d处理/vn用户界面/gi，/w也/d无法/v把/pba自己/rr画/v在/p屏幕/gi上/f。/w模型/gi唯一/b需要/v完成/v的/ude1任务/gi是/vshi保存/gi并/cc管理/gi数据/gi。/w视图/gi是/vshi应用/gi中的/v可见/c元素/gi，/w知道/v如何/ryv在/p屏幕/gi上/f画/v出/vf自己/rr，/w并能/v响应/v用户/gi的/ude1输入/v。/w视图/gi和/cc其/rz显示/gi的/ude1数据/gi并/cc没有/v直接/ad的/ude1关联/vn，/w也/d不/d负责/v其/rz显示/gi的/ude1保存/gi和/cc管理/gi。/w那/rzv什么/ry是/vshi视图/gi对象/gi呢/y，/w简单/a来说/uls，/w能够/v看见/v的/ude1对象/gi就是/v视图/gi对象/gi。/w控制器/n负责/v执行程序/gi的/ude1逻辑/n功能/gi，/w以/p连接/gi和/cc驱动/gi应用/gi的/ude1不同/a组成/gi部分/n。/w控制器/n可以/v处理事件/n，/w并能/v与/cc应用/gi中的/v其他/rzv对象/gi协同工作/n。/w应用/gi中的/v控制器/n对象/gi大/a都/d需要/v完成/v很/d多/a繁琐/a的/ude1任务/gi。/w模型/gi对象/gi和/cc视图/gi对象/gi之间/f并/cc没有/v直接/ad的/ude1关联/vn，/w需要/v由/p控制器/n从/p中/f协调/gi。/w控制器/n会/v接收/gi发自/v某些/rz对象/gi的/ude1消息/n，/w然后/c将/d相应/vi的/ude1指令/gi转发给/v其他/rzv对象/gi。/w