#Redis/gi集群/gi解决方案/gi调研/gi
最近/t因/p项目/gi需求/gi，/w调研/gi了/uleredis/gi集群/gi解决方案/gi。/w所/usuo参与/gi的/ude1项目/gi是/vshi分布式/gi对象/gi存储系统/gi，/w在/p今年/t计划/gi进行/vn新版本/nz开发/gi，/w要/v增加/v多/a数据中心/gi相关/vn功能/gi，/w以/p提高/v系统/gi的/ude1容灾性/nz。/w为了/p保证/v用户数据/gi在/p不同/a数据中心/gi的/ude1全局/n唯一性/n，/w需要/v增加/v类/gi元数据/gi服务器/gi的/ude1模块/gi，/w来/vf提供/v全局/n用户/gi数据服务/n。/w在/p但/c数据中心/gi版本/n中/f，/w有/vyou一个/mq类/gi元数据/gi服务器/gi的/ude1模块/gi来/vf提供/v该/rz服务/gi，/w后端/f数据存储/gi采用/v的/ude1是/vshihbase/gi，/w并用/vimemcached/gi做/v了/ule分布式/gi缓存/gi来/vf提高/v系统/gi性能/gi。/w由于/phbase/gi依赖/vhdfs/gi，/w而/cc我们/rr在/p设计/gi元数据/gi服务器时/n，/w想/v尽量/d保证/v其/rz简单/a、/w尽量少/l依赖/v其它/rz较为/d厚重/a的/ude1模块/gi，/w所以/c考虑/v是否/v能用/vredis/gi内存数据库/gi的/ude1性能/gi优势/gi及其/cc持久化/nz的/ude1功能/gi来/vf代替/vhbasememcached/nz的/ude1组合/gi，/w然后/c就/d有/vyou了/ule本次/r调研/gi。/w在/p调研/giredis/gi解决方案/gi之前/f，/w首先/d要/v弄清/v数据存储/gi的/ude1cap/gi理论/gi，/wc/nz:/w数据/gi一致性/gi，/wa/nz:/w数据/gi可用性/gi，/wp/nz：/w分区/gi容忍性/n。/w结合/vcap/gi理论/gi以及/cc本/rz项目/gi用户/gi相关/vn元数据/gi的/ude1数据量/n，/w首先/d要/v考虑/v的/ude1就是/v分区/gi容忍性/n，/w因此/c必须/d是/vshi分布式/gi的/ude1解决方案/gi；/w其次/c是/vshi数据/gi可用性/gi，/w因此/c必须/d有/vyou良好/a的/ude1性能/gi，/w而且/c在/p某个/rz节点/gi挂掉/nz后/f，/w整个/b系统/gi依然/d能/v正常/a对外/vn提供/v服务/gi；/w再/d就是/v数据/gi一致性/gi，/w要/v保证数据/n备份/gi的/ude1所有/b副本/n保持一致/nz。/w有/vyou了/ule以上/f前提/n，/w在/p进行/vn本次/r调研/gi时/qt，/w直接/ad查找/giredis cluster/nz相关/vn内容/gi。/w业界/n在/p生产/gi环境/n中/f进行/vn大规模/b使用/gi的/ude1，/w有/vyou两/nz种/q方案/gi：/w一/nz是/vshi豌豆荚/nz的/ude1codis/nz(/nz)/nz，/w两一个/nz是/vshitwitter/nz的/ude1twemproxy/nz(/nz)/nz。/w还有/v一种/nz解决方案/gi是/vshiredis/gi官方/gi的/ude1cluster/gi，/w由于/p出来/vf的/ude1时间/gi不长/v，/w所以/c没/d多少/ry人/n使用/gi。/w相关/vn对比/gi网络/gi上/f资料/gi很/d多/a，/w可以/v直接/ad查找/gi。/w调研/gi之后/f感觉/gicodis/nz可能/v更/d适合/v我们/rr的/ude1项目/gi。/w但/c有一点/nz在/p调研/gi之前/f还是/c被/pbei忽略/v掉/v了/ule，/w就是/v数据/gi的/ude1可用性/gi。/wredis/gi的/ude1数据备份/nz方案/gi，/w大致/d有/vyou三种/nz：/w一/nz是/vshiaof/gi，/w一/nz是/vshirdb/gi，/w还有/v就是/v基于/pmaster slave/nz进行/vn数据/gi的/ude1备份/gi。/w通过/p分析/gi三种/nz备份/gi方案/gi，/w发现/vredis/gi为了/p保证/v其/rz良好/a的/ude1性能/gi，/w都/d采用/v了/ule异步/gi备份/gi的/ude1方式/n，/w这/rzv导致/gi数据/gi存在/v丢失/v的/ude1风险/gi。/w虽然/caof/gi可以/v做到/v每/rz1/nz秒钟/qt刷/v一次/nz磁盘/gi，/w且/c性能/gi可以/v得到/v保证/v，/w但/c1/nz秒/qt的/ude1数据/gi丢失/v风险/gi在/p生产/gi环境/n也/d是/vshi不/d被/pbei允许/v的/ude1。/w最后/f查到/v了/ule豌豆荚/nz的/ude1架构师/gi介绍/gi其/rzcodis/nz业务/gi的/ude1ppt/gi，/w发现/v他们/rr在/p使用/gi时/qt也/d只是/d以/pcodis/nz在/p提供/v前端/gi缓存/gi，/w后端/f还有/v持久化/nz的/ude1存储/gi方案/gi。/w所以/c最终/d放弃/gi了/ule使用/gicodis/nz来/vf代替/vhbasememcached/nz的/ude1方案/gi。/w