#插入排序/gi算法/gi之/uzhiC++/gi实现/gi
插入排序/gi,/nz顾名思义/vl其/rz实现/gi形式/gi是/vshi插入/gi./nz在/p整个/b大小不一/l的/ude1队列/gi中/f,/nz /x第一次/nz:/w /x从/p一个/mq元素/gi开始/v,/nz将/d后面/f相邻/vi的/ude1元素/gi(/nz第二个/nz元素/gi)/nz提取/v出来/vf,/nz放在/v一个/mq变量/gi中/f暂时/d保存/gi,/nz然后/c和/cc第二个/nz元素/gi前面/f的/ude1那个/rz元素/gi(/nz第一个/gi元素/gi)/nz做/v比较/gi,/nz如果/c比/p它/rr大/a,/nz当然/d就/d不/d变动/vn位置/gi;/nz但/c如果/c比/p它/rr小/a,/nz就/d将/d前面/f那个/rz元素/gi移动/vn到/v第二个/nz元素/gi的/ude1位置/gi,/nz然后/c将/d变量/gi的/ude1元素/gi插入/gi放在/v第一个/gi元素/gi的/ude1位置/gi;/nz第二次/nz:/w /x从/p第二个/nz元素/gi开始/v将/d后面/f相邻/vi的/ude1元素/gi(/nz第三/nz个/q元素/gi)/nz提取/v出来/vf,/nz放在/v之前/f那个/rz变量/gi中/f暂时/d保存/gi,/nz然后/c和/cc第三/nz个/q元素/gi前面/f的/ude1那个/rz元素/gi(/nz第二个/nz元素/gi)/nz做/v比较/gi,/nz如果/c比/p它/rr小/a,/nz就/d将/d前面/f那个/rz元素/gi移动/vn到/v第三/nz个/q元素/gi的/ude1位置/gi,/nz /x接着/c再/d去/vf对比/gi更前一个/nz的/ude1元素/gi(/nz第一个/gi元素/gi)/nz,/nz如果/c比/p它/rr小/a,/nz就/d把/pba那/rzv更/d前/f一个/mq的/ude1元素/gi(/nz第一个/gi元素/gi)/nz又/d移动/vn到/v第二个/nz元素/gi的/ude1位置/gi,/nz然后/c将/d变量/gi中的/v元素/gi插入/gi放在/v第一个/gi元素/gi的/ude1位置/gi./nz /x这样/rzv这三/nz个/q元素/gi就/d依次/d是/vshi从小到大/nz的/ude1排序/gi./nz重复/gi第二次/nz的/ude1操作/gi,/nz直到/v最后/f,/nz整个/b插入排序/gi处理结果/n /x--/nz /x队列/gi是/vshi按照/p从小到大/nz的/ude1顺序排列/l的/ude1./nz /x复杂度/gi为/p o/nz(/nzn/nz^/nz2/nz)/nz./nz明白/v了/ule原理/gi就/d不难/d实现/gi了/ule,/nz下面/f用/pc/nz当/p练习/v实现/gi了/ule:/w第一次/nz做/v的/ude1时候/n,/nz没/d多/a想/v就/d这么/rz做/v了/ule:/w结果/n是/vshi对/p的/ude1,/nz但是/c感觉/gi实现/gi过程/gi繁琐/a了/ule./nz接着/c看看/v,/nz将/d第一个/gifor/nz循环/gi的/ude1参数/gi起点/gi换为/c1/nz,/nz将/d判断/gi也/d精简/v到/v第二个/nzfor/nz循环/gi里面/f,/nz /x出来/vf的/ude1效果/gi也/d是/vshi对/p的/ude1./nz /x而/cc代码/gi的/ude1精简/v效果/gi也/d立竿见影/n./nz看来/v不能/v忽视/v细节/gi!/nz!/nz第二次/nz实现/gi改/v了/ule下/f变成/v这样/rzv:/w最后/f结果/n是/vshi一样/uyy的/ude1./nz有点/d感慨/v,/nz很/d多/a人/n都/d有/vyou这样/rzv的/ude1时候/n,/nz /x代码/gi写/v久/a了/ule容易/ad麻木/a./nz而且/c可能/v当/p你/rr身体/gi很累/nz很/d疲乏/a的/ude1时候/n就/d会/v退而求其次/nz赶紧/d实现/gi功能/gi算了/v,/nz不/d很/d会/v想去/v如何/ryv实现/gi精简/v高效/b的/ude1代码/gi./nz但/c其实/d注重/v下/f细节/gi,/nz哪怕/c一个/mq参数/gi的/ude1改变/v,/nz也/d可能/v带来/v截然不同/vl的/ude1效果/gi./nz看来/v算法/gi是/vshi应该/v多/a练习/v,/nz温故知/nz新/a./nz