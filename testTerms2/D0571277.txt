#对于/p重定位/gi我/rr该/rz如何/ryv理解/gi？/w？/w
把/pba逻辑/n地址/gi转换/gi为/p内存/gi物理地址/gi的/ude1过程/gi称为/v重定位/gi重定位/gi本/rz词条/n缺少/v信息/gi栏/n、/w名片/n图/gi，/w补充/vn相关/vn内容/gi使/v词条/n更/d完整/a，/w还/d能/v快速/d升级/vi，/w赶紧/d来/vf编辑/gi吧/y！/w重定位/gi就是/v把/pba程序/gi的/ude1变换/gi成/v内存/gi中的/v实际/n空间/n的/ude1过程/gi，/w也/d就是说/c在/p装入/v时/qt对/p中/f指令和数据/gi的/ude1修改/gi过程/gi。/w他/rr是/vshi实现/gi在/p内存/gi中/f同时/c运行/gi的/ude1基础/gi。/w重定位/gi有/vyou两/nz种/q，/w分别/d是/vshi与/cc。/w目录/gi1231/nz分类/gi1/nz、/w：/w即/v在/p程序/gi装入/v内存/gi的/ude1过程/gi中/f完成/v，/w是/vshi指/v在/p程序/gi开始运行/l前/f，/w程序/gi中的/v各个/rz地址/gi有关/vn的/ude1项/q均/d已完成/v重定位/gi，/w地址变换/gi通常/d是/vshi在/p装入/v时/qt一次/nz完成/v的/ude1，/w以后/f不再/d改变/v，/w故/c成为/v静态重定位/gi。/w2/nz、/w：/w它/rr不是/c在/p程序/gi装入/v内存/gi时/qt完成/v的/ude1，/w而是/ccpu/gi每次/r访问/gi内存/gi时/qt由/p变换/gi机构/n（/w硬件/gi）/w自动/d进行/vn把/pba相对/d为/p。/w动态重定位/gi需要/v软件/gi和/cc硬件/gi相互配合/nz完成/v。/w2/nz时机/n将/d重定位/gi到/v物理/n的/ude1时机/n有/vyou三种/nz：/w1/nz、/w连接/gi时/qt。/w2/nz、/w程序/gi装入/v内存/gi时/qt。/w3/nz、/w程序执行/n时/qt。/w3/nz扩展/gi阅读/gi：/w重定位/gi是/vshi由/p操作系统/gi安排/v的/ude1。/w在/p前/f，/w系统/gi会/v计算/gi未/d使用/gi的/ude1内存/gi，/w然后/c将/d程序/gi装入/v，/w并/cc记下/v开始/v地址/gi。/w在/p执行/v有的/rz指令/gi时/qt，/w会/v将/d所有/b的/ude1地址/gi加/v个/q刚才/t记下/v的/ude1开始/v地址/gi，/w就/d叫/vi重定位/gi。/w重定位/gi与/ccexe/nz文件/gi无关/v，/w它/rr是/vshi程序/gi装入/v时/qt的/ude1一种/nz方式/n。/w利用/v重定位/gi可/v提高/v内存空间/nz的/ude1使用率/n。/w