#Aerospike C/gi客户端/gi手册/gi―/w―/w―/w共享内存/nz
共享内存/nz每个/r客户端/gi实例/gi运行/gi一个/mq额外/b的/ude1集群/gi侍服/nz线程/gi，/w周期/n地/ude2轮询/nz集群/gi各/rz服务器/gi节点/gi以/p得到/v集群/gi的/ude1状态/gi。/w在/p一个/mq单/b进程/gi//nz多线程/gi环境/n，/w只/d需要/v一个/mq客户端/gi实例/gi。/w此/rzs实例/gi被/pbei设计/gi成/v跨/v多线程/gi共享/gi。/w在/p一个/mq多/a进程/gi//nz单线/n程环境/nz，/w需要/v多/a个/q客户端/gi实例/gi，/w意味着/v多/a个/q集群/gi侍服/nz线程/gi轮询/nz各/rz服务器/gi节点/gi，/w并/cc得到/v完全相同/nz的/ude1集群/gi状态/gi。/w共享内存/nz方式/n被/pbei设计/gi出来/vf，/w以/p解决/v这种/r效率/gi低下/a情况/n。/w启用/gi共享/gi方式/n时/qt，/w集群/gi状态/gi（/w包括/v节点/gi和/cc数据/gi分区/gi映射/gi）/w存放/v进一个/nz共享内存/nz段/q。/w然后/c，/w只有/c一个/mq集群/gi侍服/nz拥有者/n进程/gi轮询/nz各/rz服务/gi节点/gi，/w获取/gi集群/gi的/ude1状态/gi，/w并/cc将/d写入/gi这个/rz共享内存/nz段/q。/w其它/rz客户端/gi从/p共享内存/nz中/f读取/gi集群/gi状态/gi，/w不再/d去/vf轮询/nz各/rz服务器/gi节点/gi。/w多/a进程/gi//nz单线/n程环境/nz是/vshi类/giphp/gi和/ccpython/gi等/udeng语言/gi环境/n中/f常见/a的/ude1方式/n。/waerospike php/nz和/ccpython/gi客户端/gi实现/gi，/w就是/v通过/p调用/giaerospike c/nz客户端/gi，/w来/vf获得/v客户端/gi共享内存/nz方式/n的/ude1能力/gi。/w共享内存/nz配置/gi共享内存/nz使用/gias/nz_/nzconfig/nz的/ude1如下/vi域/ng成员/nnt来/vf配置/gi：/w启用/gi共享内存/nz方式/n共享内存/nz方式/n需/v在/paerospike/nz_/nzconnect/nz(/nz)/nz之前/f启用/gi。/w操作/gi备注/n若/c共享内存/nz段/q不存在/ns，/w客户端/gi会/v自动/d创建/gi。/w第一个/gi客户端/gi进程/gi通过/p获得/v共享内存/nz锁/v，/w来/vf占有/v集群/gi侍服/nz能力/gi，/w。/w后继/v的/ude1客户端/gi进程/gi从/p共享内存/nz段/q读取/gi集群/gi状态/gi，/w但/c不/d做/v集群/gi侍服/nz也/d不/d写/v共享内存/nz。/w应用/gi退出/gi前/f应/v调用/giaerospike/nz_/nzclose/nz(/nz)/nz。/w此/rzs方法/gi释放/gi共享内存/nz锁/v。/w另一个/nz客户端/gi进程/gi会/v自动/d获得/v锁/v，/w成为/v新的/a群集/n侍服/nz拥有者/n。/w若/c应用/gi在/p释放/gi锁/v之前/f死掉/nz，/w另一个/nz客户端/gi进程/gi仍/d将/d接管/v集群/gi待服/nz，/w但/c会/v有/vyou一个/mq延迟/v（/w默认/v30/nz秒/qt）/w。/w在/p这个/rz延迟/v期间/f集群/gi状态/gi仍然/d可读/v，/w但/c集群/gi侍服/nz（/w轮询/nz新的/a集群/gi状态/gi）/w不会/v开始/v，/w直到/v另一个/nz客户端/gi进程/gi接管/v。/w共享内存/nz段/q可/v使用/gi这个/rz命令/gi查看/gi：/w若/c共享内存/nz配置/gi变量/gi需要/v更改/gi（/w比如/v：/w增加/v最大/gm节点/gi数/n）/w，/w新的/a共享内存/nz段/q要/v重新/d创建/gi。/w有/vyou两/nz种/q方式/n升级/vi应用/gi。/w一次/nz升级/vi关闭/gi所有/b应用/gi。/w若/c共享内存/nz还/d存在/v，/w则/d删除/gi。/w重启/gi应用/gi。/w滚动/v升级/vi在/p新的/a应用/gi中/f设置/gi一个/mq不同/a的/ude1共享内存/nzkey/gi。/w新/a应用/gi实例/gi使用/gi新的/a共享内存/nz段/q（/w由/p第一个/gi新/a应用/gi实例/gi创建/gi）/w。/w旧/a应用/gi实例/gi继续/v使用/gi旧/a共享内存/nz段/q。/w逐个/d停止/gi旧/a应用/gi实例/gi，/w用/p新/a应用/gi实例/gi替代/v。/w当/p所有/b旧/a应用/gi实例/gi停止/gi后/f，/w删除/gi旧/a共享内存/nz段/q（/w若/c还/d存在/v）/w。/w原文/n链接/gi：/w译/v    /x者/k：/w歪脖/nz大肚子/nq/nz