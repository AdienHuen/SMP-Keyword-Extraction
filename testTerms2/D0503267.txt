#设计模式/nz /x-/nz /x单例模式/gi
单例模式/gi /x顾名思义/vl，/w就是/v只有/c单一/gi对象/gi实例/gi。/w即/v，/w程序运行/n时/qt该类/r只/d存在/v一个/mq实例/gi对象/gi。/w可/v充当/v全局变量/gi使用/gi，/w保证数据/n的/ude1唯一性/n。/w单例模式/gi属于/v创建型模式/gi，/w比较简单/l的/ude1设计模式/nz，/w轻松/a学会/v，/w轻松/a使用/gi。/w原因/n /x对于/p很/d多/a类/gi来说/uls，/w单例/gi是/vshi十分/d重要/a的/ude1，/w主要/b存在/v于/p系统资源/gi浪费/gi等/udeng问题/gi。/w比如/v我们/rr熟知/v的/ude1windows系统/gi下/f的/ude1任务/gi管理器/nz，/w不管/c你/rrctrlshiftesc/nz多少/ry次/qv，/w它/rr都/d只/d显示/gi一个/mq任务/gi管理器/nz，/w因为/c它/rr不要/d两/nz个/q或/c多/a个/q，/w这样/rzv既/c浪费资源/n还要/d保证数据/n的/ude1及时/ad同步/gi更新/gi。/w还有/v我们/rr的/ude1系统/gi时钟/gi，/w音频/gi管理/gietc/nz。/w上述/b类型/gi就/d不/d需要/v多/a个/q实例/gi，/w所以/c前辈/n们/k很/d明智/a的/ude1发现/v了/ule单例/gi这/rzv一/nz美好/a设计/gi。/w使用/gi /x有/vyou多/a种/q实现/gi方式/n，/wjava/gi代码/gi如下/vi：/w1./nz /x将/d对象/gi保存/gi在/p成员/nnt属性/gi，/w静态方法/gigetinstance/nz(/nz)/nz /x获得/v类/gi对象/gi。/w（/w由于/p构造方法/gi是/vshiprivate/nz私有/gi的/ude1，/w所有/b其他/rzv类/gi不能/v通过/pnew /nz来/vf创建对象/n，/w保证/v了/ule唯一/b）/w。/w2./nz /x程序运行/n /x静态/gi getinstance/nz（/w）/w /x获得/v对象/gi，/w第一次/nz运行/gi时/qt创建对象/n。/w3./nz /x为了/p防止/gi多/a个/q线程/gi同时/c运行/gi静态方法/gigetinstance /nz获得/v对象/gi实例/gi，/winstance /nz还没来/nz的/ude1及/ccnew/nz和/cc赋/ng /x就/d被/pbei其他/rzv线程/gi以为/v是/vshinull/gi，/w多/a次/qvnew/nz出/vf实例/gi，/w所以/c我们/rr在/p第/mq1/nz,/nz2/nz方法/gi里/f加入/v了/ule同步/gi锁/v。/w  /x4./nz /x遗憾/gi的/ude1是/vshi，/w整个/b方法/gi加入/v同步/gi锁/v，/w让/v效率/gi低下/a了/ule。/w所以/c机制/gi的/ude1前辈/n提出/v里/f终极/n方案/gi /x―/w―/w /x双重/b同步/gi检测/gi锁定/v，/w将/d同步/gi语句/gi放入/v if /nz语句/gi。/w /x调用/gi /x使用/gi时/qt，/w类名/n /x./nz getinstance/nz(/nz)/nz /x即可/v获得/v实例/gi。/w单例/gi和/cc静态/gi类/gi的/ude1差别/n单例/gi可以/v继承/gi /x，/w静态/gi类/gi不/d可以/v单例/gi可以/v控制/vn初始化/v /x，/w静态/gi类/gi不/d可以/v单例/gi一般/ad要/v联系/gi类/gi里/f已有/v数据/gi /x静态/gi类/gi一般/ad组织/gi域/ng逻辑/n，/w比如说/vl:/wmath/nz./nzfloor/nz(/nznum/nz)/nz。/w