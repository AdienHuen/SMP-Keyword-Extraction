#Java/gi对象/gi自我救赎/gi机制/gi
一/nz./nz可达性/gi分析/gi算法/gi /x虚拟机/gi通过/p可达性/gi分析/gi算法/gi来/vf判定/gi对象/gi是否是/l存活/vi的/ude1，/w这个/rz算法/gi的/ude1基本/a思想/gi是/vshi：/w通过/p一系列/b的/ude1称为/v“/wgc roots/nz”/w的/ude1对象/gi作为/p起点/gi，/w从/p这些/rz节点/gi向下/vf搜索/gi，/w搜索/gi所/usuo走过/gi的/ude1路/n称为/v引用/gi链/ng，/w当/p一个/mq对象/gi到/vgc roots/nz没有/v任何/rz引用/gi链/ng相连/vi时/qt，/w则/d证明/v此/rzs对象/gi时/qt不/d可用/v的/ude1。/w二./nz对象/gi的/ude1自我救赎/gi机制/gi /x在/p可达性/gi分析/gi算法/gi执行/v过后/v，/w即使/c在/p可达性/gi分析/gi算法/gi中/f不/d可达/nz的/ude1对象/gi，/w也/d并非/v一定/b要/v被/pbei宣告/v死亡/gi，/w这时候/rzt它们/rr暂时/d处于/v一个/mq“/w缓刑/vi”/w阶段/gi，/w要/v宣告/v一个/mq对象/gi死亡/gi，/w则/d至少/d要/v经历/gi两/nz次/qv标记/gi过程/gi，/w最后/f才能/n宣判/v结果/n。/w其/rz过程/gi如/v图/gi：/wfinalize/nz(/nz)/nz方法/gi是/vshi对象/gi逃脱/v死亡/gi命运/n的/ude1最后/f一次/nz机会/gi，/w并且/c任何/rz一个/mq对象/gi的/ude1finalize/nz(/nz)/nz方法/gi都/d只/d会/v被/pbei系统/gi自动/d调用/gi一次/nz，/w如果/c对象/gi面临/v下一次/nz回收/vn，/w它/rr的/ude1finalize/nz(/nz)/nz方法/gi不会/v执行/v，/w只能/v面对/v死亡/gi的/ude1命运/n。/w