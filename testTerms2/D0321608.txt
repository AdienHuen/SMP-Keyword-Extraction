#Java/gi基础-/nz24/nz
java/gi基础-网络/nz编程/gi网络编程/gi21/nz、/w网络编程/gi（/wtcp/gi-/nz上传/v图片/gi）/w需求/gi：/w上传/v图片/gi /x客户端/gi：/w测试代码/n：/w输出/gi结果/n：/w2/nz、/w网络编程/gi（/wtcp/gi-客户端/nz并发/gi上传/v图片/gi）/w上/f一/nz节/q的/ude1服务端/nz有/vyou个/q局限性/n。/w当/pa/nz客户/n连接/gi上/f以后/f，/w被/pbei服务端/nz获取/gi到/v，/w服务端/nz执行/v具体/a流程/gi，/w这时/rztb/nz客户端/gi连接/gi，/w只有/c等待/gi。/w因为/c服务端/nz还/d没/d处理/vn完/via/nz客户端/gi的/ude1请求/gi，/w还有/v循环/gi回来/v执行/v下次/taccept/nz方法/gi。/w所以/c暂时/d获取/gi不到/vb/nz客户端/gi对象/gi。/w那么/c为了/p可以/v让/v多/a个/q客户端/gi同时/c并发访问/gi服务端/nz，/w那么/c服务端/nz最好/d就是/v将/d每个/r客户端/gi封装/gi到/v一个/mq单独/d的/ude1线程/gi中/f，/w这样/rzv，/w就/d可以/v同时/c处理/vn多/a个/q客户端/gi的/ude1请求/gi。/w那么/c如何/ryv定义/gi线程/gi呢/y？/w /x只要/c明确/a了/ule每一个/nz客户端/gi要/v在/p服务端/nz执行/v的/ude1代码/gi即可/v。/w将/d该/rz代码/gi存入/v到/vrun/nz方法/gi中/f。/wdemo/gi输出/gi结果/n：/w3/nz、/w网络编程/gi（/wtcp/gi-客户端/nz并发/gi登陆/vi）/w客户端/gi通过/p键盘/gi录入/gi用户名/n，/w服务端/nz对/p这个/rz用户名/n进行/vn校验/v。/w如果/c该/rz用户/gi存在/v，/w在/p用户端/nz显示/gixxx/nz，/w已/d登录/gi。/w并/cc在/p客户端/gi显示/gixxx/nz，/w欢迎光临/nz。/w如果/c该/rz用户/gi存在/v，/w在/p服务器端/gi显示/gixxx/nz，/w尝试/v登陆/vi，/w并/cc在/p客户端/gi显示/gixxx/nz，/w该/rz用户/gi不存在/ns最多/ad登陆/vi3/nz次/qv。/w测试代码/n：/w输出/gi结果/n：/w4/nz、/w网络编程/gi（/w浏览器/gi客户端-自定义/nz服务端/nz）/w演示/gi客户端/gi和/cc服务端/nz测试代码/n：/w输出/gi结果/n：/w5/nz、/w网络编程/gi（/w自定义/nz浏览器-/nztomcat/nz服务器/gi）/w客户端/gi：/w自定义/nz浏览器/gi /x服务端/nz：/wtomcat/nz服务器/gi /x首先/d，/w要/v模拟/gi一个/mqie/nz浏览器/gi，/w就要/d了解/v浏览器/gi是/vshi怎么样/ryv和/cc服务器进行/n交互/gi的/ude1，/w我们/rr通过/p在/pie/nz浏览器/gi上/f输入/v：/whttp/gi:/w//nz//nzlocalhost/nz:/w10003/nz去/vf访问/gi下面/f代码/gi，/w就/d可以/v截取/v浏览器/gi的/ude1访问信息/i，/w因此/c可以/v模拟/giie/nz与/cc其他/rzv服务器/gi交互/gi的/ude1信息/gi。/w测试代码/n：/w输出/gi结果/n：/w由此可见/c：/w自定义/nz服务器/gi接收/gi到/v了/ule以下/f信息/gi：/w由此/d可以/v模仿/gi以上/f模式/gi编/v下一个/nz浏览器/gi去/vf访问/gitomcat/nz服务器/gi。/w测试代码/n：/w以上/f代码/gi的/ude1含义/n，/w该/rz自定义/nzie/nz欲/d访问/gi的/ude1资源/gi是/vshi服务器/gitomcat/nz上/f的/ude1资源/gi，/w该/rz服务器/gi的/ude1端口/gi是/vshi8080/nz，/w然后/c给/p服务器/gi发去/v浏览器/gi的/ude1识别/gi信息/gi，/w即/vie/nz欲/d访问/gi服务器/gi，/w并/cc请求/gi获取/gi在/p8080/nz端口/gi下/fmyweb/nz文件夹/n下/f的/ude1hello/nz./nzhtml/gi资源/gi，/w因此/c在/p此/rzs路径/gi要/v存在/v一个/mq名为/vhello/nz./nzhtml/gi的/ude1文件/gi，/w里面/f内容/gi如下/vi，/w最后/f把/pba内容/gi打印/v在/p自定义/nzie/nz的/ude1控制/vn台上/s。/w输出/gi结果/n：/w6/nz、/w网络编程/gi（/w自定义/nz图形界面/nz浏览器-/nztomcat/nz服务器/gi）/wdemo/gi输出/gi结果/n：/w7/nz、/w网络编程/gi（/wurl/gi类/gi和/ccurlconnection/nz类/gi）/wjava/gi.net/gi./nzurl url/nz类/gi：/w类/gi url /nz代表/nnt一个/mq统一/vn资源/gi定位/gi符/v，/w它/rr是/vshi指向/v互联网/gi“/w资源/gi”/w的/ude1指针/gi。/w资源/gi可以/v是/vshi简单/a的/ude1文件/gi或/c目录/gi，/w也/d可以/v是/vshi对/p更为/d复杂/a的/ude1对象/gi的/ude1引用/gi，/w例如/v对/p数据库/gi或/c搜索引擎/gi的/ude1查询/gi。/w测试代码/n：/w输出/gi结果/n：/w令/v外一个/nz很/d实用/a的/ude1类/giurlconnection/nz，/w在于/vjava网络编程/gi中/f非常/d实用/a，/w而且/c是/vshi在/p应用/gi层/gi上/f的/ude1使用/gi，/w例如/v，/w下面/f的/ude1例子/gi也/d同样/d提取/v8080/nz端口/gi服务器/gi的/ude1html/gi文件/gi，/w可是/c提取/v出来/vf的/ude1文件/gi不/d带有/v传输层/nz上/f文件/gi的/ude1提示信息/n。/w测试代码/n：/w输出/gi结果/n：/w把/pba前面/f图形化/n的/ude1ie/nz例子/gi里/f的/ude1showdir/nz(/nz)/nz代码/gi改进/gi后/f调试/gi如下/vi：/w输出/gi结果/n：/w