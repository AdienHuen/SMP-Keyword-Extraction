#关于/p类似/a新浪/ntc微博/n的/ude1后台/gi问题/gi
前段时间/nz公司/nis做/v了/ule一个/mq类/gi新浪/ntc微博/n业务/gi的/ude1手机/gi应用/gi，/w关于/p数据库设计/gi有/vyou一/nz些/q疑问/n：/w1/nz：/w类/gi新浪/ntc微博/n发布/gi与/cc转发/gi，/w网上/s有/vyou介绍/gi说/v是/vshi通过/p消息/n机制/gi来/vf的/ude1（/wactivemq/nz发布/gi//nz订阅/v模式/gi?/nz）/w,/nz优先/vd对/p当前/t在线/vn的/ude1用户/gi推送/nz./nz但是/c它/rr微博/n内容/gi是/vshi数据库/gi是/vshi怎么/ryv设计/gi的/ude1呢/y?/nz比如/v,/nz一条新/nz微博/n:/w编号/gi,/nz内容/gi,/nz关键词/gi,/nz时间/gi,/nz收藏/v数/n,/nz点/gi赞数/nz,/nz回复数/n,/nz转发/gi数/n,/nz等等/udeng那么/c,/nz转发/gi一条/nz微博/n呢/y,/nz是不是/v在/p同一/b张/q表/n中/f添加/gi几个字/nz段/q,/nz比如/v:/w是否/v转发/gi标志/n,/nz转发/gi自/p哪/ry条/q微博/n(/nz父/ng编号/gi)/nz,/nz等等/udeng我/rr想/v如果/c是/vshi这样的话/l,/nz在/p新浪/ntc微/ag这样/rzv的/ude1平台/gi上/f的话/udh效率/gi应该/v会/v低/a得/ude3可怕/a吧/y,/nz各种/rz索引/gi分区/gi分布/vi应该/v都/d没用/vi的/ude1吧/y?/nz2/nz:/w同样/d还有/v回复/v也/d有/vyou这样/rzv的/ude1疑问/n./nz我/rr知道/v新浪/ntc微博/n是/vshi全球/gi最大/gm的/ude1redis/gi用户/gi，/w那它/r是否/v全部/m采用/v这种/r非关系型数据库/gi来/vf保存/gi数据/gi的/ude1呢/y？/w更多/ad分享/gi到/v：/w|/nz|/nz管理/gi回复/v次数/gi：/w6/nz得分/n：/w0/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz10/nz /x16/nz:/w28/nz:/w00/nz完全/ad不是/c你/rr想像/v的/ude1那样/rzv。/w去/vf百度/ntc文库/n或者/cinfoq/nz的/ude1访谈/vn里/f去找/v找/v相应/vi的/ude1ppt/gi和/cc架构/gi介绍/gi。/w|/nz|/nz管理/gi得分/n：/w0/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz10/nz /x16/nz:/w37/nz:/w45/nz引用/gi1/nz楼/nskgary/nz的/ude1回复/v:/w完全/ad不是/c你/rr想像/v的/ude1那样/rzv。/w去/vf百度/ntc文库/n或者/cinfoq/nz的/ude1访谈/vn里/f去找/v找/v相应/vi的/ude1ppt/gi和/cc架构/gi介绍/gi。/w好/a吧/y，/w其实/d本文/r重点/n只是/d把/pba新浪/ntc微博/n作为/p一个/mq例子/gi，/w不是/c在/p探讨/v新浪/ntc微博/n的/ude1后台/gi架构/gi问题/gi，/w我/rr还/d远远/d远远/d远远/d没有/v达到/v这种/r程度/n。/w只是/d公司/nis有/vyou个/q类/gi新浪/ntc微博/n部分/n业务/gi的/ude1项目/gi（/w当然/d，/w跟/p新浪/ntc微博/n完全/ad不是/c一个/mq量级/n的/ude1平台/gi）/w，/w在/p这种/r情况下/nz，/w数据库/gi怎么/ryv设计/gi更为/d合理/a一点/m。/w当然/d，/w新浪/ntc微博/n也/d不是/c一/nz天/qt两/nz天/qt练成/nz的/ude1，/w肯定/v也/d是/vshi不断/d的/ude1升级/vi的/ude1。/w在/p不同/a的/ude1用户量/n数据量/n并发/gi量/n的/ude1情况下/nz，/w架构/gi肯定/v是/vshi在/p不断/d变化/gi升级/vi。/w只是/d请教/gi一下/m，/w在/p这种/r相/d的/ude1业务逻辑/gi下/f，/w假设/gi数据量/n并发/gi量/n比较/gi大/a的/ude1情况下/nz（/w呃/y，/w这个/rz还/d真/a不好/a量化/gi，/w轻拍/nz）/w，/w牛/n人们/n是/vshi怎样/ryv来/vf考虑/v这种/r数据库设计/gi的/ude1！/w！/w|/nz|/nz管理/gi得分/n：/w10/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz10/nz /x16/nz:/w44/nz:/w53/nz引用/gi2/nz楼/nxiaocaierdie/nz的/ude1回复/v:/wquote/nz:/w /x引用/gi1/nz楼/nskgary/nz的/ude1回复/v:/w完全/ad不是/c你/rr想像/v的/ude1那样/rzv。/w去/vf百度/ntc文库/n或者/cinfoq/nz的/ude1访谈/vn里/f去找/v找/v相应/vi的/ude1ppt/gi和/cc架构/gi介绍/gi。/w好/a吧/y，/w其实/d本文/r重点/n只是/d把/pba新浪/ntc微博/n作为/p一个/mq例子/gi，/w不是/c在/p探讨/v新浪/ntc微博/n的/ude1后台/gi架构/gi问题/gi，/w我/rr还/d远远/d远远/d远远/d没有/v达到/v这种/r程度/n。/w只是/d公司/nis有/vyou个/q类/gi新浪/ntc微博/n部分/n业务/gi的/ude1项目/gi（/w当然/d，/w跟/p新浪/ntc微博/n完全/ad不是/c一个/mq量级/n的/ude1平台/gi）/w，/w在/p这种/r情况下/nz，/w数据库/gi怎么/ryv设计/gi更为/d合理/a一点/m。/w当然/d，/w新浪/ntc微博/n也/d不是/c一/nz天/qt两/nz天/qt练成/nz的/ude1，/w肯定/v也/d是/vshi不断/d的/ude1升级/vi的/ude1。/w在/p不同/a的/ude1用户量/n数据量/n并发/gi量/n的/ude1情况下/nz，/w架构/gi肯定/v是/vshi在/p不断/d变化/gi升级/vi。/w只是/d请教/gi一下/m，/w在/p这种/r相/d的/ude1业务逻辑/gi下/f，/w假设/gi数据量/n并发/gi量/n比较/gi大/a的/ude1情况下/nz（/w呃/y，/w这个/rz还/d真/a不好/a量化/gi，/w轻拍/nz）/w，/w牛/n人们/n是/vshi怎样/ryv来/vf考虑/v这种/r数据库设计/gi的/ude1！/w！/w把/pba你/rr的/ude1业务/gi进行/vn抽象/gi，/w不要/d万事/n第一想/nz数据库/gi就是/v了/ule。/w数据库/gi，/w只是/d你/rr存/v数据/gi的/ude1地方/n，/w你/rr首先/d要/v做/v的/ude1是/vshi根据/p业务/gi的/ude1需要/v来/vf决定/v怎么/ryv存/v。/w例如/v把/pba数据/gi分成/vi高并发/gi存取/gi，/w但/c可靠性/gi要求/n不/d高/a的/ude1数据/gi；/w绝对/d要求/n可靠/a的/ude1数据/gi；/w可/v分散/a处理/vn的/ude1数/n。/w然后/c再来/d想/v，/w每/rz一块/s的/ude1数据/gi应该/v怎么/ryv存/v，/w比如/v必须/d分割/gi存/v，/w比如/v直接/ad用/p内存/gi缓存/gi数据库/gi等等/udeng|/nz|/nz管理/gi得分/n：/w40/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz20/nz /x21/nz:/w05/nz:/w57/nz引用/gi楼主/nxiaocaierdie/nz的/ude1回复/v:/w前段时间/nz公司/nis做/v了/ule一个/mq类/gi新浪/ntc微博/n业务/gi的/ude1手机/gi应用/gi，/w关于/p数据库设计/gi有/vyou一/nz些/q疑问/n：/w1/nz：/w类/gi新浪/ntc微博/n发布/gi与/cc转发/gi，/w网上/s有/vyou介绍/gi说/v是/vshi通过/p消息/n机制/gi来/vf的/ude1（/wactivemq/nz发布/gi//nz订阅/v模式/gi?/nz）/w,/nz优先/vd对/p当前/t在线/vn的/ude1用户/gi推送/nz./nz但是/c它/rr微博/n内容/gi是/vshi数据库/gi是/vshi怎么/ryv设计/gi的/ude1呢/y?/nz比如/v,/nz一条新/nz微博/n:/w编号/gi,/nz内容/gi,/nz关键词/gi,/nz时间/gi,/nz收藏/v数/n,/nz点/gi赞数/nz,/nz回复数/n,/nz转发/gi数/n,/nz等等/udeng那么/c,/nz转发/gi一条/nz微博/n呢/y,/nz是不是/v在/p同一/b张/q表/n中/f添加/gi几个字/nz段/q,/nz比如/v:/w是否/v转发/gi标志/n,/nz转发/gi自/p哪/ry条/q微博/n(/nz父/ng编号/gi)/nz,/nz等等/udeng我/rr想/v如果/c是/vshi这样的话/l,/nz在/p新浪/ntc微/ag这样/rzv的/ude1平台/gi上/f的话/udh效率/gi应该/v会/v低/a得/ude3可怕/a吧/y,/nz各种/rz索引/gi分区/gi分布/vi应该/v都/d没用/vi的/ude1吧/y?/nz2/nz:/w同样/d还有/v回复/v也/d有/vyou这样/rzv的/ude1疑问/n./nz我/rr知道/v新浪/ntc微博/n是/vshi全球/gi最大/gm的/ude1redis/gi用户/gi，/w那它/r是否/v全部/m采用/v这种/r非关系型数据库/gi来/vf保存/gi数据/gi的/ude1呢/y？/w如果/c你/rr仅仅/d从/p“/w静态数据/n结构/gi”/w的/ude1角度看/v问题/gi，/w永远/d也/d搞不清楚/l这个/rz“诀/nz窍”/nz。/w如果/c换成/v动态/gi的/ude1行为/n设计/gi就/d好/a了/ule！/w要/v知道/v，/w用户/gi要/v的/ude1是/vshi“/w方便性/n”/w，/w而/cc不是/c什么/ry学术/n上/f的/ude1一致性/gi，/w这/rzv就是/v诀窍/n所在/n。/w假设/gi一/nz个人/n发/v了/ule微博/n，/w假设/gi有/vyou2/nz万/nz粉丝/nf，/w假设/gi系统/gi先/d找/v一台/nz闲置/vn的/ude1机器/gi去/vf收集/v这/rzv2/nz万/nz粉丝/nf基本资料/nz，/w然后/c排/v个/q序/n（/w比如说/vl查询/gi“/w关系/gi活跃度/nz统计表/n”/w）/w，/w然后/c分成/vi40/nz个/q单独/d的/ude1任务/gi分给/v（/w1000/nz台/q机器/gi中/f反应/vn最快/d的/ude1）/w40/nz台/q机器/gi“/w慢慢地/nz”加/nz消息/n数据/gi，/w假设/gi这个/rz过程/gi需要/v2/nz分钟/qt（/w别忘记/nz了/ule同时/c还有/v另外/c上/f万/nz微博/n更新/gi需要/v处理/vn）/w。/w那么/c假设/gi在/p1/nz分/qt10/nz秒/qt的/ude1时候/n某人/rr看到/v了/ule自己/rr的/ude1消息/n、/w而/cc另一个人/nz没有/v看到/v消息/n，/w那么/c这/rzv两/nz个/q用户/gi会/v像/v学究/n一样/uyy找/v新浪/ntc论证/vn一番/mq吗/y？/w不会/v的/ude1。/w因此/c推送/nz消息/n是/vshi“长/nz事务/gi、/w非/b数据库/gi事务/gi、/w异步/gi过程/gi、/w中间/f不/d需要/v纠结/vi数据/gi一致性/gi”/w的/ude1工作/gi。/w只要/c能够/v复载/nz均衡/a地/ude2保证/v任务/gi被/pbei执行/v就/d好/a了/ule。/w与/cc其/rz纠结/vi于/p“/w一/nz台/q机器/gi、/w一瞬间/mq”/w在/p数据库/gi上/f做/v一个/mq大/a事务/gi，/w不如/v让/v一大/n堆/gi机器/gi慢一点/nz去/vf负载均衡/gi地/ude2做/v。/w|/nz|/nz管理/gi得分/n：/w10/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz20/nz /x21/nz:/w11/nz:/w25/nz引用/gi2/nz楼/nxiaocaierdie/nz的/ude1回复/v:/wquote/nz:/w /x引用/gi1/nz楼/nskgary/nz的/ude1回复/v:/w完全/ad不是/c你/rr想像/v的/ude1那样/rzv。/w去/vf百度/ntc文库/n或者/cinfoq/nz的/ude1访谈/vn里/f去找/v找/v相应/vi的/ude1ppt/gi和/cc架构/gi介绍/gi。/w好/a吧/y，/w其实/d本文/r重点/n只是/d把/pba新浪/ntc微博/n作为/p一个/mq例子/gi，/w不是/c在/p探讨/v新浪/ntc微博/n的/ude1后台/gi架构/gi问题/gi，/w我/rr还/d远远/d远远/d远远/d没有/v达到/v这种/r程度/n。/w只是/d公司/nis有/vyou个/q类/gi新浪/ntc微博/n部分/n业务/gi的/ude1项目/gi（/w当然/d，/w跟/p新浪/ntc微博/n完全/ad不是/c一个/mq量级/n的/ude1平台/gi）/w，/w在/p这种/r情况下/nz，/w数据库/gi怎么/ryv设计/gi更为/d合理/a一点/m。/w当然/d，/w新浪/ntc微博/n也/d不是/c一/nz天/qt两/nz天/qt练成/nz的/ude1，/w肯定/v也/d是/vshi不断/d的/ude1升级/vi的/ude1。/w在/p不同/a的/ude1用户量/n数据量/n并发/gi量/n的/ude1情况下/nz，/w架构/gi肯定/v是/vshi在/p不断/d变化/gi升级/vi。/w只是/d请教/gi一下/m，/w在/p这种/r相/d的/ude1业务逻辑/gi下/f，/w假设/gi数据量/n并发/gi量/n比较/gi大/a的/ude1情况下/nz（/w呃/y，/w这个/rz还/d真/a不好/a量化/gi，/w轻拍/nz）/w，/w牛/n人们/n是/vshi怎样/ryv来/vf考虑/v这种/r数据库设计/gi的/ude1！/w！/w数据库/gi怎样/ryv的/ude1结构/gi都/d可以/v，/w为了/p速度/n你/rr还/d可以/v选择/gi内存数据库/gi，/w或者/c干脆/d连/ulian“/w关系/gi模式/gi”/w都/d不要/d了/ule（/w只要/c是/vshi文档/gi型/k嵌套/v结构/gi，/w根据/p顶层/fid/nz直接/ad向下/vf查找/gi子集合/nz）/w。/w数据/gi的/ude1结构/gi对/p性能/gi不/d起/vf决定/v作用/gi，/w决定/v这类/r程序/gi“/w生死”/nz的/ude1是/vshi异步/gi并行算法/gi，/w是/vshi集群/gi上/f的/ude1分布式/gi任务调度/gi框架/gi。/w|/nz|/nz管理/gi得分/n：/w40/nz回复/v于/p：/w /x2015/nz-/nz02/nz-/nz20/nz /x21/nz:/w14/nz:/w14/nz当/p你/rr敢于/v花/n几/d百/nz万元/q买/v内存/gi，/w把/pba数/nt/nz大/a的/ude1数据库/gi都/d放到/v内存/gi里/f，/w这时候/rzt再/d算一下/nz“/w瓶颈/gi”/w就/d知道/v了/ule，/w真正/d的/ude1瓶颈/gi在于/vcpu/gi。/w如果/c你/rr有/vyou1000/nz颗/qcpu/gi，/w并且/c任务/gi之间/f有/vyou很好/ad的/ude1隔离/vn（/w就/d像/v进程/gi那样/rzv隔离/vn）/w，/w那么/c效率/gi就/d能/v提高/v。/w