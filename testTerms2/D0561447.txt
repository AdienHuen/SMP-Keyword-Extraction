#设计模式/nz之/uzhi /x工厂方法/gi，/w工厂方法模式/gi，/w抽象工厂模式/gi
在/p设计模式/nz中/f，/w有/vyou2/nz种/q重要/a的/ude1设计模式/nz，/w工厂方法模式/gi和/cc抽象工厂模式/gi。/w要/v比较/gi准确/a的/ude1理解/gi他们/rr，/w首先/d要/v理解/gi一个/mq概念/gi“/w工厂方法/gi”/w。/w工厂方法/gi：/w何为/c工厂方法/gi。/w按照/pgof/gi所/usuo给/p的/ude1概念/gi，/w如果/c一个/mq方法/gi能够/v“/w生产/gi”一个/nz对象/gi，/w我们/rr就/d可以/v把/pba这个/rz方法/gi叫做/v工厂方法/gi。/w注意/v，/w是/vshi生产/gi，/w不仅仅/d是/vshi返回/v一个/mq对象/gi。/w工厂方法模式/gi：/w个人/n认为/v其/rz更/d倾向/n于/p描述/gi如何/ryv利用/v多态/gi和/cc继承/gi，/w以及/cc得到/v的/ude1好处/gi。/w当/p你/rr使用/gi多态/gi和/cc继承/gi时/qt，/w你/rr就是/v在/p使用/gi工厂方法/gi这种/r模式/gi。/w更/d确切的说/l，/w当/p你/rr在/p父/ng类/gi中/f有/vyou一个/mq方法/gi，/w这个/rz方法/gi的/ude1目的/gi是/vshi用来/v创建/gi一个/mq对象/gi（/w可以/v用/p默认/v实现/gi，/w也/d可以/v没有/v）/w，/w你/rr在/p子类/gm冲/v重载/vn这个/rz方法/gi，/w用来/v创建/gi一个/mq具体/a的/ude1对象/gi，/w那么/c这种/r机制/gi就是/v“/w工厂方法模式/gi”/w。/w按照/pgof/gi所/usuo给/p的/ude1定义/gi，/w工厂方法模式/gi有/vyou其/rz严/a的/ude1形式/gi定义/gi，/w即/v该/rz模式/gi只/d对外/vn（/w客户端/gi）/w提供/v一个/mq产品/gi。/w抽象工厂模式/gi：/w当/p利用/v“/w工厂方法/gi”/w的/ude1概念/gi（/w重载/vn//nz多态/gi）/w对/p工厂方法模式/gi进行/vn扩展/gi得到/v一/nz种/q新的/a模式/gi，/w使/v新模式/nz能够/v生产/gi一/nz组/n相关/vn或/c相互依赖/nz的/ude1对象/gi。/w该/rz新的/a模式/gi即为/c抽象工厂模式/gi。/w由此/d可以/v看出/v，/w工厂方法模式/gi和/cc抽象工厂模式/gi是/vshi可以/v相互/d转化/gi的/ude1。/w