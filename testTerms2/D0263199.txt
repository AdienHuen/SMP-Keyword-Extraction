#SVN/nz学习/gi
前两天/i机房/gi合作/vn，/w搭建/vsvn/gi服务器/gi，/w真正/d实践/gi一下/m，/w才/d对/psvn/gi如何/ryv使用/gi，/w如何/ryv建立/gi有/vyou了/ule更多/ad的/ude1了解/v，/w这次/r主要/b学习/gi一下/msvn/gi。/w一/nz、/w是/vshi什么/ry？/wsvn/gi是/vshisubversion/nz的/ude1简称/v，/w是/vshi一个/mq开放/gi源代码/gi的/ude1版本控制系统/gi，/w相对于/nzrcs/nz//nzcvs/gi，/w它/rr采用/v了/ule分支/n管理系统/gi。/w有/vyou两/nz种/q运行/gi方式/n：/w独立/a服务器/gi和/cc借助于/vapache/gi,/nz两/nz种/q方式/n都/d各/rz有/vyou利弊/n，/w用户/gi自行/d选择/gi。/w分为/v客户端/gi和/cc服务端/nz，/w客户端/gitortoisesvn/nz是/vshi用户/gi可以/v检出/nz和/cc上传/v代码/gi，/w服务器/gi是/vshi存放/v这些/rz数据/gi，/w并且/c供/vi大家/rr运行/gi的/ude1。/w二/nz、/w如何/ryv工作/gi？/wsvn/gi的/ude1工作原理/gi：/w在/p一台/nz服务器/gi上/f建立/gi后/f一个/mq源代码/gi库/n，/w库/n里面/f可以/v存放/v许多不同/nz项目/gi的/ude1源程序/gi。/w有/vyou源代码/gi管理员/gi统一/vn管理/gi这些/rz源程序/gi，/w每个/r用户/gi在/p使用/gi源代码/gi卡/n之前/f，/w首先/d要/v把/pba源代码/gi库/n项目/gi文件/gi下载/gi到/v本地/gi，/w然后/c开发人员/n可以/v在/p本地/gi修改/gi，/w然后/c用/psvn/gi命令/gi进行/vn提交/gi，/w由/p代码/gi统一/vn管理/gi修改/gi。/w解决/v的/ude1问题/gi：/w系统开发/gi时候/n，/w代码/gi管理混乱/l，/w解决/v代码/gi冲突/gi困难/an，/w在/p代码/gi整合/gi期间/f一番/mq了/ulebug/gi，/w无法/v对/p代码/gi的/ude1拥有者/n进行/vn权限/gi控制/vn；/w项目/gi不同/a版本/n的/ude1发布/gi困/vi哪/ry。/wsvn/gi工作原理/gi示意图/gi：/w三/nz、/w具体/a搭建/v步骤/gi：/w1/nz、/w下载/gi一/nz下/f两/nz个/q软件/gi：/w2/nz、/w然后/c是/vshi详细/gi的/ude1安装/gi步骤/gi，/w服务端/nz和/cc本地/gi使用/gi的/ude1，/w都/d齐全/a了/ule。/w，/w作者/nnt写/v的/ude1特别/d的/ude1详细/gi，/w所以/c我/rr就/d不/d赘述/vi了/ule，/w我/rr按照/p这个/rz步骤/gi，/w成功/a地/ude2建立/gi成功/a了/ule。/w3/nz、/w注意事项/nz，/w安装/gi的/ude1过程/gi，/w要/v严/a按照/p文档/gi和/cc截图/vn，/w该/rz打/v对/p勾/v的/ude1相关/vn的/ude1选项/gi要/v勾/v选/v。/w不然/c很容易/nz出/vf错误/gi。/wsvn/gi的/ude1地址/gi最好/d是/vshiip/gi，/w这样/rzv修改/gi的/ude1时候/n容易/ad修改/gi，/w改成/v别的/rzv名字/n以后/f不好/a修改/gi。/w四/nz//nz如何/ryv使用/gi1./nz绿色/n的/ude1对/p勾一个/nz新/a检出/nz的/ude1工作/gi复用/gi使用/gi绿色/n的/ude1勾/v做/v重载/vn，/w表示/vsubversion /nz状态/gi正常/a。/w2./nz红色/gi圆圈/n感叹号/n在/p /x编辑/gi一个/mq文件/gi之后/f，/w状态/gi就/d变成/v了/ule已经/d修改/gi，/w而/cc图标/gi重载/vn就/d变成/v了/ule红色/gi感叹号/n。/w说明/v你/rr本地/gi代码/gi跟/p库上/nz代码/gi没有/v保持一致/nz。/w /x通过/p这种/r方式/n很容/nz的/ude1看出/v哪些/ry文件/gi从/p你/rr上次/t更新/gi之后/f被/pbei修改/gi过/uguo。/w3./nz黄色/n感叹号/n  /x如果/c在/p提交/gi的/ude1过程/gi中/f出现/v了/ule冲突/gi，/w图标/gi就/d变成/v了/ule黄色/n感叹号/n。/w冲突/gi的/ude1含义/n：/w；/w你/rr对/p /x某个/rz文件夹/n进行/vn了/ule修改/gi，/w别人/rr也/d对/p这个/rz文件夹/n进行/vn了/ule修改/gi。/w别人/rr抢/v在/p你/rr提交/gi之前/f提交/gi，/w这时候/rzt你/rr再/d提交/gi，/w就/d会/v被/pbei提示/gi发生/v了/ule冲突/gi，/w而/cc不/d允许/v你/rr提交/gi，/w防止/gi你/rr的/ude1修改/gi覆盖/gi了/ule别人/rr的/ude1修改/gi。/w如何/ryv解决/v冲突/gi：/w如果/c你/rr确认/v你/rr的/ude1修改/gi是/vshi无效/vi的/ude1，/w那么/c就/d用/ptsvn/nz还原/gi你/rr的/ude1修改/gi。/w如果/c你/rr认为/v你/rr的/ude1修改/gi /x是/vshi正确/a的/ude1，/w别人/rr的/ude1提交/gi时/qt无效/vi的/ude1，/w那么/c用/ptsvn/nz先/d标记/gi为/pi/nz“/w解决/v冲突/gi”/w，/w然后/c就/d可以/v提交/gi了/ule。/w如果/c你/rr认为/v你们/rr两/nz个人/n的/ude1都/d有效/gi，/w那么/c就/d把/pba别人/rr的/ude1修改/gi手动/b合并/gi到/v你/rr的/ude1修改/gi，/w然后/c使用/gitsvn/nz标注/v为/p“/w解决/v冲突/gi”/w，/w然后/c就/d可以/v提交/gi了/ule。/w进入/v文件夹/n，/w寻找/v有/vyou叹号/nz的/ude1地方/n，/w这些/rz文件/gi就是/v发生冲突/n的/ude1地方/n。/w4./nz如果/c一个/mq文件/gi设置/gi成为/v了/ule一个/mq n/nz：/wneeds/nz-/nzlock/nz属性/gi，/wsubversion /nz会/v让/v此/rzs文件/gi只读/v，/w直到/v你/rr获得/v文件/gi锁/v。/w5./nz红色/gi的/ude1叉/n。/w表示/v当前/t文件夹/n下/f的/ude1某些/rz文件/gi或/c文件夹/n已经/d被/pbei计划/gi从/p版本控制/gi中/f删除/gi，/w或/c是/vshi该/rz文件夹/n下/f某个/rz受控/v的/ude1文件/gi丢失/v了/ule。/w6./nz米/q字号/n说明/v你/rr本地/gi有/vyou没有/v提交/gi的/ude1本地/gi代码/gi。/w小结/n：/w通过/p对/psvn/gi服务器/gi的/ude1搭建/v，/w觉得/v挺/d神奇/a的/ude1，/w原来/d都/d是/vshi用/p别人/rr的/ude1，/w现在/t自己/rr也/d可以/v建立/gi自己/rr的/ude1啦/y，/w挺好玩/a的/ude1。/w通过/p对/psvn/gi的/ude1在/p回顾/v，/w我/rr也/d明白/v了/ule软件/gi代码/gi版本控制/gi管理/gi的/ude1重要性/n。/w作为/p一个/mq软开/nz开发人员/n，/w要/v善于/v利用/v周围/f的/ude1一切/rz可以/v利用/v的/ude1资源/gi，/w优化/gi我们/rr的/ude1工作/gi环境/n，/w提高/v我们/rr的/ude1效率/gi。/w