#软考/gi之/uzhi设计模式/nz（/w策略/gi）/w
略模模式/gi是/vshi定义/gi了/ule一系列/b的/ude1算法/gi，/w并/cc将/d每/rz一个/mq算法/gi封装/gi起来/vf，/w而且/c使/v它们/rr还/d可以/v相互/d替换/v。/w策略模式/gi让/v算法/gi独立/a于/p使用/gi它/rr的/ude1客户/n而/cc独立/a变化/gi。/w自己/rr对/p这/rzv句话/q的/ude1理解/gi是/vshi，/w针对/gi一个/mq问题/gi，/w在/p不同/a环境/n下/f，/w根据/p实际/n情况/n，/w所/usuo得出/v解决/v的/ude1方式/n不同/a。/w我们/rr将/d这些/rz解决/v的/ude1方式/n，/w每/rz一个/mq都/d封装/gi起来/vf。/w根据/p外部/f因素/gi，/w进行/vn选择性/n使用/gi。/w下面/f举一个/nz超市/gi购物/vn的/ude1例子/gi来/vf理解/gi策略模式/gi的/ude1好处/gi。/w /x假如/c说/v，/w到/v超市/gi购物/vn，/w平常/a时间/gi，/w在/p超市/gi结账/gi时/qt都/d是/vshi，/w买了/v多少/ry钱/n的/ude1东西/n，/w就/d应该/v付/v多少/ry钱/n。/w而/cc现在/t正好/z赶上/v五一劳动节/nz，/w超市/gi经理/gi想/v搞/v一个/mq打折/v活动/gi进行/vn促销/vn，/w这/rzv是/vshi商场/nis的/ude1收银/vn系统/gi就/d满足/v不了/v超市/gi的/ude1需求/gi了/ule，/w那/rzv怎么办/ryv呢/y？/w改/v代码/gi吗/y？/w这样/rzv太麻烦/nz了/ule，/w如果/c促销/vn时间/gi过/uguo了/ule，/w不/d打折/v了/ule，/w我们/rr难道/d还/d得/ude3将/d原来/d改动/vn的/ude1代码/gi在/p改回来/i吗/y？/w还有/v如果/c经理/gi还/d想/v进行/vn返利/nz的/ude1促销/vn活动/gi的话/udh，/w那样/rzv还/d得/ude3去/vf改动/vn代码/gi？/w这样/rzv来回/vd的/ude1改动/vn代码/gi？/w不仅/c不方便/nz，/w还/d容易/ad出现/v错误/gi，/w并且/c这/rzv违背/v了/ule设计模式/nz的/ude1开放/gi封闭/gi原则/gi。/w那/rzv要/v怎样/ryv才/d不/d违反/v开放/gi封闭/gi原则/gi呢/y？/w那/rzv就要/d用/p到/v我/rr开头/n写道/v策略模式/gi。/w现在/t超市/gi不是/c有/vyou3/nz种/q结账/gi的/ude1方式/n吗/y？/w他们/rr都/d是/vshi做/v结账/gi的/ude1事/n，/w那么/c我们/rr就/d可以/v将/d他们/rr共同点/n结账/gi进行/vn抽象/gi，/w建立/gi一个/mq结账/gi的/ude1抽象类/gi，/w然后/c用/p这/rzv三种/nz方式/n去/vf继承/gi它/rr。/w如/v下图/n。/w /x图/gi中的/vcontext/nz是/vshi根据/p传递/v进来/vf的/ude1参数/gi，/w来/vf选择/gi具体/a的/ude1策略模式/gi。/w /x代码/gi：/w /x使用/gi设计模式/nz是/vshi为了/p可/v重用/gi代码/gi、/w让/v代码/gi更容易/nz被/pbei他人/rr理解/gi、/w保证/v代码/gi可靠性/gi，/w同时/c他/rr能/v降低/v代码/gi的/ude1冗余/n，/w方便/a了/ule后期/f的/ude1维护/gi操作/gi。/w