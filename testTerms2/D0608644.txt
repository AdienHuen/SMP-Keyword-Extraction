#自己/rr动手/gi写/v搜索引擎/gi
 /x实现/gi了/ule一个/mq搜索引擎/gi，/w可以/v检索/gicsdn/gi网站/gi的/ude1所有/b博客/gi文章/gi，/w当然/d，/w最新/a的/ude1文章/gi是/vshi没有/v的/ude1。/w /x先/d说/v下/f项目/gi思路/gi吧/y，/w /x整个/b项目/gi分为/v6/nz个子/n程序/gi：/w /x爬虫/gi1/nz：/w爬取/nz所有/bcsdn/gi网站/gi的/ude1网页/gi，/w并/cc将/d爬到/v的/ude1博客/gi文章/giurl/gi存入/v数据库/gi。/w（/wpython/gi）/w  /x爬虫/gi2/nz：/w从/p数据库/gi中/f取/v文章/giurl/gi，/w并/cc爬取/nz文章内容/nz到/v数据库/gi。/w(/nzpython/gi)/nz /x分词/gi程序/gi：/w利用/vfriso/nz分/qt词库/n，/w将/d所有/b文章内容/nz切/v分成/vi词语/n。/w(/nzc/nz//nzc/nz)/nz /x建立/gi倒排/v索引/gi程序/gi：/w处理/vn所有/b分词/gi程序/gi产生/v的/ude1结果/n文件/gi，/w建立/gi倒排/v索引/gi。/w（/wc/nz//nzc/nz)/nz /x搜索/gi程序/gi：/w将/d输入/v句子/n切/v分成/vi关键词/gi，/w并/cc根据/p关键词/gi和/cc倒排/v索引/gi文件/gi计算/gi出/vf相关文章/ns的/ude1tf/nz-/nzidf/nz(/nz词频-逆/nz文件/gi频率/n)/nz，/w最后/f根据/ptf/nz-/nzidf/nz对/p搜索/gi结果/n进行/vn排序/gi。/w(/nzc/nz//nzc/nz)/nz /x搜索/gi网站/gi：/w类/gi百度/ntc等/udeng搜索引擎/gi，/w应用/gi的/ude1入口/n，/w输入/v搜索/gi的/ude1内容/gi，/w输出/gi搜索/gi的/ude1结果/n。/w(/nzjava/gi)/nz /x程序/gi比较复杂/l，/w又/d用/p到/v了/ule不同/a的/ude1语言/gi，/w所以/c分成/vi了/ule这么/rz多/a子/ng程序/gi。/w /x下面/f是/vshi最终/d的/ude1运行/gi效果/gi，/w看起来/v还/d不错/a /x主页/gi（/w百度/ntc即/v视感/nz）/w搜索/gi结果/n：/w /x界面/gi比较简单/l，/w不过/c确实/ad可以/v搜索/gi了/ule，/w点击/v蓝色/n字/n就/d会/v打开/gi博文/nz原/b地址/gi。/w /x整个/b项目/gi做/v了/ule很/d多/a天/qt，/w做/v的/ude1也/d很/d很/d辛苦/a，/w不过/c做出/v来/vf后/f还是/c相当/d有/vyou成就感/n的/ude1。/w感兴趣/a的/ude1可以/v试试/v。/w